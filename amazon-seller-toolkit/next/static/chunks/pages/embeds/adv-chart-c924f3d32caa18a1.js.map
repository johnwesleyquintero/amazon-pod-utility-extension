{"version":3,"file":"static/chunks/pages/embeds/adv-chart-c924f3d32caa18a1.js","mappings":"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","sources":["webpack://_N_E/?df2f","webpack://_N_E/./src/hooks/useFetchUserSettings.ts","webpack://_N_E/./src/utils/ExtensionUtils.ts","webpack://_N_E/./src/utils/RequestProxy.ts","webpack://_N_E/../../packages/riptech/minimal-ui/src/utils/with-loading-props.tsx","webpack://_N_E/../../packages/riptech/minimal-ui/src/components/chart/classes.ts","webpack://_N_E/../../packages/riptech/minimal-ui/src/components/chart/chart-loading.tsx","webpack://_N_E/../../packages/riptech/minimal-ui/src/components/chart/chart.tsx","webpack://_N_E/../../packages/riptech/minimal-ui/src/components/chart/use-chart.ts","webpack://_N_E/../../packages/riptech/minimal-ui/src/components/chart/chart-select.tsx","webpack://_N_E/../../packages/riptech/minimal-ui/src/components/chart/chart-legends.tsx","webpack://_N_E/../../packages/riptech/minimal-ui/src/components/chart/index.ts","webpack://_N_E/./src/utils/request/InlinePageRequest/AdvRequest.ts","webpack://_N_E/./src/utils/AdvChartUtils.ts","webpack://_N_E/./src/components/advChart/hooks/useAmazonDateRange.ts","webpack://_N_E/./src/components/advChart/hooks/usePageMarketplace.ts","webpack://_N_E/./src/components/advChart/SellerUtilitiesHeaderLogo.tsx","webpack://_N_E/./src/components/advChart/MetricsHeader.tsx","webpack://_N_E/./src/components/advChart/AdvChart.tsx","webpack://_N_E/./src/pages/embeds/adv-chart.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/embeds/adv-chart\",\n      function () {\n        return require(\"private-next-pages/embeds/adv-chart.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/embeds/adv-chart\"])\n      });\n    }\n  ","import { useQuery } from '@tanstack/react-query';\n\nimport RequestProxy, { FETCH_USER_DATA_QUERY_KEY } from '../utils/RequestProxy';\n\nexport default function useFetchUserSettings() {\n  return useQuery({\n    queryFn: RequestProxy.fetchUserData,\n    queryKey: [FETCH_USER_DATA_QUERY_KEY],\n    meta: {\n      errorMessage: 'Failed to load Seller Utilities user data'\n    }\n  });\n}\n","import type { Moment } from 'moment-timezone';\n\ntype WatchObjectChangeCallback = (method: string, ...args: Array<any>) => void;\n\nexport default class ExtensionUtils {\n  static getIsoDateOnly(value: Moment) {\n    return value.toISOString().split('T').shift()!;\n  }\n\n  static watchAnyObject = (\n    object: Record<string, any> = {},\n    methods: Array<string> = [],\n    callbackBefore: WatchObjectChangeCallback = () => null,\n    callbackAfter: WatchObjectChangeCallback = () => null\n  ) => {\n    for (const method of methods) {\n      const original = object[method].bind(object);\n      const newMethod = (...args: Array<any>) => {\n        callbackBefore(method, ...args);\n        // eslint-disable-next-line prefer-spread\n        const result = original.apply(null, args);\n        callbackAfter(method, ...args);\n        return result;\n      };\n      object[method] = newMethod.bind(object);\n    }\n  };\n}\n","import type { ApiError } from '@riptech/utils/src/errors/ErrorResponse';\nimport { ErrorResponse } from '@riptech/utils/src/errors/ErrorResponse';\nimport type { SellerCentralMarketplace } from '@seller-utilities/database';\nimport type { SalesAndTrafficReportResponse } from '@seller-utilities/types';\n\nimport type { FetchUserDataResponse } from '../pages/api/account/fetch-user-data';\nimport type { AmazonAppConfigUserInfo } from './AdvChartUtils';\nimport type { AmazonDateRange } from './request/InlinePageRequest/AdvRequest';\n\nexport type RequestProxyType = 'fetchUserData' | 'fetchSalesAndTrafficReport' | 'invalidateUserDataCache' | 'getData';\n\nexport interface RequestProxyMessage {\n  type: RequestProxyType;\n}\n\ntype ProxyPayload<T> =\n  | {\n      type: 'error';\n      payload: {\n        message: string;\n        statusCode: ApiError;\n      };\n    }\n  | { type: 'success'; payload: T };\n\nexport interface FetchUserDataMessage extends RequestProxyMessage {\n  url: string;\n}\nexport interface FetchSalesAndTrafficReportMessage extends RequestProxyMessage {\n  amazonDateRange: AmazonDateRange;\n  amazonAppConfigUserInfo?: AmazonAppConfigUserInfo;\n  marketplace: SellerCentralMarketplace;\n}\n\nexport interface InvalidateUserDataCacheMessage extends RequestProxyMessage {\n  url: string;\n}\n\nexport const FETCH_USER_DATA_QUERY_KEY = 'fetchUserData';\n\nexport default class RequestProxy {\n  static readonly USER_DATA_URL = `${process.env.NEXT_PUBLIC_CLIENT_URL}/api/account/fetch-user-data`;\n\n  static handleError<T>(value: Promise<ProxyPayload<T>>) {\n    return value.then((data: ProxyPayload<T>) => {\n      if (data.type === 'error') {\n        throw new ErrorResponse(data.payload.statusCode, {\n          message: data.payload.message\n        });\n      }\n      return data.payload;\n    });\n  }\n\n  static fetchUserData = () =>\n    RequestProxy.handleError<FetchUserDataResponse>(\n      chrome.runtime.sendMessage<FetchUserDataMessage, ProxyPayload<FetchUserDataResponse>>(\n        process.env.NEXT_PUBLIC_EXTENSION_ID,\n        {\n          type: 'fetchUserData',\n          url: RequestProxy.USER_DATA_URL\n        }\n      )\n    );\n\n  static fetchSalesAndTrafficReport = (\n    marketplace: SellerCentralMarketplace,\n    amazonDateRange: AmazonDateRange,\n    amazonAppConfigUserInfo?: AmazonAppConfigUserInfo\n  ) =>\n    RequestProxy.handleError<SalesAndTrafficReportResponse>(\n      chrome.runtime.sendMessage<FetchSalesAndTrafficReportMessage, ProxyPayload<SalesAndTrafficReportResponse>>(\n        process.env.NEXT_PUBLIC_EXTENSION_ID,\n        {\n          amazonAppConfigUserInfo,\n          amazonDateRange,\n          marketplace,\n          type: 'fetchSalesAndTrafficReport'\n        }\n      )\n    );\n\n  static sendInvalidateUserDataCache = async (queryKey: string): Promise<void> => {\n    let url: string | undefined;\n    switch (queryKey) {\n      case FETCH_USER_DATA_QUERY_KEY: {\n        url = RequestProxy.USER_DATA_URL;\n        break;\n      }\n      default:\n        break;\n    }\n    if (url) {\n      await chrome.runtime.sendMessage<InvalidateUserDataCacheMessage, undefined>(\n        process.env.NEXT_PUBLIC_EXTENSION_ID,\n        {\n          type: 'invalidateUserDataCache',\n          url\n        }\n      );\n    }\n  };\n}\n","import { useContext, createContext } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport function withLoadingProps<T extends {}>(loader: (useLoadingProps: () => T) => React.ComponentType<T>): React.ComponentType<T> {\n  const LoadingPropsContext = createContext<T>({} as T);\n  const useLoadingProps = () => useContext(LoadingPropsContext);\n  const DynamicComponent = loader(useLoadingProps);\n  const WithLoadingPropsComponent: React.FC<T> = props => <LoadingPropsContext.Provider value={props} data-sentry-element=\"unknown\" data-sentry-component=\"WithLoadingPropsComponent\" data-sentry-source-file=\"with-loading-props.tsx\">\n      <DynamicComponent {...props} data-sentry-element=\"DynamicComponent\" data-sentry-source-file=\"with-loading-props.tsx\" />\n    </LoadingPropsContext.Provider>;\n  return WithLoadingPropsComponent;\n}","// ----------------------------------------------------------------------\n\nexport const chartClasses = { root: 'mnl__chart__root' };\n","import type { BoxProps } from '@mui/material/Box';\nimport Box from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\nimport type { ChartBaseProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = BoxProps & {\n  type: ChartBaseProps['type'];\n};\nexport function ChartLoading({\n  sx,\n  type,\n  ...other\n}: Props) {\n  const circularTypes = ['donut', 'radialBar', 'pie', 'polarArea'];\n  return <Box alignItems=\"center\" justifyContent=\"center\" sx={{\n    top: 0,\n    left: 0,\n    width: 1,\n    zIndex: 9,\n    height: 1,\n    p: 'inherit',\n    overflow: 'hidden',\n    position: 'absolute',\n    borderRadius: 'inherit',\n    ...sx\n  }} {...other} data-sentry-element=\"Box\" data-sentry-component=\"ChartLoading\" data-sentry-source-file=\"chart-loading.tsx\">\n      <Skeleton variant=\"circular\" sx={{\n      width: 1,\n      height: 1,\n      borderRadius: 'inherit',\n      ...(circularTypes.includes(type!) && {\n        borderRadius: '50%'\n      })\n    }} data-sentry-element=\"Skeleton\" data-sentry-source-file=\"chart-loading.tsx\" />\n    </Box>;\n}","import type { BoxProps } from '@mui/material/Box';\nimport dynamic from 'next/dynamic';\nimport Box from '@mui/material/Box';\nimport { withLoadingProps } from '../../utils/with-loading-props';\nimport { chartClasses } from './classes';\nimport { ChartLoading } from './chart-loading';\nimport type { ChartProps, ChartBaseProps, ChartLoadingProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype WithLoadingProps = ChartBaseProps & {\n  loading?: ChartLoadingProps;\n};\nconst ApexChart = withLoadingProps<WithLoadingProps>(props => dynamic(() => import('react-apexcharts').then(mod => mod.default), {\n  ssr: false,\n  loading: () => {\n    const {\n      loading,\n      type\n    } = props();\n    return loading?.disabled ? null : <ChartLoading type={type} sx={loading?.sx} />;\n  }\n}));\nexport function Chart({\n  sx,\n  type,\n  series,\n  height,\n  options,\n  className,\n  loadingProps,\n  width = '100%',\n  ...other\n}: BoxProps & ChartProps) {\n  return <Box dir=\"ltr\" className={chartClasses.root.concat(className ? ` ${className}` : '')} sx={{\n    width,\n    height,\n    flexShrink: 0,\n    borderRadius: 1.5,\n    position: 'relative',\n    ...sx\n  }} {...other} data-sentry-element=\"Box\" data-sentry-component=\"Chart\" data-sentry-source-file=\"chart.tsx\">\n      <ApexChart type={type} series={series} options={options} width=\"100%\" height=\"100%\" loading={loadingProps} data-sentry-element=\"ApexChart\" data-sentry-source-file=\"chart.tsx\" />\n    </Box>;\n}","import { useTheme } from '@mui/material/styles';\n\nimport { varAlpha } from '../../theme/styles';\n\nimport type { ChartOptions } from './types';\n\n// ----------------------------------------------------------------------\n\nexport function useChart(options?: ChartOptions): ChartOptions {\n  const theme = useTheme();\n\n  const LABEL_TOTAL = {\n    show: true,\n    label: 'Total',\n    color: theme.vars.palette.text.secondary,\n    fontSize: theme.typography.subtitle2.fontSize as string,\n    fontWeight: theme.typography.subtitle2.fontWeight,\n  };\n\n  const LABEL_VALUE = {\n    offsetY: 8,\n    color: theme.vars.palette.text.primary,\n    fontSize: theme.typography.h4.fontSize as string,\n    fontWeight: theme.typography.h4.fontWeight,\n  };\n\n  const RESPONSIVE = [\n    {\n      breakpoint: theme.breakpoints.values.sm, // sm ~ 600\n      options: {\n        plotOptions: {\n          bar: {\n            borderRadius: 3,\n            columnWidth: '80%',\n          },\n        },\n      },\n    },\n    {\n      breakpoint: theme.breakpoints.values.md, // md ~ 900\n      options: {\n        plotOptions: {\n          bar: {\n            columnWidth: '60%',\n          },\n        },\n      },\n    },\n    ...(options?.responsive ?? []),\n  ];\n\n  return {\n    ...options,\n\n    /** **************************************\n     * Chart\n     *************************************** */\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      zoom: {\n        enabled: false,\n      },\n      parentHeightOffset: 0,\n      fontFamily: theme.typography.fontFamily,\n      foreColor: theme.vars.palette.text.disabled,\n      ...options?.chart,\n      animations: {\n        enabled: true,\n        speed: 360,\n        animateGradually: { enabled: true, delay: 120 },\n        dynamicAnimation: { enabled: true, speed: 360 },\n        ...options?.chart?.animations,\n      },\n    },\n\n    /** **************************************\n     * Colors\n     *************************************** */\n    colors: options?.colors ?? [\n      theme.palette.primary.main,\n      theme.palette.warning.main,\n      theme.palette.info.main,\n      theme.palette.error.main,\n      theme.palette.success.main,\n      theme.palette.warning.dark,\n      theme.palette.success.darker,\n      theme.palette.info.dark,\n      theme.palette.info.darker,\n    ],\n\n    /** **************************************\n     * States\n     *************************************** */\n    states: {\n      ...options?.states,\n      hover: {\n        ...options?.states?.hover,\n        filter: { type: 'darken', value: 0.88, ...options?.states?.hover?.filter },\n      },\n      active: {\n        ...options?.states?.active,\n        filter: { type: 'darken', value: 0.88, ...options?.states?.active?.filter },\n      },\n    },\n\n    /** **************************************\n     * Fill\n     *************************************** */\n    fill: {\n      opacity: 1,\n      ...options?.fill,\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 0,\n        opacityFrom: 0.4,\n        opacityTo: 0,\n        stops: [0, 100],\n        ...options?.fill?.gradient,\n      },\n    },\n\n    /** **************************************\n     * Data labels\n     *************************************** */\n    dataLabels: {\n      enabled: false,\n      ...options?.dataLabels,\n    },\n\n    /** **************************************\n     * Stroke\n     *************************************** */\n    stroke: {\n      width: 2.5,\n      curve: 'smooth',\n      lineCap: 'round',\n      ...options?.stroke,\n    },\n\n    /** **************************************\n     * Grid\n     *************************************** */\n    grid: {\n      strokeDashArray: 3,\n      borderColor: theme.vars.palette.divider,\n      ...options?.grid,\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        ...options?.grid?.padding,\n      },\n      xaxis: {\n        lines: {\n          show: false,\n        },\n        ...options?.grid?.xaxis,\n      },\n    },\n\n    /** **************************************\n     * Axis\n     *************************************** */\n    xaxis: {\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n      ...options?.xaxis,\n    },\n    yaxis: Array.isArray(options?.yaxis)\n      ? options?.yaxis\n    : {\n      tickAmount: 5,\n      ...options?.yaxis,\n    },\n\n    /** **************************************\n     * Markers\n     *************************************** */\n    markers: {\n      size: 0,\n      strokeColors: theme.vars.palette.background.paper,\n      ...options?.markers,\n    },\n\n    /** **************************************\n     * Tooltip\n     *************************************** */\n    tooltip: {\n      theme: 'false',\n      fillSeriesColor: false,\n      x: {\n        show: true,\n      },\n      ...options?.tooltip,\n    },\n\n    /** **************************************\n     * Legend\n     *************************************** */\n    legend: {\n      show: false,\n      position: 'top',\n      fontWeight: 500,\n      fontSize: '13px',\n      horizontalAlign: 'right',\n      ...options?.legend,\n      markers: {\n        shape: 'circle',\n        ...options?.legend?.markers,\n      },\n      labels: {\n        colors: theme.vars.palette.text.primary,\n        ...options?.legend?.labels,\n      },\n      itemMargin: {\n        horizontal: 8,\n        vertical: 8,\n        ...options?.legend?.itemMargin,\n      },\n    },\n\n    /** **************************************\n     * plotOptions\n     *************************************** */\n    plotOptions: {\n      ...options?.plotOptions,\n      // plotOptions: Bar\n      bar: {\n        borderRadius: 4,\n        columnWidth: '48%',\n        borderRadiusApplication: 'end',\n        ...options?.plotOptions?.bar,\n      },\n\n      // plotOptions: Pie + Donut\n      pie: {\n        ...options?.plotOptions?.pie,\n        donut: {\n          ...options?.plotOptions?.pie?.donut,\n          labels: {\n            show: true,\n            ...options?.plotOptions?.pie?.donut?.labels,\n            value: {\n              ...LABEL_VALUE,\n              ...options?.plotOptions?.pie?.donut?.labels?.value,\n            },\n            total: {\n              ...LABEL_TOTAL,\n              ...options?.plotOptions?.pie?.donut?.labels?.total,\n            },\n          },\n        },\n      },\n\n      // plotOptions: Radialbar\n      radialBar: {\n        ...options?.plotOptions?.radialBar,\n        hollow: {\n          margin: -8,\n          size: '100%',\n          ...options?.plotOptions?.radialBar?.hollow,\n        },\n        track: {\n          margin: -8,\n          strokeWidth: '50%',\n          background: varAlpha(theme.vars.palette.grey['500Channel'], 0.16),\n          ...options?.plotOptions?.radialBar?.track,\n        },\n        dataLabels: {\n          ...options?.plotOptions?.radialBar?.dataLabels,\n          value: {\n            ...LABEL_VALUE,\n            ...options?.plotOptions?.radialBar?.dataLabels?.value,\n          },\n          total: {\n            ...LABEL_TOTAL,\n            ...options?.plotOptions?.radialBar?.dataLabels?.total,\n          },\n        },\n      },\n\n      // plotOptions: Radar\n      radar: {\n        ...options?.plotOptions?.radar,\n        polygons: {\n          fill: {\n            colors: ['transparent'],\n          },\n          strokeColors: theme.vars.palette.divider,\n          connectorColors: theme.vars.palette.divider,\n          ...options?.plotOptions?.radar?.polygons,\n        },\n      },\n\n      // plotOptions: polarArea\n      polarArea: {\n        rings: {\n          strokeColor: theme.vars.palette.divider,\n        },\n        spokes: {\n          connectorColors: theme.vars.palette.divider,\n        },\n        ...options?.plotOptions?.polarArea,\n      },\n\n      // plotOptions: heatmap\n      heatmap: {\n        distributed: true,\n        ...options?.plotOptions?.heatmap,\n      },\n    },\n\n    /** **************************************\n     * Responsive\n     *************************************** */\n    responsive: RESPONSIVE.reduce((acc: typeof RESPONSIVE, cur) => {\n      if (!acc.some((item) => item.breakpoint === cur.breakpoint)) {\n        acc.push(cur);\n      }\n      return acc;\n    }, []),\n  };\n}\n","import type { Theme, SxProps } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { varAlpha } from '../../theme/styles';\nimport { Iconify } from '../iconify';\nimport { usePopover, CustomPopover } from '../custom-popover';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  options: string[];\n  value: string;\n  onChange: (newValue: string) => void;\n  slotProps?: {\n    button?: SxProps<Theme>;\n    popover?: SxProps<Theme>;\n  };\n};\nexport function ChartSelect({\n  options,\n  value,\n  onChange,\n  slotProps,\n  ...other\n}: Props) {\n  const popover = usePopover();\n  return <>\n      <ButtonBase onClick={popover.onOpen} sx={{\n      pr: 1,\n      pl: 1.5,\n      gap: 1.5,\n      height: 34,\n      borderRadius: 1,\n      typography: 'subtitle2',\n      border: theme => `solid 1px ${varAlpha(theme.vars.palette.grey['500Channel'], 0.24)}`,\n      ...slotProps?.button\n    }} {...other} data-sentry-element=\"ButtonBase\" data-sentry-source-file=\"chart-select.tsx\">\n        {value}\n\n        <Iconify width={16} icon={popover.open ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'} data-sentry-element=\"Iconify\" data-sentry-source-file=\"chart-select.tsx\" />\n      </ButtonBase>\n\n      <CustomPopover open={popover.open} anchorEl={popover.anchorEl} onClose={popover.onClose} data-sentry-element=\"CustomPopover\" data-sentry-source-file=\"chart-select.tsx\">\n        <MenuList sx={slotProps?.popover} data-sentry-element=\"MenuList\" data-sentry-source-file=\"chart-select.tsx\">\n          {options.map(option => <MenuItem key={option} selected={option === value} onClick={() => {\n          popover.onClose();\n          onChange(option);\n        }}>\n              {option}\n            </MenuItem>)}\n        </MenuList>\n      </CustomPopover>\n    </>;\n}","import type { BoxProps } from '@mui/material/Box';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport const StyledLegend = styled(Box)(({\n  theme\n}) => ({\n  gap: 6,\n  alignItems: 'center',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  fontSize: theme.typography.pxToRem(13),\n  fontWeight: theme.typography.fontWeightMedium\n}));\nexport const StyledDot = styled(Box)(() => ({\n  width: 12,\n  height: 12,\n  flexShrink: 0,\n  display: 'flex',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'currentColor'\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = BoxProps & {\n  labels?: string[];\n  colors?: string[];\n  values?: string[];\n  sublabels?: string[];\n  icons?: React.ReactNode[];\n};\nexport function ChartLegends({\n  icons,\n  values,\n  sublabels,\n  labels = [],\n  colors = [],\n  ...other\n}: Props) {\n  return <Box gap={2} display=\"flex\" flexWrap=\"wrap\" {...other} data-sentry-element=\"Box\" data-sentry-component=\"ChartLegends\" data-sentry-source-file=\"chart-legends.tsx\">\n      {labels?.map((series, index) => <Stack key={series} spacing={1}>\n          <StyledLegend>\n            {icons?.length ? <Box component=\"span\" sx={{\n          color: colors[index],\n          '& svg, & img': {\n            width: 20,\n            height: 20\n          }\n        }}>\n                {icons?.[index]}\n              </Box> : <StyledDot component=\"span\" sx={{\n          color: colors[index]\n        }} />}\n\n            <Box component=\"span\" sx={{\n          flexShrink: 0\n        }}>\n              {series}\n              {sublabels && <> {` (${sublabels[index]})`}</>}\n            </Box>\n          </StyledLegend>\n\n          {values && <Box sx={{\n        typography: 'h6'\n      }}>{values[index]}</Box>}\n        </Stack>)}\n    </Box>;\n}","export * from './chart';\n\nexport * from './use-chart';\n\nexport type * from './types';\n\nexport * from './chart-select';\n\nexport * from './chart-legends';\n\nexport * from './chart-loading';\n","import createAxiosInstance from '@riptech/utils/src/errors/axiosUtil';\nimport type { SellerCentralMarketplace } from '@seller-utilities/database';\nimport { SUPPORTED_MARKETPLACES } from '@seller-utilities/database';\nimport type { AdvCampaignsResponse } from '@seller-utilities/types';\n\nexport interface AmazonDateRange {\n  start: number;\n  end: number;\n  period: string;\n  startISO: string;\n  endISO: string;\n  granularity: 'WEEK' | 'MONTH' | 'DAY';\n}\n\nexport default class AdvRequest {\n  readonly marketplace: SellerCentralMarketplace;\n\n  readonly axios: ReturnType<typeof createAxiosInstance>;\n\n  constructor(marketplace: SellerCentralMarketplace) {\n    this.marketplace = marketplace;\n    this.axios = createAxiosInstance(false, {\n      axiosConfig: {\n        baseURL: `https://advertising.amazon.${SUPPORTED_MARKETPLACES[marketplace].urlSuffix}`,\n        headers: {\n          Accept: '*/*',\n          ...(typeof window !== 'undefined'\n            ? {\n                'X-Csrf-Token': (\n                  window as Window &\n                    typeof globalThis & {\n                      appConfig: {\n                        appContext: {\n                          csrfToken: string;\n                        };\n                      };\n                    }\n                )?.appConfig?.appContext?.csrfToken\n              }\n            : {})\n        },\n        withCredentials: true\n      }\n    });\n  }\n\n  async fetchAdvCampaigns(entityId: string, amazonDateRange: AmazonDateRange) {\n    return (\n      await this.axios.post<AdvCampaignsResponse>(`/cm/api/campaigns?entityId=${entityId}&`, {\n        endDateUTC: amazonDateRange.end,\n        fields: [\n          'CAMPAIGN_NAME',\n          'CAMPAIGN_ELIGIBILITY_STATUS',\n          'CAMPAIGN_SMART_BIDDING_STRATEGY',\n          'BID_ADJUSTMENT_PERCENTAGE',\n          'CAMPAIGN_STATE',\n          'CAMPAIGN_START_DATE',\n          'CAMPAIGN_END_DATE',\n          'CAMPAIGN_BUDGET',\n          'CAMPAIGN_BUDGET_CURRENCY',\n          'CAMPAIGN_BUDGET_TYPE',\n          'CAMPAIGN_TYPE',\n          'CAMPAIGN_BUDGET_RULE_ID',\n          'CAMPAIGN_BUDGET_RULE_NAME',\n          'CAMPAIGN_RULE_BASED_BUDGET',\n          'CAMPAIGN_EFFECTIVE_BUDGET',\n          'IS_ANY_BUDGET_RULE_ASSOCIATED',\n          'IS_BUDGET_RULE_PROCESSING',\n          'PORTFOLIO_NAME',\n          'NTB_ORDERS',\n          'NTB_PERCENT_OF_ORDERS',\n          'NTB_SALES',\n          'NTB_PERCENT_OF_SALES',\n          'IMPRESSIONS',\n          'CLICKS',\n          'SPEND',\n          'CTR',\n          'CPC',\n          'ORDERS',\n          'SALES',\n          'ACOS',\n          'ROAS',\n          'TOP_OF_SEARCH_IMPRESSION_SHARE',\n          'BID_TYPE',\n          'VIEWABLE_IMPRESSION',\n          'VCPM',\n          'VIDEO_FIRST_QUARTILE',\n          'VIDEO_MIDPOINT',\n          'VIDEO_THIRD_QUARTILE',\n          'VIDEO_COMPLETE',\n          'VIDEO_UNMUTE',\n          'VIEW_THROUGH_RATE',\n          'CLICK_THROUGH_RATE_FOR_VIEWS',\n          'EFFECTIVE_DAILY_COVERAGE',\n          'CPM'\n        ],\n        filters: [\n          {\n            field: 'CAMPAIGN_STATE',\n            not: false,\n            operator: 'EXACT',\n            programType: null,\n            values: ['ENABLED', 'PAUSED', 'ARCHIVED']\n          }\n        ],\n        pageOffset: 0,\n        pageSize: 300,\n        period: amazonDateRange.period,\n        programType: 'SP',\n        queries: [],\n        sort: {\n          field: 'SPEND',\n          order: 'DESC'\n        },\n        startDateUTC: amazonDateRange.start,\n        timeSeriesInterval: amazonDateRange.granularity,\n        version: 'V2'\n      })\n    ).data;\n  }\n}\n","import { ApiError, ErrorResponse } from '@riptech/utils/src/errors/ErrorResponse';\nimport NumberUtils from '@riptech/utils/src/NumberUtils';\nimport type { SellerCentralMarketplace } from '@seller-utilities/database';\nimport _ from 'lodash';\nimport type { Moment } from 'moment-timezone';\nimport moment from 'moment-timezone';\n\nimport ExtensionUtils from './ExtensionUtils';\nimport type { AmazonDateRange } from './request/InlinePageRequest/AdvRequest';\nimport AdvRequest from './request/InlinePageRequest/AdvRequest';\nimport RequestProxy from './RequestProxy';\n\nconst ALLOWED_ADV_METRICS = ['spend', 'sales', 'clicks', 'orders'];\n\nexport type AdvMetric = 'TACOS' | 'AD_SALES' | 'PPC_CONV_RATE' | 'UNIT_SESSION_PERCENTAGE' | 'TOTAL_SALES';\n\ninterface AdvSeriesData {\n  x: number;\n  y: number;\n}\n\ninterface AdvSeriesDataExtended extends AdvSeriesData {\n  numeratorForTotal?: number;\n  denominatorForTotal?: number;\n}\n\nexport interface AdvSeries<T = AdvSeriesData> {\n  key: AdvMetric;\n  total: number;\n  data: Array<T>;\n}\n\ninterface AdvDataRow {\n  dateISO: string;\n  spend: number;\n  sales: number;\n  clicks: number;\n  orders: number;\n}\n\ninterface BdDataRow {\n  dateISO: string;\n  totalSales: number;\n  unitSessionPercentage: number;\n}\n\nexport interface AmazonAppConfigUserInfo {\n  customerId: string;\n  marketplaceId: string;\n}\n\nexport default class AdvChartUtils {\n  private static unifyAmazonDateRange(amazonDateRange: AmazonDateRange): AmazonDateRange {\n    const MIN_START_DATE = moment().utc().subtract(2, 'years').startOf('day');\n    const startDate = moment(amazonDateRange.startISO);\n    if (startDate.isBefore(MIN_START_DATE)) {\n      return {\n        ...amazonDateRange,\n        start: MIN_START_DATE.valueOf(),\n        startISO: ExtensionUtils.getIsoDateOnly(MIN_START_DATE)\n      };\n    }\n    return amazonDateRange;\n  }\n\n  private static getDateIntersection(set1: Array<Moment>, set2: Array<Moment>): Array<Moment> {\n    const intersectionMap = new Map<string, number>();\n    [set1, set2].forEach((set) => {\n      set.forEach((date) => {\n        const dateIso = date.toISOString();\n        if (intersectionMap.has(dateIso)) {\n          intersectionMap.set(dateIso, intersectionMap.get(dateIso)! + 1);\n        } else {\n          intersectionMap.set(dateIso, 0);\n        }\n      });\n    });\n    return Array.from(intersectionMap.keys())\n      .map((dateIso) => {\n        if (intersectionMap.get(dateIso) === 1) {\n          return moment.utc(dateIso);\n        }\n        return null;\n      })\n      .filter((v) => !!v);\n  }\n\n  private static fromScientificNotation(value: number) {\n    return NumberUtils.roundToDecimalPoints(value / 100000, 2);\n  }\n\n  static getAmazonAppConfigUserInfo = _.memoize(\n    (): AmazonAppConfigUserInfo => {\n      // @ts-expect-error\n      const customerId = window?.appConfig?.appContext?.customerId || '';\n      // @ts-expect-error\n      const marketplaceId = window?.appConfig?.appContext?.marketplaceId || '';\n      return {\n        customerId,\n        marketplaceId\n      };\n    },\n    // @ts-expect-error\n    () => window.appConfig\n  );\n\n  static fetchAdvStatistic = async (\n    entityId: string,\n    activeMarketplace: SellerCentralMarketplace,\n    dateRangeFromAmazon: AmazonDateRange,\n    amazonAppConfigUserInfo: AmazonAppConfigUserInfo\n  ) => {\n    const dateRange = AdvChartUtils.unifyAmazonDateRange(dateRangeFromAmazon);\n    try {\n      const advRequest = new AdvRequest(activeMarketplace);\n      const [advData, salesTrafficData] = await Promise.all([\n        advRequest.fetchAdvCampaigns(entityId, dateRange),\n        RequestProxy.fetchSalesAndTrafficReport(activeMarketplace, dateRange, amazonAppConfigUserInfo)\n      ]);\n\n      const {\n        timeSeries: { categories, metrics }\n      } = advData;\n\n      const datesForChart = AdvChartUtils.getDateIntersection(\n        categories.map((date) => moment.utc(date)),\n        salesTrafficData.data.getReportData.rows.map((row) => moment.utc(parseInt(row[0], 10) * 1000))\n      );\n      const datestForChartIsoSet = new Set(datesForChart.map((val) => val.toISOString()));\n\n      const filteredMetrics = metrics.filter((metric) => ALLOWED_ADV_METRICS.includes(metric.name));\n      const [spend, sales, clicks, orders] = ALLOWED_ADV_METRICS.map(\n        (key) => filteredMetrics.find((metric) => metric.name === key)!\n      );\n\n      const craftedAdvData = categories\n        .map((date, index) => {\n          const dateISO = moment.utc(date).toISOString();\n          if (datestForChartIsoSet.has(dateISO)) {\n            return {\n              clicks: clicks.dataSet[index],\n              dateISO,\n              orders: orders.dataSet[index],\n              sales: sales.dataSet[index],\n              spend: spend.dataSet[index]\n            };\n          }\n          return undefined;\n        })\n        .filter((v) => !!v);\n\n      const craftedAdvMap = new Map<string, AdvDataRow>(craftedAdvData.map((row) => [row.dateISO, row]));\n\n      const craftedStData = salesTrafficData.data.getReportData.rows\n        .map((row) => {\n          const dateISO = moment.utc(parseInt(row[0], 10) * 1000).toISOString();\n          if (datestForChartIsoSet.has(dateISO)) {\n            return {\n              dateISO,\n              totalSales: parseFloat(row[1]) || 0,\n              unitSessionPercentage: parseFloat(row[29]) || 0\n            };\n          }\n          return undefined;\n        })\n        .filter((v) => !!v);\n\n      const craftedBdMap = new Map<string, BdDataRow>(craftedStData.map((row) => [row.dateISO, row]));\n\n      const series: Array<AdvSeries> = (\n        [\n          {\n            data: Array.from(datestForChartIsoSet).map((dateISO) => {\n              const bdRow = craftedBdMap.get(dateISO)!;\n              const advRow = craftedAdvMap.get(dateISO)!;\n              return {\n                x: moment.utc(dateISO).valueOf(),\n                y: NumberUtils.formatPercentage(\n                  !bdRow.totalSales ? 0 : AdvChartUtils.fromScientificNotation(advRow.spend) / bdRow.totalSales\n                ),\n                numeratorForTotal: AdvChartUtils.fromScientificNotation(advRow.spend),\n                denominatorForTotal: bdRow.totalSales\n              };\n            }),\n            key: 'TACOS',\n            total: 0\n          },\n          {\n            data: Array.from(datestForChartIsoSet).map((dateISO) => {\n              const bdRow = craftedBdMap.get(dateISO)!;\n              const advRow = craftedAdvMap.get(dateISO)!;\n              return {\n                x: moment.utc(dateISO).valueOf(),\n                y: NumberUtils.formatPercentage(\n                  !bdRow.totalSales ? 0 : AdvChartUtils.fromScientificNotation(advRow.sales) / bdRow.totalSales\n                ),\n                numeratorForTotal: AdvChartUtils.fromScientificNotation(advRow.sales),\n                denominatorForTotal: bdRow.totalSales\n              };\n            }),\n            key: 'AD_SALES',\n            total: 0\n          },\n          {\n            data: Array.from(datestForChartIsoSet).map((dateISO) => {\n              const advRow = craftedAdvMap.get(dateISO)!;\n              return {\n                x: moment.utc(dateISO).valueOf(),\n                y: NumberUtils.formatPercentage(!advRow.clicks ? 0 : advRow.orders / advRow.clicks),\n                numeratorForTotal: advRow.orders,\n                denominatorForTotal: advRow.clicks\n              };\n            }),\n            key: 'PPC_CONV_RATE',\n            total: 0\n          },\n          {\n            data: Array.from(datestForChartIsoSet).map((dateISO) => {\n              const bdRow = craftedBdMap.get(dateISO)!;\n              return {\n                x: moment.utc(dateISO).valueOf(),\n                y: NumberUtils.roundToDecimalPoints(bdRow.unitSessionPercentage, 2)\n              };\n            }),\n            key: 'UNIT_SESSION_PERCENTAGE',\n            total: 0\n          },\n          {\n            data: Array.from(datestForChartIsoSet).map((dateISO) => {\n              const bdRow = craftedBdMap.get(dateISO)!;\n              return {\n                x: moment.utc(dateISO).valueOf(),\n                y: bdRow.totalSales\n              };\n            }),\n            key: 'TOTAL_SALES',\n            total: 0\n          }\n        ] satisfies Array<AdvSeries<AdvSeriesDataExtended>>\n      ).map((seriesItem) => ({\n        ...seriesItem,\n        ...AdvChartUtils.computeSeriesAverageAndCleanDataSet(seriesItem.data, seriesItem.key)\n      }));\n\n      return {\n        maxX: Math.max(...datesForChart.map((date) => date.valueOf())),\n        minX: Math.min(...datesForChart.map((date) => date.valueOf())),\n        series\n      };\n    } catch (e: any) {\n      throw new ErrorResponse((e as ErrorResponse)?.statusCode || ApiError.ServerError, { message: e?.message });\n    }\n  };\n\n  private static computeSeriesAverageAndCleanDataSet(seriesItemData: Array<AdvSeriesDataExtended>, key: AdvMetric) {\n    let total = 0;\n    if (seriesItemData[0]?.numeratorForTotal && seriesItemData[0]?.denominatorForTotal) {\n      const numerator = _.sumBy(seriesItemData, (dataItem) => dataItem.numeratorForTotal ?? 0);\n      const denominator = _.sumBy(seriesItemData, (dataItem) => dataItem.denominatorForTotal ?? 0);\n      total = !denominator ? 0 : NumberUtils.formatPercentage(numerator / denominator);\n    } else if (key === 'TOTAL_SALES') {\n      total = NumberUtils.roundToDecimalPoints(\n        _.sumBy(seriesItemData, (dataItem) => dataItem.y),\n        2\n      );\n    } else {\n      total = NumberUtils.roundToDecimalPoints(_.mean(seriesItemData.map((dataItem) => dataItem.y)), 2);\n    }\n    return {\n      total,\n      data: seriesItemData.map((dataItem) => _.pick(dataItem, ['x', 'y']))\n    };\n  }\n}\n","import moment from 'moment-timezone';\nimport { useEffect, useState } from 'react';\n\nimport ExtensionUtils from '../../../utils/ExtensionUtils';\nimport type { AmazonDateRange } from '../../../utils/request/InlinePageRequest/AdvRequest';\n\nconst getGranularity = (period: string) => (['YEAR_TO_DATE', 'LIFETIME'].includes(period) ? 'MONTH' : 'DAY');\n\nconst DATE_RANGE_KEY = 'UCM_DATE_RANGE_FILTER';\n\nconst AMAZON_FIELDS: Array<keyof AmazonDateRange> = ['start', 'end', 'period', 'startISO', 'endISO'];\n\nconst getInitialData = (customerId: string) => {\n  const end = moment().utc().endOf('day');\n  const start = moment().utc().startOf('day').startOf('week');\n  const defaultValue: AmazonDateRange = {\n    end: end.valueOf(),\n    endISO: ExtensionUtils.getIsoDateOnly(end),\n    granularity: 'DAY',\n    period: 'THIS_WEEK',\n    start: start.valueOf(),\n    startISO: ExtensionUtils.getIsoDateOnly(start)\n  };\n  const key = `${customerId}_${DATE_RANGE_KEY}`;\n  const value = localStorage.getItem(key);\n  if (value) {\n    const parsedValue: Partial<AmazonDateRange> = value ? JSON.parse(value) : undefined;\n    if (AMAZON_FIELDS.every((field) => !!parsedValue[field])) {\n      return { ...parsedValue, granularity: getGranularity(parsedValue.period!) } as AmazonDateRange;\n    }\n  }\n  return defaultValue;\n};\n\nexport default function useAmazonDateRange(customerId: string): AmazonDateRange {\n  const [dateRange, setDateRange] = useState<AmazonDateRange>(getInitialData(customerId));\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const originalSetItemCallback = window.localStorage.setItem;\n      ExtensionUtils.watchAnyObject(window.localStorage, ['setItem'], (method: string, key: string, value: string) => {\n        if (key.includes(DATE_RANGE_KEY)) {\n          const parsedValue: Partial<AmazonDateRange> = JSON.parse(value);\n          if (AMAZON_FIELDS.every((field) => !!parsedValue[field])) {\n            setDateRange({\n              ...parsedValue,\n              granularity: getGranularity(parsedValue.period!)\n            } as AmazonDateRange);\n          }\n        }\n      });\n      return () => {\n        window.localStorage.setItem = originalSetItemCallback;\n      };\n    }\n    return () => null;\n  }, []);\n\n  return dateRange;\n}\n","import type { SellerCentralMarketplace } from '@seller-utilities/database';\nimport { SUPPORTED_MARKETPLACES } from '@seller-utilities/database';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nexport default function usePageMarketplace(): SellerCentralMarketplace | null {\n  const router = useRouter();\n  const [marketplace, setMarketplace] = useState<SellerCentralMarketplace | null>(null);\n\n  useEffect(() => {\n    if (window) {\n      const { host } = window.location;\n      const pageMarketplace = Object.entries(SUPPORTED_MARKETPLACES)\n        .map(([mp, { urlSuffix }]) => {\n          if (host.endsWith(urlSuffix)) {\n            return mp as SellerCentralMarketplace;\n          }\n          return null;\n        })\n        .filter((v) => !!v)\n        .sort(\n          (marketplaceA: SellerCentralMarketplace, marketplaceB: SellerCentralMarketplace) =>\n            SUPPORTED_MARKETPLACES[marketplaceA].urlSuffix.length -\n            SUPPORTED_MARKETPLACES[marketplaceB].urlSuffix.length\n        )\n        .pop();\n      if (pageMarketplace) {\n        setMarketplace(pageMarketplace);\n      }\n    }\n  }, [router.pathname]);\n\n  return marketplace;\n}\n","import { Box } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useAppContext } from '@riptech/shared-ui/src/hooks/useAppContext';\nimport Image from 'next/image';\nimport type { FC } from 'react';\nimport AppLogo from '../../../public/assets/logos/su-icon.svg';\nconst SellerUtilitiesHeaderLogo: FC = () => {\n  const {\n    appName\n  } = useAppContext();\n  const theme = useTheme();\n  return <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" width=\"max-content\" data-sentry-element=\"Box\" data-sentry-component=\"SellerUtilitiesHeaderLogo\" data-sentry-source-file=\"SellerUtilitiesHeaderLogo.tsx\">\n      <Image alt={appName ?? ''} {...AppLogo} style={{\n      height: theme.spacing(5),\n      objectFit: 'contain',\n      width: theme.spacing(5)\n    }} data-sentry-element=\"Image\" data-sentry-source-file=\"SellerUtilitiesHeaderLogo.tsx\" />\n    </Box>;\n};\nexport default SellerUtilitiesHeaderLogo;","import { Box, ButtonBase, Tooltip, Typography } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { NumberUtils } from '@riptech/utils';\nimport type { FC } from 'react';\nimport React from 'react';\nimport type { AdvMetric, AdvSeries } from '../../utils/AdvChartUtils';\nimport SellerUtilitiesHeaderLogo from './SellerUtilitiesHeaderLogo';\ninterface MetricInfo {\n  color: string;\n  key: AdvMetric;\n  description: string;\n  name: string;\n  shortName: string;\n}\nexport const METRICS_INFO: Array<MetricInfo> = [{\n  color: 'rgb(46, 140, 184)',\n  description: `TACOS is a measure of the efficiency and impact of your advertising efforts on Amazon. It's calculated as the total advertising spend divided by total sales, capturing both organic and Pay-Per-Click (PPC) sales. This metric helps you understand the proportion of your sales generated from advertising relative to your overall sales, providing a comprehensive view of advertising ROI.`,\n  key: 'TACOS',\n  name: 'Total Advertising Cost of Sales',\n  shortName: 'TACOS'\n}, {\n  color: 'rgb(221, 119, 3)',\n  description: `Ad Sales Percentage offers insight into the dependency of your Amazon sales on advertising. It's calculated by dividing advertising sales by total sales. This metric illuminates the portion of your sales driven by PPC (Pay-Per-Click) advertising compared to organic sales, helping you assess your reliance on advertising strategies.`,\n  key: 'AD_SALES',\n  name: 'Ad Sales Percentage',\n  shortName: 'Ad Sales'\n}, {\n  color: 'rgb(163, 49, 123)',\n  description: `PPC Conversion Rate is an essential metric for evaluating the effectiveness of your Pay-Per-Click advertising campaigns on Amazon. It's calculated by dividing the number of orders received through PPC ads by the total number of clicks on those ads. This rate provides insights into how well your PPC ads are converting clicks into sales, helping you gauge the performance of your ad content, targeting, and overall PPC strategy. A higher conversion rate indicates more effective ads, leading to more sales per click.`,\n  key: 'PPC_CONV_RATE',\n  name: 'PPC Conversion Rate',\n  shortName: 'PPC CVR'\n}, {\n  color: 'rgb(88, 112, 33)',\n  description: `Unit Session Percentage is a key metric for understanding your overall Amazon account. It's calculated by dividing the total number of orders by the total number of sessions from business reports. This rate helps you understand how well your product listings convert visitors into buyers, indicating the overall success of your product offerings and marketing efforts.`,\n  key: 'UNIT_SESSION_PERCENTAGE',\n  name: 'Unit Session Percentage',\n  shortName: 'Unit Session Per.'\n}, {\n  color: 'rgb(169, 245, 169)',\n  description: 'Total sales is the amount of ordered product sales, calculated by multiplying the price of order items and the number of units sold for the selected time period.',\n  key: 'TOTAL_SALES',\n  name: 'Total Sales',\n  shortName: 'Total Sales'\n}];\ninterface MetricsHeaderProps {\n  readonly accordionExpanded: boolean;\n  readonly onSeriesToggle: (key: AdvMetric, value: boolean) => void;\n  readonly enabledSeries: Record<AdvMetric, boolean>;\n  readonly metricTotal: Array<Pick<AdvSeries, 'key' | 'total'>>;\n}\nconst MetricsHeader: FC<MetricsHeaderProps> = ({\n  accordionExpanded,\n  metricTotal,\n  onSeriesToggle,\n  enabledSeries\n}) => {\n  const getMetricDisplay = (metricInfo: MetricInfo) => {\n    const value = metricTotal.find(info => info.key === metricInfo.key)?.total;\n    if (metricInfo.key === 'TOTAL_SALES') {\n      return NumberUtils.formatCurrency('USD', value ?? 0);\n    }\n    return `${value}%`;\n  };\n  return <Box display=\"grid\" gap={2} gridTemplateColumns=\"min-content auto\" width=\"100%\" data-sentry-element=\"Box\" data-sentry-component=\"MetricsHeader\" data-sentry-source-file=\"MetricsHeader.tsx\">\n      <SellerUtilitiesHeaderLogo data-sentry-element=\"SellerUtilitiesHeaderLogo\" data-sentry-source-file=\"MetricsHeader.tsx\" />\n      <Box display=\"grid\" gridTemplateColumns={`repeat(${METRICS_INFO.length}, 1fr)`} width=\"100%\" data-sentry-element=\"Box\" data-sentry-source-file=\"MetricsHeader.tsx\">\n        {METRICS_INFO.map(metricInfo => <ButtonBase key={metricInfo.key} onClick={e => {\n        if (accordionExpanded) {\n          e.stopPropagation();\n          onSeriesToggle(metricInfo.key, !enabledSeries[metricInfo.key]);\n        }\n      }} sx={{\n        alignItems: 'start',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        pb: 0.5\n      }}>\n            <Box bgcolor={enabledSeries[metricInfo.key] && accordionExpanded ? metricInfo.color : 'transparent'} height=\"4px\" width=\"100%\" />\n            <Box alignItems=\"center\" display=\"grid\" gap={1} gridTemplateColumns=\"max-content auto\">\n              <Tooltip title={metricInfo.name}>\n                <Box>{metricInfo.shortName}</Box>\n              </Tooltip>\n              <Tooltip title={metricInfo.description}>\n                <Iconify color=\"info.main\" icon=\"eva:info-outline\" sx={{\n              display: 'flex'\n            }} />\n              </Tooltip>\n            </Box>\n            <Typography variant=\"h6\">{getMetricDisplay(metricInfo)}</Typography>\n          </ButtonBase>)}\n      </Box>\n    </Box>;\n};\nexport default MetricsHeader;","import { Accordion, AccordionDetails, AccordionSummary, Box, Card, CircularProgress } from '@mui/material';\nimport { Chart, useChart } from '@riptech/minimal-ui/src/components/chart';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { useBoolean } from '@riptech/minimal-ui/src/hooks/use-boolean';\nimport { NumberUtils } from '@riptech/utils';\nimport { useQuery } from '@tanstack/react-query';\nimport { useSearchParams } from 'next/navigation';\nimport type { FC } from 'react';\nimport React, { useState } from 'react';\nimport type { AdvMetric, AdvSeries } from '../../utils/AdvChartUtils';\nimport AdvChartUtils from '../../utils/AdvChartUtils';\nimport useAmazonDateRange from './hooks/useAmazonDateRange';\nimport usePageMarketplace from './hooks/usePageMarketplace';\nimport MetricsHeader, { METRICS_INFO } from './MetricsHeader';\nimport SellerUtilitiesHeaderLogo from './SellerUtilitiesHeaderLogo';\nconst formatPercentage = (value: number) => `${value}%`;\nconst getSeriesNames = (series?: Array<AdvSeries & {\n  name: string;\n}>) => {\n  if (!series) {\n    return {\n      yAxis1: [],\n      yAxis2: []\n    };\n  }\n  const copySorted = series.concat().sort((a, b) => a.total - b.total);\n  return {\n    yAxis1: copySorted.filter(value => ['TACOS', 'AD_SALES'].includes(value.key)).map(value => value.name),\n    yAxis2: copySorted.filter(value => ['PPC_CONV_RATE', 'UNIT_SESSION_PERCENTAGE', 'TOTAL_SALES'].includes(value.key)).map(value => value.name)\n  };\n};\nconst AdvChart: FC = () => {\n  const searchParams = useSearchParams();\n  const marketplace = usePageMarketplace();\n  const entityId = searchParams.get('entityId')!;\n  const amazonAppConfig = AdvChartUtils.getAmazonAppConfigUserInfo();\n  const dateRange = useAmazonDateRange(amazonAppConfig.customerId);\n  const isAmazonAppConfigAvailible = !!(amazonAppConfig.customerId && amazonAppConfig.marketplaceId);\n  const [enabledSeries, setEnabledSeries] = useState<Record<AdvMetric, boolean>>({\n    AD_SALES: true,\n    PPC_CONV_RATE: true,\n    TACOS: true,\n    UNIT_SESSION_PERCENTAGE: true,\n    TOTAL_SALES: true\n  });\n  const accordionExpanded = useBoolean();\n  const {\n    data,\n    isSuccess,\n    isLoading,\n    isError,\n    error\n  } = useQuery({\n    enabled: !!(entityId && marketplace && isAmazonAppConfigAvailible),\n    meta: {\n      errorMessage: 'Failed to load Seller Utilities chart data'\n    },\n    queryFn: () => AdvChartUtils.fetchAdvStatistic(entityId, marketplace!, dateRange, amazonAppConfig),\n    queryKey: ['fetchAdvData', entityId, marketplace, dateRange, amazonAppConfig, isAmazonAppConfigAvailible],\n    retry: false\n  });\n  const series = data?.series.filter(seriesItem => enabledSeries[seriesItem.key]).map(seriesItem => ({\n    ...seriesItem,\n    name: METRICS_INFO.find(metric => metric.key === seriesItem.key)?.name ?? ''\n  }));\n  const {\n    yAxis1,\n    yAxis2\n  } = getSeriesNames(series);\n  const indexOfTotalSalesInSeries = series?.findIndex(v => v.key === 'TOTAL_SALES');\n  const formatTooltipLabel = (value: number, opts: any) => {\n    // The options passed to the tooltip formatter gives us access to the seriesIndex https://apexcharts.com/docs/options/tooltip/\n    // We compare that to the indexOfTotalSalesInSeries we are rendering to format total sales properly\n    if (opts?.seriesIndex === indexOfTotalSalesInSeries) {\n      return NumberUtils.formatCurrency('USD', value);\n    }\n    return formatPercentage(value);\n  };\n  const formatOppositeYaxisLabel = (value: number, opts: any) => {\n    // Only an index of the tick is passed to the yaxis label formatter, more info here: https://apexcharts.com/docs/options/yaxis\n    // This solution works because Total Sales is displayed as the last value among the metrics - that should not change\n    if (typeof opts === 'number' && enabledSeries.TOTAL_SALES) {\n      return NumberUtils.formatCurrency('USD', value);\n    }\n    return formatPercentage(value);\n  };\n  const chartOptions = useChart({\n    colors: series?.map(seriesItem => METRICS_INFO.find(metricInfo => metricInfo.key === seriesItem.key)?.color),\n    legend: {\n      show: false\n    },\n    tooltip: {\n      y: {\n        formatter: formatTooltipLabel\n      }\n    },\n    xaxis: {\n      labels: {\n        datetimeFormatter: {\n          day: 'dd MMM',\n          hour: '',\n          month: \"MMM 'yy\"\n        }\n      },\n      max: data?.maxX,\n      min: data?.minX,\n      type: 'datetime'\n    },\n    yaxis: [...(yAxis1.length ? [{\n      labels: {\n        formatter: formatPercentage\n      },\n      seriesName: yAxis1\n    }] : []), ...(yAxis2.length ? [{\n      labels: {\n        formatter: formatOppositeYaxisLabel\n      },\n      opposite: !!yAxis1.length,\n      seriesName: yAxis2\n    }] : [])]\n  });\n  if (!marketplace) {\n    return null;\n  }\n  return <Box sx={{\n    mb: 2.25,\n    width: '100%'\n  }} data-sentry-element=\"Box\" data-sentry-component=\"AdvChart\" data-sentry-source-file=\"AdvChart.tsx\">\n      {isError ? <Box component={Card} sx={{\n      alignItems: 'center',\n      borderRadius: '0px',\n      color: theme => theme.palette.error.main,\n      display: 'flex',\n      gap: 2,\n      justifyContent: 'center',\n      p: 2,\n      width: '100%'\n    }}>\n          <SellerUtilitiesHeaderLogo />\n          <Box alignItems=\"center\" display=\"flex\" flex={1} justifyContent=\"center\" width=\"100%\">\n            {error.message}\n          </Box>\n        </Box> : null}\n      {isLoading ? <Box component={Card} sx={{\n      alignItems: 'center',\n      borderRadius: '0px',\n      display: 'flex',\n      justifyContent: 'center',\n      p: 2,\n      width: '100%'\n    }}>\n          <CircularProgress />\n        </Box> : null}\n      {isSuccess ? <Accordion expanded={accordionExpanded.value} onChange={accordionExpanded.onToggle} sx={{\n      '&.MuiAccordion-root': {\n        borderRadius: '0px'\n      },\n      bgcolor: theme => theme.palette.background.default,\n      boxShadow: theme => theme.customShadows.card\n    }}>\n          <AccordionSummary expandIcon={<Iconify icon=\"material-symbols:expand-more\" />} sx={{\n        '& .MuiAccordionSummary-content': {\n          my: 0\n        }\n      }}>\n            <MetricsHeader accordionExpanded={accordionExpanded.value} enabledSeries={enabledSeries} metricTotal={data?.series} onSeriesToggle={(key, value) => setEnabledSeries({\n          ...enabledSeries,\n          [key]: value\n        })} />\n          </AccordionSummary>\n          <AccordionDetails>\n            <Chart dir=\"ltr\" height={320} options={chartOptions} series={series} type=\"line\" width=\"100%\" />\n          </AccordionDetails>\n        </Accordion> : null}\n    </Box>;\n};\nexport default AdvChart;","import type { ReactElement } from 'react';\nimport React from 'react';\nimport AdvChart from '../../components/advChart/AdvChart';\nimport useFetchUserSettings from '../../hooks/useFetchUserSettings';\nimport type { ComponentWithLayout } from '../../hooks/useLayout';\nconst AdvChartPage: ComponentWithLayout = () => {\n  const {\n    data\n  } = useFetchUserSettings();\n  if (data?.userData?.settings?.uiEnhancements?.advChart) {\n    return <AdvChart />;\n  }\n  return null;\n};\nAdvChartPage.getLayout = (page: ReactElement) => page;\nexport default AdvChartPage;"],"names":["window","__NEXT_P","push","__webpack_require__","useFetchUserSettings","useQuery","queryFn","RequestProxy","fetchUserData","queryKey","FETCH_USER_DATA_QUERY_KEY","meta","errorMessage","ExtensionUtils","getIsoDateOnly","value","toISOString","split","shift","watchAnyObject","object","methods","callbackBefore","callbackAfter","method","original","bind","newMethod","args","result","apply","handleError","then","data","type","ErrorResponse","payload","statusCode","message","USER_DATA_URL","concat","process","chrome","runtime","sendMessage","url","fetchSalesAndTrafficReport","marketplace","amazonDateRange","amazonAppConfigUserInfo","sendInvalidateUserDataCache","ChartLoading","param","sx","other","jsx_runtime","jsx","Box","alignItems","justifyContent","top","left","width","zIndex","height","p","overflow","position","borderRadius","data-sentry-element","data-sentry-component","data-sentry-source-file","Skeleton","variant","circularTypes","includes","ApexChart","withLoadingProps","loader","LoadingPropsContext","createContext","DynamicComponent","useContext","props","Provider","dynamic","Promise","all","e","mod","default","ssr","loading","disabled","Chart","series","options","className","loadingProps","dir","chartClasses","flexShrink","styled","theme","gap","display","fontSize","typography","pxToRem","fontWeight","fontWeightMedium","backgroundColor","AdvRequest","fetchAdvCampaigns","entityId","axios","post","endDateUTC","end","fields","filters","field","not","operator","programType","values","pageOffset","pageSize","period","queries","sort","order","startDateUTC","start","timeSeriesInterval","granularity","version","constructor","_window_appConfig_appContext","_window_appConfig","createAxiosInstance","axiosConfig","baseURL","SUPPORTED_MARKETPLACES","urlSuffix","headers","Accept","_window","appConfig","appContext","csrfToken","withCredentials","ALLOWED_ADV_METRICS","AdvChartUtils","unifyAmazonDateRange","MIN_START_DATE","moment","utc","subtract","startOf","startISO","isBefore","valueOf","getDateIntersection","set1","set2","intersectionMap","Map","forEach","set","dateIso","date","has","get","Array","from","keys","map","filter","v","fromScientificNotation","NumberUtils","roundToDecimalPoints","computeSeriesAverageAndCleanDataSet","seriesItemData","key","total","numeratorForTotal","denominatorForTotal","numerator","_","dataItem","denominator","formatPercentage","y","getAmazonAppConfigUserInfo","customerId","marketplaceId","fetchAdvStatistic","activeMarketplace","dateRangeFromAmazon","dateRange","advRequest","advData","salesTrafficData","timeSeries","categories","metrics","datesForChart","getReportData","rows","parseInt","row","datestForChartIsoSet","Set","val","filteredMetrics","metric","name","spend","sales","clicks","orders","find","craftedAdvData","index","dateISO","dataSet","craftedAdvMap","craftedStData","totalSales","parseFloat","unitSessionPercentage","craftedBdMap","bdRow","advRow","x","seriesItem","maxX","Math","max","minX","min","ApiError","ServerError","getGranularity","DATE_RANGE_KEY","AMAZON_FIELDS","getInitialData","endOf","defaultValue","endISO","localStorage","getItem","parsedValue","JSON","parse","undefined","every","advChart_SellerUtilitiesHeaderLogo","appName","useAppContext","useTheme","Image","alt","AppLogo","style","spacing","objectFit","METRICS_INFO","color","description","shortName","advChart_MetricsHeader","accordionExpanded","metricTotal","onSeriesToggle","enabledSeries","getMetricDisplay","info","metricInfo","formatCurrency","jsxs","gridTemplateColumns","SellerUtilitiesHeaderLogo","length","ButtonBase","onClick","stopPropagation","flexDirection","pb","bgcolor","Tooltip","title","Iconify","icon","Typography","getSeriesNames","yAxis1","yAxis2","copySorted","a","b","advChart_AdvChart","searchParams","useSearchParams","usePageMarketplace","router","useRouter","setMarketplace","useState","useEffect","host","location","pageMarketplace","Object","entries","mp","endsWith","marketplaceA","marketplaceB","pop","pathname","amazonAppConfig","useAmazonDateRange","setDateRange","originalSetItemCallback","setItem","isAmazonAppConfigAvailible","setEnabledSeries","AD_SALES","PPC_CONV_RATE","TACOS","UNIT_SESSION_PERCENTAGE","TOTAL_SALES","useBoolean","isSuccess","isLoading","isError","error","enabled","retry","indexOfTotalSalesInSeries","findIndex","chartOptions","useChart","LABEL_TOTAL","show","label","vars","palette","text","secondary","subtitle2","LABEL_VALUE","offsetY","primary","h4","RESPONSIVE","breakpoint","breakpoints","sm","plotOptions","bar","columnWidth","md","responsive","chart","toolbar","zoom","parentHeightOffset","fontFamily","foreColor","animations","speed","animateGradually","delay","dynamicAnimation","colors","main","warning","success","dark","darker","states","hover","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","lineCap","grid","strokeDashArray","borderColor","divider","padding","right","bottom","xaxis","lines","axisBorder","axisTicks","yaxis","isArray","tickAmount","markers","size","strokeColors","background","paper","tooltip","fillSeriesColor","legend","horizontalAlign","shape","labels","itemMargin","horizontal","vertical","borderRadiusApplication","pie","donut","radialBar","hollow","margin","track","strokeWidth","varAlpha","grey","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","heatmap","distributed","reduce","acc","cur","some","item","formatter","opts","seriesIndex","datetimeFormatter","day","hour","month","seriesName","opposite","mb","component","Card","flex","CircularProgress","Accordion","expanded","onChange","onToggle","boxShadow","customShadows","card","AccordionSummary","expandIcon","my","MetricsHeader","AccordionDetails","AdvChartPage","userData","settings","uiEnhancements","advChart","AdvChart","getLayout","page","adv_chart"],"sourceRoot":""}