{"version":3,"file":"static/chunks/pages/embeds/asin-list-9bd840241c8d4802.js","mappings":"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","sources":["webpack://_N_E/?4c86","webpack://_N_E/./src/hooks/useFetchUserSettings.ts","webpack://_N_E/./src/utils/RequestProxy.ts","webpack://_N_E/../../packages/riptech/minimal-ui/src/hooks/use-copy-to-clipboard.ts","webpack://_N_E/./src/components/common/CopyButton.tsx","webpack://_N_E/./src/components/asinList/ASINListTable.tsx","webpack://_N_E/./src/components/asinList/ASINListUtils.ts","webpack://_N_E/./src/components/asinList/Categories.tsx","webpack://_N_E/./src/components/asinList/ASINList.tsx","webpack://_N_E/./src/pages/embeds/asin-list.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/embeds/asin-list\",\n      function () {\n        return require(\"private-next-pages/embeds/asin-list.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/embeds/asin-list\"])\n      });\n    }\n  ","import { useQuery } from '@tanstack/react-query';\n\nimport RequestProxy, { FETCH_USER_DATA_QUERY_KEY } from '../utils/RequestProxy';\n\nexport default function useFetchUserSettings() {\n  return useQuery({\n    queryFn: RequestProxy.fetchUserData,\n    queryKey: [FETCH_USER_DATA_QUERY_KEY],\n    meta: {\n      errorMessage: 'Failed to load Seller Utilities user data'\n    }\n  });\n}\n","import type { ApiError } from '@riptech/utils/src/errors/ErrorResponse';\nimport { ErrorResponse } from '@riptech/utils/src/errors/ErrorResponse';\nimport type { SellerCentralMarketplace } from '@seller-utilities/database';\nimport type { SalesAndTrafficReportResponse } from '@seller-utilities/types';\n\nimport type { FetchUserDataResponse } from '../pages/api/account/fetch-user-data';\nimport type { AmazonAppConfigUserInfo } from './AdvChartUtils';\nimport type { AmazonDateRange } from './request/InlinePageRequest/AdvRequest';\n\nexport type RequestProxyType = 'fetchUserData' | 'fetchSalesAndTrafficReport' | 'invalidateUserDataCache' | 'getData';\n\nexport interface RequestProxyMessage {\n  type: RequestProxyType;\n}\n\ntype ProxyPayload<T> =\n  | {\n      type: 'error';\n      payload: {\n        message: string;\n        statusCode: ApiError;\n      };\n    }\n  | { type: 'success'; payload: T };\n\nexport interface FetchUserDataMessage extends RequestProxyMessage {\n  url: string;\n}\nexport interface FetchSalesAndTrafficReportMessage extends RequestProxyMessage {\n  amazonDateRange: AmazonDateRange;\n  amazonAppConfigUserInfo?: AmazonAppConfigUserInfo;\n  marketplace: SellerCentralMarketplace;\n}\n\nexport interface InvalidateUserDataCacheMessage extends RequestProxyMessage {\n  url: string;\n}\n\nexport const FETCH_USER_DATA_QUERY_KEY = 'fetchUserData';\n\nexport default class RequestProxy {\n  static readonly USER_DATA_URL = `${process.env.NEXT_PUBLIC_CLIENT_URL}/api/account/fetch-user-data`;\n\n  static handleError<T>(value: Promise<ProxyPayload<T>>) {\n    return value.then((data: ProxyPayload<T>) => {\n      if (data.type === 'error') {\n        throw new ErrorResponse(data.payload.statusCode, {\n          message: data.payload.message\n        });\n      }\n      return data.payload;\n    });\n  }\n\n  static fetchUserData = () =>\n    RequestProxy.handleError<FetchUserDataResponse>(\n      chrome.runtime.sendMessage<FetchUserDataMessage, ProxyPayload<FetchUserDataResponse>>(\n        process.env.NEXT_PUBLIC_EXTENSION_ID,\n        {\n          type: 'fetchUserData',\n          url: RequestProxy.USER_DATA_URL\n        }\n      )\n    );\n\n  static fetchSalesAndTrafficReport = (\n    marketplace: SellerCentralMarketplace,\n    amazonDateRange: AmazonDateRange,\n    amazonAppConfigUserInfo?: AmazonAppConfigUserInfo\n  ) =>\n    RequestProxy.handleError<SalesAndTrafficReportResponse>(\n      chrome.runtime.sendMessage<FetchSalesAndTrafficReportMessage, ProxyPayload<SalesAndTrafficReportResponse>>(\n        process.env.NEXT_PUBLIC_EXTENSION_ID,\n        {\n          amazonAppConfigUserInfo,\n          amazonDateRange,\n          marketplace,\n          type: 'fetchSalesAndTrafficReport'\n        }\n      )\n    );\n\n  static sendInvalidateUserDataCache = async (queryKey: string): Promise<void> => {\n    let url: string | undefined;\n    switch (queryKey) {\n      case FETCH_USER_DATA_QUERY_KEY: {\n        url = RequestProxy.USER_DATA_URL;\n        break;\n      }\n      default:\n        break;\n    }\n    if (url) {\n      await chrome.runtime.sendMessage<InvalidateUserDataCacheMessage, undefined>(\n        process.env.NEXT_PUBLIC_EXTENSION_ID,\n        {\n          type: 'invalidateUserDataCache',\n          url\n        }\n      );\n    }\n  };\n}\n","import { useMemo, useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport type UseCopyToClipboardReturn = {\n  copy: CopyFn;\n  copiedText: CopiedValue;\n};\n\nexport type CopiedValue = string | null;\n\nexport type CopyFn = (text: string) => Promise<boolean>;\n\nexport function useCopyToClipboard(): UseCopyToClipboardReturn {\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null);\n\n  const copy: CopyFn = useCallback(\n    async (text) => {\n      if (!navigator?.clipboard) {\n        console.warn('Clipboard not supported');\n        return false;\n      }\n\n      try {\n        await navigator.clipboard.writeText(text);\n        setCopiedText(text);\n        return true;\n      } catch (error) {\n        console.warn('Copy failed', error);\n        setCopiedText(null);\n        return false;\n      }\n    },\n    [setCopiedText]\n  );\n\n  const memoizedValue = useMemo(() => ({ copy, copiedText }), [copy, copiedText]);\n\n  return memoizedValue;\n}\n","import { IconButton, Tooltip } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { enqueueSnackbar } from '@riptech/minimal-ui/src/components/snackbar';\nimport type { FC } from 'react';\nimport React from 'react';\ninterface CopyButtonProps {\n  readonly onCopy: (e: React.MouseEvent<HTMLElement>) => void;\n}\nconst CopyButton: FC<CopyButtonProps> = ({\n  onCopy\n}) => {\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\n    onCopy(e);\n    enqueueSnackbar('Copied data to clipboard', {\n      variant: 'info'\n    });\n  };\n  return <Tooltip title=\"Copy\" data-sentry-element=\"Tooltip\" data-sentry-component=\"CopyButton\" data-sentry-source-file=\"CopyButton.tsx\">\n      <IconButton onClick={onClick} data-sentry-element=\"IconButton\" data-sentry-source-file=\"CopyButton.tsx\">\n        <Iconify icon=\"eva:copy-fill\" data-sentry-element=\"Iconify\" data-sentry-source-file=\"CopyButton.tsx\" />\n      </IconButton>\n    </Tooltip>;\n};\nexport default CopyButton;","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport type { ASINListData } from './ASINList';\ninterface AsinTableProps {\n  readonly data: ASINListData['dimensionValues'];\n  readonly columns: ASINListData['dimensionColumns'];\n}\nconst ASINListTable = ({\n  data,\n  columns\n}: AsinTableProps) => {\n  const theme = useTheme();\n  return <TableContainer sx={{\n    maxHeight: 500,\n    width: '100%'\n  }} data-sentry-element=\"TableContainer\" data-sentry-component=\"ASINListTable\" data-sentry-source-file=\"ASINListTable.tsx\">\n      <Table stickyHeader sx={[{\n      '& tr th, & tr td': {\n        padding: 1\n      }\n    }]} data-sentry-element=\"Table\" data-sentry-source-file=\"ASINListTable.tsx\">\n        <TableHead data-sentry-element=\"TableHead\" data-sentry-source-file=\"ASINListTable.tsx\">\n          <TableRow data-sentry-element=\"TableRow\" data-sentry-source-file=\"ASINListTable.tsx\">\n            {columns.map((column, index) => <TableCell key={column} sx={{\n            borderTopLeftRadius: index === 0 ? theme.spacing(1.25) : 'unset',\n            borderTopRightRadius: index === columns.length - 1 ? theme.spacing(1.25) : 'unset',\n            textAlign: 'center'\n          }}>\n                {column}\n              </TableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody data-sentry-element=\"TableBody\" data-sentry-source-file=\"ASINListTable.tsx\">\n          {Object.keys(data).map(asin => <TableRow key={asin}>\n              <TableCell sx={{\n            textAlign: 'center'\n          }}>{asin}</TableCell>\n              {data[asin].map(item => <TableCell key={`${asin}${item}`} sx={{\n            textAlign: 'center'\n          }}>\n                  {item}\n                </TableCell>)}\n            </TableRow>)}\n        </TableBody>\n      </Table>\n    </TableContainer>;\n};\nexport default ASINListTable;","import type { ASINListData, Category } from './ASINList';\n\nexport default class ASINListUtils {\n  static extractAsinData = (): ASINListData | null => {\n    const dimensionValuesPattern = /\"dimensionValuesDisplayData\"\\s*:\\s*({[^}]*})/;\n    const currentAsinPattern = /\"currentAsin\"\\s*:\\s*\"([^\"]+)\"/;\n    const parentAsinPattern = /\"parentAsin\"\\s*:\\s*\"([^\"]+)\"/;\n    const dimensionsPattern = /\"dimensions\"\\s:\\s*\\[([^\\]]*)]/;\n\n    const result: ASINListData = {\n      currentAsin: '',\n      dimensionColumns: ['one', 'two', 'three'],\n      dimensionValues: {},\n      parentAsin: ''\n    };\n\n    const scripts = document.querySelectorAll('#centerCol script[type=\"text/javascript\"]');\n    const scriptContent = Array.from(scripts).find(\n      (script) =>\n        script?.textContent?.match(dimensionValuesPattern) &&\n        script?.textContent?.match(currentAsinPattern) &&\n        script?.textContent?.match(parentAsinPattern) &&\n        script?.textContent?.match(dimensionsPattern)\n    )?.textContent;\n\n    if (!scriptContent) {\n      return null;\n    }\n\n    const dimensionValuesMatch = scriptContent.match(dimensionValuesPattern);\n    const currentAsinMatch = scriptContent.match(currentAsinPattern);\n    const parentAsinMatch = scriptContent.match(parentAsinPattern);\n    const dimensionsMatch = scriptContent.match(dimensionsPattern);\n\n    if (dimensionsMatch) {\n      const dimensionsContent = dimensionsMatch[1];\n      const dynamicColumns = JSON.parse(`[${dimensionsContent}]`).map((str: string) =>\n        str\n          .split('_')\n          .map((part) => part.charAt(0).toUpperCase() + part.slice(1))\n          .join(' ')\n      );\n      result.dimensionColumns = ['ASIN', ...dynamicColumns];\n    }\n\n    return {\n      ...result,\n      currentAsin: currentAsinMatch ? currentAsinMatch[1] : '',\n      dimensionValues: dimensionValuesMatch ? JSON.parse(dimensionValuesMatch[1]) : {},\n      parentAsin: parentAsinMatch ? parentAsinMatch[1] : ''\n    };\n  };\n\n  static extractCategories = (): Array<Category> | null => {\n    const startsWithRankingNumberRegex = /^#\\d{1,3}(,\\d{3})*\\b/;\n    const rankingNumberRegex = /#\\d{1,3}(,\\d{3})*\\b/;\n\n    // categories can be found in two types of elements\n    const productDetailsTableRows = document.querySelectorAll('#productDetails_detailBullets_sections1 tr td');\n    const productDetailsList = document.querySelectorAll(\n      '#detailBulletsWrapper_feature_div .detail-bullet-list .a-list-item'\n    );\n\n    const td = Array.from(productDetailsTableRows).find((row) =>\n      row.textContent?.trim().match(startsWithRankingNumberRegex)\n    );\n    const productListWithRankings = Array.from(productDetailsList).filter((item) =>\n      (item as HTMLElement)?.innerText?.trim()?.match(rankingNumberRegex)\n    );\n\n    if (!td && !productListWithRankings.length) {\n      return null;\n    }\n\n    if (td) {\n      const rankingListSpans = Array.from(td?.querySelectorAll('span > span'));\n      return this.extractCategoriesFromList(rankingListSpans);\n    }\n\n    return this.extractCategoriesFromList(productListWithRankings);\n  };\n\n  private static readonly extractCategoriesFromList = (list: Array<Element>): Array<Category> =>\n    list\n      .map((span) => {\n        const text = (span as HTMLElement).innerText;\n        const regex = /#(\\d{1,3}(,\\d{3})*)\\s+in\\s+(.*)/;\n\n        return regex.exec(text);\n      })\n      .filter((val) => !!val)\n      .map((regexMatch, index) => {\n        let categoryName = regexMatch[3];\n        if (index === 0) {\n          categoryName = categoryName.substring(0, regexMatch[3].indexOf('(') - 1);\n        }\n\n        return { name: categoryName, rank: regexMatch[1] };\n      });\n\n  static generateCSVText = (data: ASINListData['dimensionValues'], columns: Array<string>) =>\n    [columns.join('\\t'), ...Object.entries(data).map(([asinKey, asinData]) => [asinKey, ...asinData].join('\\t'))].join(\n      '\\n'\n    );\n}\n","import { Typography } from '@mui/material';\nimport type { FC } from 'react';\nimport type { Category } from './ASINList';\ninterface CategoriesProps {\n  readonly data: Array<Category>;\n}\nconst Categories: FC<CategoriesProps> = ({\n  data\n}) => <Typography color=\"text.secondary\" variant=\"caption\" data-sentry-element=\"Typography\" data-sentry-component=\"Categories\" data-sentry-source-file=\"Categories.tsx\">\n    {data.map(category => `${category.name} (#${category.rank})`).join(' • ')}\n  </Typography>;\nexport default Categories;","import { Accordion, AccordionDetails, AccordionSummary, Box, Card, Stack, Typography, useTheme } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { useBoolean } from '@riptech/minimal-ui/src/hooks/use-boolean';\nimport { useCopyToClipboard } from '@riptech/minimal-ui/src/hooks/use-copy-to-clipboard';\nimport { useAppContext } from '@riptech/shared-ui/src/hooks/useAppContext';\nimport Image from 'next/image';\nimport type { FC } from 'react';\nimport AppLogo from '../../../public/assets/logos/su-icon.svg';\nimport CopyButton from '../common/CopyButton';\nimport ASINListTable from './ASINListTable';\nimport ASINListUtils from './ASINListUtils';\nimport Categories from './Categories';\nexport interface ASINListData {\n  currentAsin: string;\n  dimensionColumns: Array<string>;\n  dimensionValues: Record<string, Array<string>>;\n  parentAsin: string;\n}\nexport interface Category {\n  rank: string;\n  name: string;\n}\nconst ASINList: FC = () => {\n  const {\n    appName\n  } = useAppContext();\n  const theme = useTheme();\n  const showTable = useBoolean();\n  const {\n    copy\n  } = useCopyToClipboard();\n  const asinData = ASINListUtils.extractAsinData();\n  const categories = ASINListUtils.extractCategories();\n  if (!asinData && !categories) {\n    return null;\n  }\n  const onCopy = (e: React.MouseEvent<HTMLElement>, text: string) => {\n    e.stopPropagation();\n    copy(text);\n  };\n  const onCopyTable = (e: React.MouseEvent<HTMLElement>) => {\n    if (asinData) {\n      onCopy(e, ASINListUtils.generateCSVText(asinData.dimensionValues, asinData.dimensionColumns));\n    }\n  };\n  return <Card sx={{\n    p: 2\n  }} data-sentry-element=\"Card\" data-sentry-component=\"ASINList\" data-sentry-source-file=\"ASINList.tsx\">\n      <Stack alignItems=\"center\" direction=\"row\" spacing={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"ASINList.tsx\">\n        <Image alt={appName ?? ''} {...AppLogo} style={{\n        height: theme.spacing(5),\n        marginRight: 40,\n        objectFit: 'contain',\n        width: theme.spacing(5)\n      }} data-sentry-element=\"Image\" data-sentry-source-file=\"ASINList.tsx\" />\n        <Stack width=\"100%\" data-sentry-element=\"Stack\" data-sentry-source-file=\"ASINList.tsx\">\n          {asinData ? <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n              <Typography variant=\"body2\">\n                Selected ASIN: <b>{asinData?.currentAsin}</b>\n              </Typography>\n              <Stack alignItems=\"center\" direction=\"row\" spacing={0.5}>\n                <Typography variant=\"body2\">\n                  Parent ASIN: <b>{asinData?.parentAsin}</b>\n                </Typography>\n                <CopyButton onCopy={e => onCopy(e, asinData.parentAsin)} />\n              </Stack>\n            </Box> : <Typography variant=\"body2\">\n              <b>No Children</b>\n            </Typography>}\n          {categories ? <Categories data={categories} /> : null}\n        </Stack>\n      </Stack>\n      {asinData ? <Accordion expanded={showTable.value} sx={{\n      mb: -2,\n      mt: 2\n    }}>\n          <AccordionSummary expandIcon={<Iconify icon=\"eva:chevron-up-fill\" />} onClick={showTable.onToggle}>\n            <Stack alignItems=\"center\" direction=\"row\" spacing={0.5}>\n              <Typography variant=\"body2\">\n                {showTable.value ? 'Hide' : 'Show'} Child Table ({Object.keys(asinData.dimensionValues).length}{' '}\n                Variations)\n              </Typography>\n              <CopyButton onCopy={onCopyTable} />\n            </Stack>\n          </AccordionSummary>\n          <AccordionDetails sx={{\n        boxShadow: 'none'\n      }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" sx={{\n          mt: '20px'\n        }}>\n              <ASINListTable columns={asinData.dimensionColumns} data={asinData.dimensionValues} />\n            </Box>\n          </AccordionDetails>\n        </Accordion> : null}\n    </Card>;\n};\nexport default ASINList;","import type { ReactElement } from 'react';\nimport React from 'react';\nimport ASINList from '../../components/asinList/ASINList';\nimport useFetchUserSettings from '../../hooks/useFetchUserSettings';\nimport type { ComponentWithLayout } from '../../hooks/useLayout';\nconst ASINListPage: ComponentWithLayout = () => {\n  const {\n    data\n  } = useFetchUserSettings();\n  if (data?.userData?.settings?.uiEnhancements?.asinList) {\n    return <ASINList />;\n  }\n  return null;\n};\nASINListPage.getLayout = (page: ReactElement) => page;\nexport default ASINListPage;"],"names":["window","__NEXT_P","push","__webpack_require__","useFetchUserSettings","useQuery","queryFn","RequestProxy","fetchUserData","queryKey","FETCH_USER_DATA_QUERY_KEY","meta","errorMessage","handleError","value","then","data","type","ErrorResponse","payload","statusCode","message","USER_DATA_URL","concat","process","chrome","runtime","sendMessage","url","fetchSalesAndTrafficReport","marketplace","amazonDateRange","amazonAppConfigUserInfo","sendInvalidateUserDataCache","common_CopyButton","onCopy","param","jsx_runtime","jsx","Tooltip","title","data-sentry-element","data-sentry-component","data-sentry-source-file","IconButton","onClick","e","enqueueSnackbar","variant","Iconify","icon","asinList_ASINListTable","columns","theme","useTheme","TableContainer","sx","maxHeight","width","jsxs","Table","stickyHeader","padding","TableHead","TableRow","map","column","index","TableCell","borderTopLeftRadius","spacing","borderTopRightRadius","length","textAlign","TableBody","Object","keys","asin","item","ASINListUtils","extractAsinData","Array","dimensionValuesPattern","currentAsinPattern","parentAsinPattern","dimensionsPattern","result","currentAsin","dimensionColumns","dimensionValues","parentAsin","scriptContent","from","document","querySelectorAll","find","script","textContent","match","dimensionValuesMatch","currentAsinMatch","parentAsinMatch","dimensionsMatch","dimensionsContent","dynamicColumns","JSON","parse","str","split","part","charAt","toUpperCase","slice","join","extractCategories","startsWithRankingNumberRegex","rankingNumberRegex","productDetailsTableRows","productDetailsList","td","row","trim","productListWithRankings","filter","_item_innerText_trim","_item_innerText","innerText","rankingListSpans","extractCategoriesFromList","list","text","span","regex","exec","val","regexMatch","categoryName","substring","indexOf","name","rank","generateCSVText","entries","asinKey","asinData","asinList_Categories","Typography","color","category","asinList_ASINList","appName","useAppContext","showTable","useBoolean","copy","useCopyToClipboard","copiedText","setCopiedText","useState","useCallback","navigator","clipboard","console","warn","writeText","error","useMemo","categories","stopPropagation","Card","p","Stack","alignItems","direction","Image","alt","AppLogo","style","height","marginRight","objectFit","Box","display","justifyContent","b","CopyButton","Categories","Accordion","expanded","mb","mt","AccordionSummary","expandIcon","onToggle","AccordionDetails","boxShadow","ASINListTable","ASINListPage","userData","settings","uiEnhancements","asinList","ASINList","getLayout","page","asin_list"],"sourceRoot":""}