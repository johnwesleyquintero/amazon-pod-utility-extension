{"version":3,"file":"static/chunks/pages/redirect-279fe440927d2084.js","mappings":"2aACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,YACA,WACA,OAAeC,EAAQ,MACvB,EACA,oJCIA,IAAMC,EAAW,KACf,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACTC,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IACX,CAACC,EAAYC,EAAc,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAkB,IAChDC,EAAeC,CAAAA,EAAAA,EAAAA,eAAAA,IAoCrB,MAnCAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMC,EAAW,cAIXC,EAHJ,IAAMC,EAAeL,EAAaM,GAAG,CAAC,gBAChCC,EAAeP,EAAaM,GAAG,CAAC,QAClCE,EAA0BC,EAAAA,CAAMA,CAACC,KAAK,CAE1C,GAAI,CAACL,EAAc,CACjBZ,EAAOkB,OAAO,CAACH,GACf,MACF,CACA,GAAI,CAEK,iBADCD,IAGD,CACCH,sBAAAA,CAAqB,CACtB,CAAG,MAAMQ,EAAAA,CAAaA,CAACC,0BAA0B,CAAC,CACjDR,aAAAA,CACF,GACAV,EAASmB,EAAAA,CAAWA,CAACC,wBAAwB,CAACX,IAC9CI,EAAgBC,EAAAA,CAAMA,CAACO,mBAAmB,CAMlD,QAAU,CACRvB,EAAOkB,OAAO,CAACH,EACjB,CACF,EACKX,IACHC,EAAc,IACdK,IAEJ,EAAG,CAACR,EAAUF,EAAQI,EAAYC,EAAeE,EAAa,EACvD,GAAAiB,EAAAC,GAAA,EAACC,EAAAA,CAAYA,CAAAA,CAACC,sBAAoB,eAAeC,wBAAsB,WAAWC,0BAAwB,aACnH,CACA9B,CAAAA,EAAS+B,SAAS,CAAG,GAA8BC,EACnDC,EAAA,QAAejC","sources":["webpack://_N_E/?63d5","webpack://_N_E/./src/pages/redirect/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/redirect\",\n      function () {\n        return require(\"private-next-pages/redirect/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/redirect\"])\n      });\n    }\n  ","import { SplashScreen } from '@riptech/minimal-ui/src/components/loading-screen';\nimport { useSearchParams } from 'next/navigation';\nimport { useRouter } from 'next/router';\nimport type React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport UserActions from '../../redux/actions/userActions';\nimport ServerlessAPI from '../../utils/api/serverless/ServerlessAPI';\nimport type { AppRoute } from '../../utils/routes';\nimport Routes from '../../utils/routes';\nconst Redirect = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [redirected, setRedirected] = useState<boolean>(false);\n  const searchParams = useSearchParams();\n  useEffect(() => {\n    const redirect = async () => {\n      const refreshToken = searchParams.get('refreshToken');\n      const redirectType = searchParams.get('type');\n      let redirectRoute: AppRoute = Routes.INDEX;\n      let googleDriveConnection;\n      if (!refreshToken) {\n        router.replace(redirectRoute);\n        return;\n      }\n      try {\n        switch (redirectType) {\n          case 'Google Drive':\n            {\n              ({\n                googleDriveConnection\n              } = await ServerlessAPI.saveGoogleDriveIntegration({\n                refreshToken\n              }));\n              dispatch(UserActions.setGoogleDriveConnection(googleDriveConnection));\n              redirectRoute = Routes.AUTH_GOOGLE_SUCCESS;\n              break;\n            }\n          default:\n            break;\n        }\n      } finally {\n        router.replace(redirectRoute);\n      }\n    };\n    if (!redirected) {\n      setRedirected(true);\n      redirect();\n    }\n  }, [dispatch, router, redirected, setRedirected, searchParams]);\n  return <SplashScreen data-sentry-element=\"SplashScreen\" data-sentry-component=\"Redirect\" data-sentry-source-file=\"index.tsx\" />;\n};\nRedirect.getLayout = (page: React.ReactElement) => page;\nexport default Redirect;"],"names":["window","__NEXT_P","push","__webpack_require__","Redirect","router","useRouter","dispatch","useDispatch","redirected","setRedirected","useState","searchParams","useSearchParams","useEffect","redirect","googleDriveConnection","refreshToken","get","redirectType","redirectRoute","Routes","INDEX","replace","ServerlessAPI","saveGoogleDriveIntegration","UserActions","setGoogleDriveConnection","AUTH_GOOGLE_SUCCESS","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","SplashScreen","data-sentry-element","data-sentry-component","data-sentry-source-file","getLayout","page","__webpack_exports__"],"sourceRoot":""}