{"version":3,"file":"static/chunks/987-0d07868f56d67c2e.js","mappings":"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","sources":["webpack://_N_E/./src/utils/reports/ReportDownloadUtils.ts","webpack://_N_E/./src/utils/reports/ReportFormUtils.ts","webpack://_N_E/./src/utils/reports/ReportRequestUtils.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/BaseRequest.ts","webpack://_N_E/./src/utils/GraphQLHelper.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/utils/SalesAndTrafficRequestUtils.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/SellerCentralRequest.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/SellerCentralRequestManager.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/utils/BusinessReportRequestUtils.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/utils/SCPRequestUtils.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/utils/SQPRequestUtils.ts","webpack://_N_E/./src/utils/request/SellerCentralRequest/utils/TSTRequestUtils.ts","webpack://_N_E/./src/utils/DataDestinationUtils.ts","webpack://_N_E/./src/components/common/TooltipMenuItem.tsx","webpack://_N_E/../../packages/riptech/shared-ui/src/components/Autocomplete/styles.tsx","webpack://_N_E/../../packages/riptech/shared-ui/src/components/Autocomplete/AutocompleteNoOptions.tsx","webpack://_N_E/./src/components/dataDestination/DataConfigurationModal.tsx","webpack://_N_E/../../packages/riptech/shared-ui/src/components/Autocomplete/AutocompleteLoader.tsx","webpack://_N_E/./src/components/dataDestination/GoogleDriveItemSelector.tsx","webpack://_N_E/./src/components/dataDestination/hooks/useGoogleSheetColumnHeaders.ts","webpack://_N_E/./src/components/dataDestination/GoogleSheetSelector.tsx","webpack://_N_E/./src/components/dataDestination/hooks/useGoogleDriveFolders.ts","webpack://_N_E/./src/components/dataDestination/hooks/useGoogleSheet.ts","webpack://_N_E/./src/components/dataDestination/hooks/usePreviousDestinations.ts","webpack://_N_E/./src/components/dataDestination/DataDestinationPicker.tsx","webpack://_N_E/./src/components/reportFetcher/common/NoActiveSessionAlert.tsx","webpack://_N_E/./src/components/reportFetcher/common/ReportFormContainer.tsx","webpack://_N_E/./src/components/reportFetcher/common/ReportProgressBar.tsx","webpack://_N_E/./src/components/reportFetcher/common/ReportSnackbarActions.tsx","webpack://_N_E/./src/components/reportFetcher/useReportFetcher.tsx","webpack://_N_E/../../packages/riptech/shared-ui/src/pages/email-verification.tsx","webpack://_N_E/../../packages/riptech/shared-ui/src/pages/index.ts","webpack://_N_E/../../packages/riptech/shared-ui/src/utils/DataGridUtils.ts","webpack://_N_E/../../packages/riptech/shared-ui/src/utils/InfiniteQueryUtils.ts","webpack://_N_E/../../packages/riptech/shared-ui/src/utils/NotificationUtils.ts","webpack://_N_E/../../packages/riptech/shared-ui/src/utils/StringUtils.ts","webpack://_N_E/../../packages/riptech/shared-ui/src/utils/index.ts","webpack://_N_E/../../packages/riptech/shared-ui/src/index.ts","webpack://_N_E/ignored|/Users/jakeleventhal/Developer/rip-technologies/node_modules/.pnpm/postcss@8.4.47/node_modules/postcss/lib|./terminal-highlight","webpack://_N_E/ignored|/Users/jakeleventhal/Developer/rip-technologies/node_modules/.pnpm/postcss@8.4.47/node_modules/postcss/lib|fs","webpack://_N_E/ignored|/Users/jakeleventhal/Developer/rip-technologies/node_modules/.pnpm/postcss@8.4.47/node_modules/postcss/lib|path","webpack://_N_E/ignored|/Users/jakeleventhal/Developer/rip-technologies/node_modules/.pnpm/postcss@8.4.47/node_modules/postcss/lib|source-map-js"],"sourcesContent":["import type { ErrorResponse } from '@riptech/utils';\nimport { HTTPErrors } from '@riptech/utils';\nimport _ from 'lodash';\nimport type { Moment } from 'moment-timezone';\nimport moment from 'moment-timezone';\n\ntype StringOrNumberKeys<T> = {\n  [K in keyof T]: T[K] extends string | number ? K : never;\n}[keyof T];\n\nexport default class ReportDownloadUtils {\n  static convertMultilineTextToArray = _.memoize((text: string) =>\n    Array.from(\n      new Set<string>(\n        text\n          .trim()\n          .split('\\n')\n          .map((val) => val.trim().toUpperCase())\n          .filter((val) => !!val)\n      )\n    )\n  );\n\n  static sanitizeValue(value: string): string {\n    return `\"${value.replaceAll('\"', '\"\"')}\"`;\n  }\n\n  static sanitizeValuesWithComma<T>(keys: Array<StringOrNumberKeys<T>>, row: T) {\n    keys.forEach((key) => {\n      if (typeof row[key] === 'string' && row[key].includes(',')) {\n        row[key] = this.sanitizeValue(row[key]) as T[StringOrNumberKeys<T>];\n      }\n    });\n  }\n\n  static handleNetworkError(err: unknown) {\n    if ((err as ErrorResponse).rawCode === 'ERR_NETWORK') {\n      throw new HTTPErrors.Unauthorized({\n        message: 'Please ensure you have an active Seller Central session with the marketplace selected in the navbar'\n      });\n    }\n  }\n\n  static getFormattedPeriod(reportingRange: string, periodEndDate: string) {\n    switch (reportingRange) {\n      case 'Weekly':\n        return moment.utc(periodEndDate).format('YYYY-MM-DD');\n      case 'Monthly':\n        return moment.utc(periodEndDate).format('MMMM YYYY');\n      case 'Quarterly':\n        return moment.utc(periodEndDate).format('[Q]Q YYYY');\n      default:\n        throw new Error(`Unknown reporting range: ${reportingRange}`);\n    }\n  }\n\n  static getRangeFiltersByReportingRange(reportingRange: string, periodEndDate: Moment) {\n    const yearString = periodEndDate.format('YYYY');\n    switch (reportingRange) {\n      case 'Weekly':\n        return [\n          {\n            id: 'weekly-week',\n            value: periodEndDate.utc().format('YYYY-MM-DD'),\n            valueType: reportingRange.toLowerCase()\n          }\n        ];\n      case 'Monthly':\n        return [\n          { id: 'monthly-year', value: yearString, valueType: null },\n          {\n            id: `${yearString}-month`,\n            value: periodEndDate.utc().format('YYYY-MM-DD'),\n            valueType: reportingRange.toLowerCase()\n          }\n        ];\n      case 'Quarterly':\n        return [\n          { id: 'quarterly-year', value: yearString, valueType: null },\n          {\n            id: `${yearString}-quarter`,\n            value: periodEndDate.utc().format('YYYY-MM-DD'),\n            valueType: reportingRange.toLowerCase()\n          }\n        ];\n      default:\n        throw new HTTPErrors.BadRequest({ message: `Unrecognized reporting range type: ${reportingRange}` });\n    }\n  }\n\n  static readonly generateSheetData = <T extends Record<string, string>>(\n    csvData: Array<Record<keyof T, string | number>>,\n    columns: T\n  ): Array<Array<string | number>> => [\n    Object.values(columns),\n    ...csvData.map((rowToAdd) => (Object.keys(columns) as Array<keyof typeof columns>).map((name) => rowToAdd[name]))\n  ];\n\n  /**\n   * Converts an array of CSV data to a CSV string.\n   * @param csvData An array of the CSV data in JSON format.\n   * @param columns A mapping of column values to labels.\n   * @returns The CSV data formatted as a string with the headers included.\n   */\n  static readonly generateCSVText = <T extends Record<string, string>>(\n    csvData: Array<Record<keyof T, string | number>>,\n    columns: T\n  ) =>\n    [\n      Object.values(columns).join(','),\n      ...csvData.map((rowToAdd) =>\n        (Object.keys(columns) as Array<keyof typeof columns>).map((name) => rowToAdd[name]).join(',')\n      )\n    ].join('\\n');\n\n  /**\n   * Returns a random sleep time that is 5s +/- 250ms to simulate real usage.\n   * @returns A random sleep time in milliseconds.\n   */\n  static readonly getSellerCentralSleepTime = () => _.random(4750, 5250);\n}\n","import type { BaseReportForm } from '@seller-utilities/types';\n\nexport default class ReportFormUtils {\n  static isInvalidDestination(formValues: BaseReportForm) {\n    const isSheet = formValues.downloadDestinationType === 'Google Sheet';\n    const isDrive = formValues.downloadDestinationType === 'Google Drive';\n    const missingDataConfiguration = formValues.isSavingToPreviousDestination && !formValues.dataConfigurationId;\n    const missingDriveItem = (isSheet || isDrive) && !formValues.googleDriveItem;\n    const missingSheetSheet = isSheet && !formValues.googleSheetSheet;\n    const incompleteDataConfiguration = !!formValues.googleSheetSheet && !formValues.dataConfigurationId;\n\n    return missingDataConfiguration || missingDriveItem || missingSheetSheet || incompleteDataConfiguration;\n  }\n}\n","import type { SCPPayloadParameter } from '../request/SellerCentralRequest/utils/SCPRequestUtils';\nimport type { SQPPayloadParameter } from '../request/SellerCentralRequest/utils/SQPRequestUtils';\nimport type { TSTPayloadParameter } from '../request/SellerCentralRequest/utils/TSTRequestUtils';\n\nexport default class ReportRequestUtils {\n  static generateReportRefererUrl = (\n    url: string,\n    payload: SQPPayloadParameter | SCPPayloadParameter | TSTPayloadParameter,\n    viewId: string\n  ) => {\n    const queryKeyValue = Object.fromEntries(\n      payload.filterSelections.filter((option) => option.value).map((option) => [option.id, option.value])\n    );\n\n    return `${url}?${new URLSearchParams({\n      // Order here is important\n      'view-id': viewId,\n      ...queryKeyValue,\n      'country-id': payload.selectedCountries[0]\n    })}`;\n  };\n}\n","import type { AxiosResponse } from '@riptech/utils/src/errors/axiosUtil';\nimport createAxiosInstance from '@riptech/utils/src/errors/axiosUtil';\nimport type { ErrorResponse } from '@riptech/utils/src/errors/ErrorResponse';\nimport { ApiError } from '@riptech/utils/src/errors/ErrorResponse';\nimport { HTTPErrors } from '@riptech/utils/src/errors/HTTPErrors';\nimport _ from 'lodash';\n\nexport default abstract class BaseRequest {\n  private readonly RULE_ID = parseInt(_.uniqueId(), 10);\n\n  baseUrl: string;\n\n  private readonly csrfTokenUrl: string;\n\n  protected csrfToken = '';\n\n  private readonly axios: ReturnType<typeof createAxiosInstance>;\n\n  private async scrapeCsrfToken() {\n    const tab = await chrome.tabs.create({ active: false, url: this.csrfTokenUrl });\n    if (!tab.id) {\n      throw new HTTPErrors.ServerError({\n        message: `Failed to open tab for ${this.csrfTokenUrl}`\n      });\n    }\n    const injectionResults = await chrome.scripting.executeScript({\n      func: () => {\n        const csrfEl = document.querySelector('meta[name=\"anti-csrftoken-a2z\"]');\n        return csrfEl?.attributes?.getNamedItem('content')?.value;\n      },\n      target: { tabId: tab.id }\n    });\n\n    await chrome.tabs.remove(tab.id);\n\n    const csrfToken = injectionResults[0].result;\n    if (!csrfToken) {\n      throw new Error('Failed to get CSRF Token');\n    }\n    return csrfToken;\n  }\n\n  protected async addHeadersOverride({\n    csrfToken,\n    urlFilter,\n    referer,\n    origin\n  }: {\n    referer: string;\n    origin: string;\n    urlFilter: string;\n    csrfToken?: string;\n  }) {\n    await chrome.declarativeNetRequest.updateDynamicRules({\n      addRules: [\n        {\n          action: {\n            requestHeaders: [\n              ...(csrfToken\n                ? [\n                    {\n                      header: 'Anti-Csrftoken-A2z',\n                      operation: chrome.declarativeNetRequest.HeaderOperation.SET,\n                      value: csrfToken\n                    }\n                  ]\n                : []),\n              {\n                header: 'Origin',\n                operation: chrome.declarativeNetRequest.HeaderOperation.SET,\n                value: origin\n              },\n              {\n                header: 'Referer',\n                operation: chrome.declarativeNetRequest.HeaderOperation.SET,\n                value: referer\n              },\n              {\n                header: 'Sec-Fetch-Site',\n                operation: chrome.declarativeNetRequest.HeaderOperation.SET,\n                value: 'same-origin'\n              }\n            ],\n            type: chrome.declarativeNetRequest.RuleActionType.MODIFY_HEADERS\n          },\n          condition: {\n            initiatorDomains: [chrome.runtime.id],\n            resourceTypes: Object.values(chrome.declarativeNetRequest.ResourceType),\n            urlFilter\n          },\n          id: this.RULE_ID,\n          priority: 1\n        }\n      ],\n      removeRuleIds: [this.RULE_ID]\n    });\n  }\n\n  private handleCommonErrors(error: ErrorResponse) {\n    if (error?.statusCode === ApiError.Forbidden) {\n      return new HTTPErrors.Forbidden({ message: `Please sign in to Amazon Seller Central ${this.baseUrl}` });\n    }\n    return error;\n  }\n\n  private async removeHeadersOverride() {\n    await chrome.declarativeNetRequest.updateDynamicRules({\n      removeRuleIds: [this.RULE_ID]\n    });\n  }\n\n  protected constructor(baseUrl: string, csrfTokenUrl: string) {\n    this.csrfTokenUrl = csrfTokenUrl;\n    this.baseUrl = baseUrl;\n    this.axios = createAxiosInstance(\n      // Don't retry since errors shouldn't happen and will slow down the user experience\n      false,\n      {\n        axiosConfig: {\n          adapter: 'fetch',\n          baseURL: this.baseUrl,\n          fetchOptions: {\n            redirect: 'manual'\n          },\n          headers: {\n            Accept: '*/*',\n            'Content-Type': 'application/json'\n          }\n        }\n      }\n    );\n  }\n\n  protected async getCsrfToken() {\n    if (this.csrfToken) {\n      return this.csrfToken;\n    }\n    this.csrfToken = await this.scrapeCsrfToken();\n    return this.csrfToken;\n  }\n\n  private static handleGraphQLLoginRedirect<T>(response: AxiosResponse<T>) {\n    if (!response?.status) {\n      throw new HTTPErrors.Forbidden();\n    }\n    return response;\n  }\n\n  private async makeAPIRequest<T = any>(requestType: 'rest' | 'gql', url: string, payload: any) {\n    try {\n      const response = await this.axios.post<T>(url, payload);\n      return requestType === 'gql' ? BaseRequest.handleGraphQLLoginRedirect<T>(response) : response;\n    } catch (e: any) {\n      throw this.handleCommonErrors(e);\n    } finally {\n      await this.removeHeadersOverride();\n    }\n  }\n\n  protected async makeRESTRequest<T = any>(url: string, payload: any) {\n    return this.makeAPIRequest<T>('rest', url, payload);\n  }\n\n  protected async makeGraphQLRequest<T = any>(url: string, payload: any) {\n    return this.makeAPIRequest<T>('gql', url, payload);\n  }\n}\n","import gqlmin from 'gqlmin';\nimport type { Variables } from 'graphql-request';\n\nexport default class GraphQLHelper {\n  static createRequestBody = (\n    query: string | Array<string>,\n    variables?: Variables | Array<Variables>,\n    operationName?: string\n  ): string => {\n    if (!Array.isArray(query)) {\n      return JSON.stringify({ operationName, query: gqlmin(query), variables });\n    }\n\n    if (typeof variables !== `undefined` && !Array.isArray(variables)) {\n      throw new Error(`Cannot create request body with given variable type, array expected`);\n    }\n\n    // Batch support\n    const payload = query.reduce<Array<{ query: string; variables: Variables | undefined }>>(\n      (acc, currentQuery, index) => {\n        acc.push({ query: gqlmin(currentQuery), variables: variables ? variables[index] : undefined });\n        return acc;\n      },\n      []\n    );\n\n    return JSON.stringify(payload);\n  };\n}\n","import type { BusinessReportsRequestType } from '@seller-utilities/database';\nimport { gql } from 'graphql-request';\n\nimport GraphQLHelper from '../../../GraphQLHelper';\nimport type { AmazonDateRange } from '../../InlinePageRequest/AdvRequest';\n\nexport default class SalesAndTrafficRequestUtils {\n  private static readonly getLegacyReportId = (requestType: BusinessReportsRequestType) => {\n    switch (requestType) {\n      case 'Date':\n        return '102:SalesTrafficTimeSeries';\n      case 'SKU':\n        return '102:DetailSalesTrafficBySKU';\n      case 'ChildASIN':\n        return '102:DetailSalesTrafficByChildItem';\n      case 'ParentASIN':\n        return '102:DetailSalesTrafficByParentItem';\n      default:\n        throw new Error(`Unknown request type: ${requestType}`);\n    }\n  };\n\n  static readonly SELLER_METADATA_REQUEST_BODY = GraphQLHelper.createRequestBody(\n    gql`\n      query sellerMetadata {\n        getSellerMetaData {\n          marketplaceId\n          sellerId\n          asinUrl\n          byDateReports {\n            reportDefinitionId\n            title\n            translationKey\n            __typename\n          }\n          byAsinReports {\n            reportDefinitionId\n            title\n            translationKey\n            __typename\n          }\n          otherReports {\n            reportDefinitionId\n            title\n            translationKey\n            __typename\n          }\n          localeInfo {\n            currencyCode\n            locale\n            timeZone\n            __typename\n          }\n          __typename\n        }\n      }\n    `,\n    {\n      input: {}\n    },\n    'sellerMetadata'\n  );\n\n  static getSalesAndTrafficReportDataQuery = (amazonDateRange: AmazonDateRange) =>\n    GraphQLHelper.createRequestBody(\n      gql`\n        query reportDataQuery($input: GetReportDataInput) {\n          getReportData(input: $input) {\n            granularity\n            hadPrevious\n            hasNext\n            size\n            startDate\n            endDate\n            page\n            columns {\n              label\n              valueFormat\n              isGraphable\n              translationKey\n              isDefaultSortAscending\n              isDefaultGraphed\n              isDefaultSelected\n              isDefaultSortColumn\n              __typename\n            }\n            rows\n            __typename\n          }\n        }\n      `,\n      {\n        input: {\n          endDate: amazonDateRange.endISO,\n          granularity: amazonDateRange.granularity,\n          legacyReportId: this.getLegacyReportId('Date'),\n          startDate: amazonDateRange.startISO\n        }\n      },\n      'reportDataQuery'\n    );\n\n  static getSalesAndTrafficByASINReportDataQuery = (\n    amazonDateRange: AmazonDateRange,\n    requestType: BusinessReportsRequestType,\n    asins: Array<string>,\n    page: number\n  ) => {\n    if (requestType === 'Date') {\n      return this.getSalesAndTrafficReportDataQuery(amazonDateRange);\n    }\n\n    const legacyReportId = this.getLegacyReportId(requestType);\n    return GraphQLHelper.createRequestBody(\n      gql`\n        query reportDataQuery($input: GetReportDataInput) {\n          getReportData(input: $input) {\n            granularity\n            hadPrevious\n            hasNext\n            size\n            startDate\n            endDate\n            page\n            columns {\n              label\n              valueFormat\n              isGraphable\n              translationKey\n              isDefaultSortAscending\n              isDefaultGraphed\n              isDefaultSelected\n              isDefaultSortColumn\n              __typename\n            }\n            rows\n            __typename\n          }\n        }\n      `,\n      {\n        input: {\n          asins,\n          endDate: amazonDateRange.endISO,\n          legacyReportId,\n          page,\n          startDate: amazonDateRange.startISO\n        }\n      },\n      'reportDataQuery'\n    );\n  };\n\n  static getReportColumnsQuery = (requestType: BusinessReportsRequestType) => {\n    const legacyReportId = this.getLegacyReportId(requestType);\n    return GraphQLHelper.createRequestBody(\n      gql`\n        query reportDataQuery($input: GetReportDataInput) {\n          getReportData(input: $input) {\n            columns {\n              label\n              valueFormat\n              translationKey\n            }\n          }\n        }\n      `,\n      { input: { legacyReportId } },\n      'reportDataQuery'\n    );\n  };\n}\n","import type { BusinessReportsRequestType, SellerCentralMarketplace } from '@seller-utilities/database';\nimport { SUPPORTED_MARKETPLACES } from '@seller-utilities/database';\nimport type {\n  BusinessReportsMetadataResponse,\n  RawReportMetadataResponse,\n  SalesAndTrafficReportResponse,\n  SCPAPIDataResponse,\n  TSTAPIDataResponse\n} from '@seller-utilities/types';\nimport type { SQPAPIDataResponse } from '@seller-utilities/types/src/api/reports/sqp';\n\nimport ReportRequestUtils from '../../reports/ReportRequestUtils';\nimport type { AmazonDateRange } from '../InlinePageRequest/AdvRequest';\nimport BaseRequest from './BaseRequest';\nimport SalesAndTrafficRequestUtils from './utils/SalesAndTrafficRequestUtils';\nimport type { SCPPayloadParameter } from './utils/SCPRequestUtils';\nimport SCPRequestUtils from './utils/SCPRequestUtils';\nimport type { SQPPayloadParameter } from './utils/SQPRequestUtils';\nimport type { TSTPayloadParameter } from './utils/TSTRequestUtils';\nimport TSTRequestUtils from './utils/TSTRequestUtils';\n\nexport default class SellerCentralRequest extends BaseRequest {\n  constructor(marketplace: SellerCentralMarketplace) {\n    const baseUrl = `https://sellercentral.amazon.${SUPPORTED_MARKETPLACES[marketplace].urlSuffix}`;\n    super(baseUrl, `${baseUrl}/brand-analytics/dashboard/`); // Arbitrary API route to get CSRF token from\n  }\n\n  async fetchSQPAPIData(payload: SQPPayloadParameter, isBrands: boolean) {\n    await this.addHeadersOverride({\n      csrfToken: await this.getCsrfToken(),\n      origin: this.baseUrl,\n      referer: ReportRequestUtils.generateReportRefererUrl(\n        `${this.baseUrl}/brand-analytics/dashboard/query-performance`,\n        payload,\n        isBrands ? 'query-performance-brands-view' : 'query-performance-asin-view'\n      ),\n      urlFilter: `${this.baseUrl}/api`\n    });\n\n    return (\n      await this.makeRESTRequest<SQPAPIDataResponse>(\n        '/api/brand-analytics/v1/dashboard/query-performance/reports',\n        payload\n      )\n    ).data.reportsV2[0];\n  }\n\n  async fetchSCPAPIData(payload: SCPPayloadParameter) {\n    await this.addHeadersOverride({\n      csrfToken: await this.getCsrfToken(),\n      origin: this.baseUrl,\n      referer: SCPRequestUtils.getSCPFetchAPIDataReferer(this.baseUrl, payload),\n      urlFilter: `${this.baseUrl}/api`\n    });\n\n    return (\n      await this.makeRESTRequest<SCPAPIDataResponse>(\n        '/api/brand-analytics/v1/dashboard/brand-catalog-performance/reports',\n        payload\n      )\n    ).data.reportsV2[0];\n  }\n\n  async fetchTSTAPIData(payload: TSTPayloadParameter) {\n    await this.addHeadersOverride({\n      csrfToken: await this.getCsrfToken(),\n      origin: this.baseUrl,\n      referer: TSTRequestUtils.getTSTFetchAPIDataReferer(this.baseUrl, payload),\n      urlFilter: `${this.baseUrl}/api`\n    });\n\n    return (\n      await this.makeRESTRequest<TSTAPIDataResponse>(\n        '/api/brand-analytics/v1/dashboard/top-search-terms/reports',\n        payload\n      )\n    ).data.reportsV2[0];\n  }\n\n  private async fetchMetadata<T = RawReportMetadataResponse>(\n    marketplace: SellerCentralMarketplace,\n    baseRefererUrl: string,\n    requestUrl: string\n  ) {\n    await this.addHeadersOverride({\n      csrfToken: await this.getCsrfToken(),\n      origin: this.baseUrl,\n      referer: `${baseRefererUrl}?${new URLSearchParams({ 'country-id': marketplace })}`,\n      urlFilter: `${this.baseUrl}/api`\n    });\n\n    return (\n      await this.makeRESTRequest<T>(requestUrl, {\n        selectedCountries: [marketplace]\n      })\n    ).data;\n  }\n\n  async fetchSQPMetadata(marketplace: SellerCentralMarketplace) {\n    const baseRefererUrl = `${this.baseUrl}/brand-analytics/dashboard/query-performance`;\n    const requestUrl = '/api/brand-analytics/v1/dashboard/query-performance/metadata';\n    return this.fetchMetadata(marketplace, baseRefererUrl, requestUrl);\n  }\n\n  async fetchSCPMetadata(marketplace: SellerCentralMarketplace) {\n    const baseRefererUrl = `${this.baseUrl}/brand-analytics/dashboard/brand-catalog-performance`;\n    const requestUrl = '/api/brand-analytics/v1/dashboard/brand-catalog-performance/metadata';\n    return this.fetchMetadata(marketplace, baseRefererUrl, requestUrl);\n  }\n\n  async fetchTSTMetadata(marketplace: SellerCentralMarketplace) {\n    const baseRefererUrl = `${this.baseUrl}/brand-analytics/dashboard/top-search-terms`;\n    const requestUrl = '/api/brand-analytics/v1/dashboard/top-search-terms/metadata';\n    return this.fetchMetadata(marketplace, baseRefererUrl, requestUrl);\n  }\n\n  async fetchSalesAndTrafficReportByASIN(\n    amazonDateRange: AmazonDateRange,\n    requestType: BusinessReportsRequestType,\n    asins: Array<string>,\n    page: number\n  ) {\n    await this.addHeadersOverride({\n      origin: this.baseUrl,\n      referer: `${this.baseUrl}/business-reports/ref=xx_sitemetric_favb_xx`,\n      urlFilter: `${this.baseUrl}/business-reports/api`\n    });\n\n    return (\n      await this.makeGraphQLRequest<SalesAndTrafficReportResponse>(\n        '/business-reports/api',\n        SalesAndTrafficRequestUtils.getSalesAndTrafficByASINReportDataQuery(amazonDateRange, requestType, asins, page)\n      )\n    ).data;\n  }\n\n  async fetchSalesAndTrafficReportColumns(requestType: BusinessReportsRequestType) {\n    await this.addHeadersOverride({\n      origin: this.baseUrl,\n      referer: `${this.baseUrl}/business-reports/ref=xx_sitemetric_favb_xx`,\n      urlFilter: `${this.baseUrl}/business-reports/api`\n    });\n\n    return (\n      await this.makeGraphQLRequest<SalesAndTrafficReportResponse>(\n        '/business-reports/api',\n        SalesAndTrafficRequestUtils.getReportColumnsQuery(requestType)\n      )\n    ).data;\n  }\n\n  async fetchSalesAndTrafficReport(amazonDateRange: AmazonDateRange) {\n    await this.addHeadersOverride({\n      origin: this.baseUrl,\n      referer: `${this.baseUrl}/business-reports/ref=xx_sitemetric_favb_xx`,\n      urlFilter: `${this.baseUrl}/business-reports/api`\n    });\n\n    return (\n      await this.makeGraphQLRequest<SalesAndTrafficReportResponse>(\n        '/business-reports/api',\n        SalesAndTrafficRequestUtils.getSalesAndTrafficReportDataQuery(amazonDateRange)\n      )\n    ).data;\n  }\n\n  async fetchSellerMetadata() {\n    await this.addHeadersOverride({\n      origin: this.baseUrl,\n      referer: `${this.baseUrl}/business-reports/ref=xx_sitemetric_favb_xx`,\n      urlFilter: `${this.baseUrl}/business-reports/api`\n    });\n\n    return (\n      await this.makeGraphQLRequest<BusinessReportsMetadataResponse>(\n        '/business-reports/api',\n        SalesAndTrafficRequestUtils.SELLER_METADATA_REQUEST_BODY\n      )\n    ).data;\n  }\n}\n","import type { SellerCentralMarketplace } from '@seller-utilities/database';\n\nimport SellerCentralRequest from './SellerCentralRequest';\n\nexport default class SellerCentralRequestManager {\n  private static marketplaceCache: Partial<Record<SellerCentralMarketplace, SellerCentralRequest>> = {};\n\n  private static getInstance(marketplace: SellerCentralMarketplace) {\n    if (SellerCentralRequestManager.marketplaceCache[marketplace]) {\n      return SellerCentralRequestManager.marketplaceCache[marketplace];\n    }\n    const request = new SellerCentralRequest(marketplace);\n    SellerCentralRequestManager.marketplaceCache[marketplace] = request;\n    return request;\n  }\n\n  static async fetchSQPAPIData(\n    marketplace: SellerCentralMarketplace,\n    ...params: Parameters<(typeof SellerCentralRequest.prototype)['fetchSQPAPIData']>\n  ) {\n    return this.getInstance(marketplace).fetchSQPAPIData(...params);\n  }\n\n  static async fetchSCPAPIData(\n    marketplace: SellerCentralMarketplace,\n    ...params: Parameters<(typeof SellerCentralRequest.prototype)['fetchSCPAPIData']>\n  ) {\n    return this.getInstance(marketplace).fetchSCPAPIData(...params);\n  }\n\n  static async fetchTSTAPIData(\n    marketplace: SellerCentralMarketplace,\n    ...params: Parameters<(typeof SellerCentralRequest.prototype)['fetchTSTAPIData']>\n  ) {\n    return this.getInstance(marketplace).fetchTSTAPIData(...params);\n  }\n\n  static async fetchSQPMetadata(marketplace: SellerCentralMarketplace) {\n    return this.getInstance(marketplace).fetchSQPMetadata(marketplace);\n  }\n\n  static async fetchSCPMetadata(marketplace: SellerCentralMarketplace) {\n    return this.getInstance(marketplace).fetchSCPMetadata(marketplace);\n  }\n\n  static async fetchTSTMetadata(marketplace: SellerCentralMarketplace) {\n    return this.getInstance(marketplace).fetchTSTMetadata(marketplace);\n  }\n\n  static async fetchSalesAndTrafficReportByASIN(\n    marketplace: SellerCentralMarketplace,\n    ...params: Parameters<(typeof SellerCentralRequest.prototype)['fetchSalesAndTrafficReportByASIN']>\n  ) {\n    return this.getInstance(marketplace).fetchSalesAndTrafficReportByASIN(...params);\n  }\n\n  static async fetchSalesAndTrafficReport(\n    marketplace: SellerCentralMarketplace,\n    ...params: Parameters<(typeof SellerCentralRequest.prototype)['fetchSalesAndTrafficReport']>\n  ) {\n    return this.getInstance(marketplace).fetchSalesAndTrafficReport(...params);\n  }\n\n  static async fetchSalesAndTrafficReportColumns(\n    marketplace: SellerCentralMarketplace,\n    ...params: Parameters<(typeof SellerCentralRequest.prototype)['fetchSalesAndTrafficReportColumns']>\n  ) {\n    return this.getInstance(marketplace).fetchSalesAndTrafficReportColumns(...params);\n  }\n\n  static async fetchSellerMetadata(\n    marketplace: SellerCentralMarketplace,\n    ...params: Parameters<(typeof SellerCentralRequest.prototype)['fetchSellerMetadata']>\n  ) {\n    return this.getInstance(marketplace).fetchSellerMetadata(...params);\n  }\n\n  static async getBaseUrl(marketplace: SellerCentralMarketplace) {\n    return this.getInstance(marketplace).baseUrl;\n  }\n}\n","import type { BusinessReportsRequestType } from '@seller-utilities/database';\nimport type { ValueOf } from '@seller-utilities/types';\n\nexport default class BusinessRequestUtils {\n  static getColumns(requestType: BusinessReportsRequestType) {\n    switch (requestType) {\n      case 'Date':\n        return {\n          labels: BusinessRequestUtils.SALES_AND_TRAFFIC_COLUMN_LABELS,\n          order: BusinessRequestUtils.SALES_AND_TRAFFIC_COLUMNS_ORDER\n        };\n      case 'SKU':\n        return {\n          labels: BusinessRequestUtils.SALES_AND_TRAFFIC_BY_SKU_LABELS,\n          order: BusinessRequestUtils.SALES_AND_TRAFFIC_BY_SKU_ORDER\n        };\n      case 'ChildASIN':\n        return {\n          labels: BusinessRequestUtils.SALES_AND_TRAFFIC_BY_CHILD_ASIN_LABELS,\n          order: BusinessRequestUtils.SALES_AND_TRAFFIC_BY_CHILD_ASIN_ORDER\n        };\n      case 'ParentASIN':\n        return {\n          labels: BusinessRequestUtils.SALES_AND_TRAFFIC_BY_PARENT_ASIN_LABELS,\n          order: BusinessRequestUtils.SALES_AND_TRAFFIC_BY_CHILD_ASIN_ORDER\n        };\n\n      default:\n        throw new Error('Unknown request type');\n    }\n  }\n\n  private static readonly SALES_AND_TRAFFIC_COLUMNS_ORDER = [\n    'SC_MA_Date_25913',\n    'SC_MA_OrderedProductSales_40591',\n    'SCA_BR_OrderedProductSales_BB',\n    'SC_MA_UnitsOrdered_40590',\n    'SCA_BR_UnitsOrdered_BB',\n    'SC_MA_TotalOrderItems_1',\n    'SCA_BR_TotalOrderItems_BB',\n    'SC_MA_SalesPerOrderItem_1',\n    'SCA_BR_AverageSalesPerOrderItem_BB',\n    'SC_MA_UnitsPerOrderItem_1',\n    'SCA_BR_AverageUnitsPerOrderItem_BB',\n    'SC_MA_AverageSellingPrice_25919',\n    'SCA_BR_AverageSellingPrice_BB',\n    'SC_MA_MobileAppPageViews',\n    'SC_MA_MobileAppPageViews_BB',\n    'SC_MA_BrowserPageViews',\n    'SC_MA_BrowserPageViews_BB',\n    'SC_MA_PageViews_Total',\n    'SC_MA_PageViews_Total_BB',\n    'SC_MA_MobileAppSessions',\n    'SC_MA_MobileAppSessions_BB',\n    'SC_MA_BrowserSessions',\n    'SC_MA_BrowserSessions_BB',\n    'SC_MA_Sessions_Total',\n    'SC_MA_Sessions_Total_BB',\n    'SC_MA_BuyBoxPercentage_25956',\n    'SC_MA_BuyBoxPercentage_25956_BB',\n    'SC_MA_OrderItemSessionPercentage_1',\n    'SCA_BR_OrderItemSessionPercentage_BB_NEW',\n    'SC_MA_UnitSessionPercentage_25957',\n    'SCA_BR_UnitSessionPercentage_BB_NEW',\n    'SC_MA_AverageOfferCount_25954',\n    'SC_MA_AverageParentItems_25958',\n    'SC_MA_UnitsRefunded_25980',\n    'SC_MA_RefundRate_25981',\n    'SC_MA_FeedbackReceived_25982',\n    'SC_MA_NegativeFeedbackReceived_25983',\n    'SC_MA_ReceivedNegativeFeedbackRate_25984',\n    'SC_MA_AToZClaimsGranted_25985',\n    'SC_MA_ClaimsAmount_25986',\n    'SC_MA_ShippedProductSales_0002',\n    'SC_MA_UnitsShipped_0001',\n    'SC_MA_OrdersShipped_0001',\n    'Date Range'\n  ] as const;\n\n  private static readonly SALES_AND_TRAFFIC_COLUMN_LABELS = {\n    SC_MA_Date_25913: 'Date',\n    SC_MA_OrderedProductSales_40591: 'Ordered Product Sales',\n    SCA_BR_OrderedProductSales_BB: 'Ordered Product Sales - B2B',\n    SC_MA_UnitsOrdered_40590: 'Units Ordered',\n    SCA_BR_UnitsOrdered_BB: 'Units Ordered - B2B',\n    SC_MA_TotalOrderItems_1: 'Total Order Items',\n    SCA_BR_TotalOrderItems_BB: 'Total Order Items - B2B',\n    SC_MA_SalesPerOrderItem_1: 'Sales per Order Item',\n    SCA_BR_AverageSalesPerOrderItem_BB: 'Average Sales per Order Item - B2B',\n    SC_MA_UnitsPerOrderItem_1: 'Units per Order Item',\n    SCA_BR_AverageUnitsPerOrderItem_BB: 'Average Units per Order Item - B2B',\n    SC_MA_AverageSellingPrice_25919: 'Average Selling Price',\n    SCA_BR_AverageSellingPrice_BB: 'Average Selling Price - B2B',\n    SC_MA_MobileAppPageViews: 'Page Views - Mobile App',\n    SC_MA_MobileAppPageViews_BB: 'Page Views - Mobile App - B2B',\n    SC_MA_BrowserPageViews: 'Page Views - Browser',\n    SC_MA_BrowserPageViews_BB: 'Page Views - Browser - B2B',\n    SC_MA_PageViews_Total: 'Page Views - Total',\n    SC_MA_PageViews_Total_BB: 'Page Views - Total - B2B',\n    SC_MA_MobileAppSessions: 'Sessions - Mobile App',\n    SC_MA_MobileAppSessions_BB: 'Sessions - Mobile App - B2B',\n    SC_MA_BrowserSessions: 'Sessions - Browser',\n    SC_MA_BrowserSessions_BB: 'Sessions - Browser - B2B',\n    SC_MA_Sessions_Total: 'Sessions - Total',\n    SC_MA_Sessions_Total_BB: 'Sessions - Total - B2B',\n    SC_MA_BuyBoxPercentage_25956: 'Buy Box Percentage',\n    SC_MA_BuyBoxPercentage_25956_BB: 'Buy Box Percentage - B2B',\n    SC_MA_OrderItemSessionPercentage_1: 'Order Item Session Percentage',\n    SCA_BR_OrderItemSessionPercentage_BB_NEW: 'Order Item Session Percentage - B2B',\n    SC_MA_UnitSessionPercentage_25957: 'Unit Session Percentage',\n    SCA_BR_UnitSessionPercentage_BB_NEW: 'Unit Session Percentage - B2B',\n    SC_MA_AverageOfferCount_25954: 'Average Offer Count',\n    SC_MA_AverageParentItems_25958: 'Average Parent Items',\n    SC_MA_UnitsRefunded_25980: 'Units Refunded',\n    SC_MA_RefundRate_25981: 'Refund Rate',\n    SC_MA_FeedbackReceived_25982: 'Feedback Received',\n    SC_MA_NegativeFeedbackReceived_25983: 'Negative Feedback Received',\n    SC_MA_ReceivedNegativeFeedbackRate_25984: 'Received Negative Feedback Rate',\n    SC_MA_AToZClaimsGranted_25985: 'A-to-z Claims Granted',\n    SC_MA_ClaimsAmount_25986: 'Claims Amount',\n    SC_MA_ShippedProductSales_0002: 'Shipped Product Sales',\n    SC_MA_UnitsShipped_0001: 'Units Shipped',\n    SC_MA_OrdersShipped_0001: 'Orders Shipped',\n    'Date Range': 'Date Range'\n  } as const satisfies Record<(typeof this.SALES_AND_TRAFFIC_COLUMNS_ORDER)[number], string>;\n\n  private static readonly SALES_AND_TRAFFIC_BY_PRODUCT_BASE_ORDER = [\n    'SC_MA_MobileAppSessions',\n    'SC_MA_MobileAppSessions_BB',\n    'SC_MA_BrowserSessions',\n    'SC_MA_BrowserSessions_BB',\n    'SC_MA_Sessions_Total',\n    'SC_MA_Sessions_Total_BB',\n    'SC_MA_MobileAppSessionPercentage',\n    'SC_MA_MobileAppSessionPercentage_BB',\n    'SC_MA_BrowserSessionPercentage',\n    'SC_MA_BrowserSessionPercentage_BB',\n    'SC_MA_SessionPercentage_Total',\n    'SC_MA_SessionPercentage_Total_BB',\n    'SC_MA_MobileAppPageViews',\n    'SC_MA_MobileAppPageViews_BB',\n    'SC_MA_BrowserPageViews',\n    'SC_MA_BrowserPageViews_BB',\n    'SC_MA_PageViews_Total',\n    'SC_MA_PageViews_Total_BB',\n    'SC_MA_MobileAppPageViewsPercentage',\n    'SC_MA_MobileAppPageViewsPercentage_BB',\n    'SC_MA_BrowserPageViewsPercentage',\n    'SC_MA_BrowserPageViewsPercentage_BB',\n    'SC_MA_PageViewsPercentage_Total',\n    'SC_MA_PageViewsPercentage_Total_BB',\n    'SC_MA_BuyBoxPercentage_25956',\n    'SC_MA_BuyBoxPercentage_25956_BB',\n    'SC_MA_UnitsOrdered_40590',\n    'SCA_BR_UnitsOrdered_BB',\n    'SC_MA_UnitSessionPercentage_25957',\n    'SCA_BR_UnitSessionPercentage_BB_NEW',\n    'SC_MA_OrderedProductSales_40591',\n    'SCA_BR_OrderedProductSales_BB',\n    'SC_MA_TotalOrderItems_1',\n    'SCA_BR_TotalOrderItems_BB',\n    'Date Range'\n  ] as const;\n\n  private static readonly SALES_AND_TRAFFIC_BY_PRODUCT_BASE_LABELS = {\n    SC_MA_MobileAppSessions: 'Sessions - Mobile App',\n    SC_MA_MobileAppSessions_BB: 'Sessions - Mobile App - B2B',\n    SC_MA_BrowserSessions: 'Sessions - Browser',\n    SC_MA_BrowserSessions_BB: 'Sessions - Browser - B2B',\n    SC_MA_Sessions_Total: 'Sessions - Total',\n    SC_MA_Sessions_Total_BB: 'Sessions - Total - B2B',\n    SC_MA_MobileAppSessionPercentage: 'Session Percentage - Mobile App',\n    SC_MA_MobileAppSessionPercentage_BB: 'Session Percentage - Mobile App - B2B',\n    SC_MA_BrowserSessionPercentage: 'Session Percentage - Browser',\n    SC_MA_BrowserSessionPercentage_BB: 'Session Percentage - Browser - B2B',\n    SC_MA_SessionPercentage_Total: 'Session Percentage - Total',\n    SC_MA_SessionPercentage_Total_BB: 'Session Percentage - Total - B2B',\n    SC_MA_MobileAppPageViews: 'Page Views - Mobile App',\n    SC_MA_MobileAppPageViews_BB: 'Page Views - Mobile App - B2B',\n    SC_MA_BrowserPageViews: 'Page Views - Browser',\n    SC_MA_BrowserPageViews_BB: 'Page Views - Browser - B2B',\n    SC_MA_PageViews_Total: 'Page Views - Total',\n    SC_MA_PageViews_Total_BB: 'Page Views - Total - B2B',\n    SC_MA_MobileAppPageViewsPercentage: 'Page Views Percentage - Mobile App',\n    SC_MA_MobileAppPageViewsPercentage_BB: 'Page Views Percentage - Mobile App - B2B',\n    SC_MA_BrowserPageViewsPercentage: 'Page Views Percentage - Browser',\n    SC_MA_BrowserPageViewsPercentage_BB: 'Page Views Percentage - Browser - B2B',\n    SC_MA_PageViewsPercentage_Total: 'Page Views Percentage - Total',\n    SC_MA_PageViewsPercentage_Total_BB: 'Page Views Percentage - Total - B2B',\n    SC_MA_BuyBoxPercentage_25956: 'Buy Box Percentage',\n    SC_MA_BuyBoxPercentage_25956_BB: 'Buy Box Percentage - B2B',\n    SC_MA_UnitsOrdered_40590: 'Units Ordered',\n    SCA_BR_UnitsOrdered_BB: 'Units Ordered - B2B',\n    SC_MA_UnitSessionPercentage_25957: 'Unit Session Percentage',\n    SCA_BR_UnitSessionPercentage_BB_NEW: 'Unit Session Percentage - B2B',\n    SC_MA_OrderedProductSales_40591: 'Ordered Product Sales',\n    SCA_BR_OrderedProductSales_BB: 'Ordered Product Sales - B2B',\n    SC_MA_TotalOrderItems_1: 'Total Order Items',\n    SCA_BR_TotalOrderItems_BB: 'Total Order Items - B2B',\n    'Date Range': 'Date Range'\n  } as const satisfies Record<(typeof this.SALES_AND_TRAFFIC_BY_PRODUCT_BASE_ORDER)[number], string>;\n\n  private static readonly SALES_AND_TRAFFIC_BY_PARENT_ASIN_ORDER = [\n    'SC_MA_ParentASIN_25990',\n    'MYG_Growth_Opportunities',\n    'sc_mat-ss_colDef_title',\n    ...this.SALES_AND_TRAFFIC_BY_PRODUCT_BASE_ORDER\n  ] as const;\n\n  private static readonly SALES_AND_TRAFFIC_BY_PARENT_ASIN_LABELS = {\n    SC_MA_ParentASIN_25990: '(Parent) ASIN',\n    MYG_Growth_Opportunities: 'Growth Opportunities and Total Potential Sales Lift',\n    'sc_mat-ss_colDef_title': 'Title',\n    ...this.SALES_AND_TRAFFIC_BY_PRODUCT_BASE_LABELS\n  } as const satisfies Record<(typeof this.SALES_AND_TRAFFIC_BY_PARENT_ASIN_ORDER)[number], string>;\n\n  private static readonly SALES_AND_TRAFFIC_BY_CHILD_ASIN_ORDER = [\n    'SC_MA_ParentASIN_25990',\n    'SC_MA_ChildASIN_25991',\n    'MYG_Growth_Opportunities',\n    'sc_mat-ss_colDef_title',\n    ...this.SALES_AND_TRAFFIC_BY_PRODUCT_BASE_ORDER\n  ] as const;\n\n  private static readonly SALES_AND_TRAFFIC_BY_CHILD_ASIN_LABELS = {\n    SC_MA_ParentASIN_25990: '(Parent) ASIN',\n    SC_MA_ChildASIN_25991: '(Child) ASIN',\n    MYG_Growth_Opportunities: 'Growth Opportunities and Total Potential Sales Lift',\n    'sc_mat-ss_colDef_title': 'Title',\n    ...this.SALES_AND_TRAFFIC_BY_PRODUCT_BASE_LABELS\n  } as const satisfies Record<(typeof this.SALES_AND_TRAFFIC_BY_CHILD_ASIN_ORDER)[number], string>;\n\n  private static readonly SALES_AND_TRAFFIC_BY_SKU_ORDER = [\n    'SC_MA_ParentASIN_25990',\n    'SC_MA_ChildASIN_25991',\n    'sc_mat-ss_colDef_title',\n    'SC_MA_SKU_25959',\n    ...this.SALES_AND_TRAFFIC_BY_PRODUCT_BASE_ORDER\n  ] as const;\n\n  private static readonly SALES_AND_TRAFFIC_BY_SKU_LABELS = {\n    SC_MA_ParentASIN_25990: '(Parent) ASIN',\n    SC_MA_ChildASIN_25991: '(Child) ASIN',\n    'sc_mat-ss_colDef_title': 'Title',\n    SC_MA_SKU_25959: 'SKU',\n    ...this.SALES_AND_TRAFFIC_BY_PRODUCT_BASE_LABELS\n  } as const satisfies Record<(typeof this.SALES_AND_TRAFFIC_BY_SKU_ORDER)[number], string>;\n}\n\nexport type SalesAndTrafficColumnLabel =\n  | ValueOf<(typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_COLUMN_LABELS']>\n  | ValueOf<(typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_BY_PARENT_ASIN_LABELS']>\n  | ValueOf<(typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_BY_CHILD_ASIN_LABELS']>\n  | ValueOf<(typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_BY_SKU_LABELS']>;\n\nexport type SalesAndTrafficColumnKey =\n  | keyof (typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_COLUMN_LABELS']\n  | keyof (typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_BY_PARENT_ASIN_LABELS']\n  | keyof (typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_BY_CHILD_ASIN_LABELS']\n  | keyof (typeof BusinessRequestUtils)['SALES_AND_TRAFFIC_BY_SKU_LABELS'];\n\nexport type SalesAndTrafficDataRow = Partial<Record<SalesAndTrafficColumnLabel, string>>;\n\nexport type BusinessReportColumnSelections = Partial<Record<SalesAndTrafficColumnKey, number>>;\n\nexport const BusinessReportDateKey: SalesAndTrafficColumnKey = 'SC_MA_Date_25913';\n\nexport const BusinessReportTitleKey: SalesAndTrafficColumnKey = 'sc_mat-ss_colDef_title';\n\nexport const GrowthOpportunitiesRecommendationKey: SalesAndTrafficColumnKey = 'MYG_Growth_Opportunities';\n\ntype ReportColumnIndexMap = Record<BusinessReportsRequestType, Partial<BusinessReportColumnSelections>>;\n\nexport const HiddenReportColumnIndexesForSelection: ReportColumnIndexMap = {\n  Date: {\n    [BusinessReportDateKey]: 0,\n    SC_MA_OrderedProductSales_40591: 1\n  },\n  SKU: {\n    SC_MA_ParentASIN_25990: 0,\n    SC_MA_ChildASIN_25991: 1,\n    SC_MA_SKU_25959: 3\n  },\n  ChildASIN: {\n    SC_MA_ParentASIN_25990: 0,\n    SC_MA_ChildASIN_25991: 1,\n    [GrowthOpportunitiesRecommendationKey]: 2\n  },\n  ParentASIN: {\n    SC_MA_ParentASIN_25990: 0,\n    [GrowthOpportunitiesRecommendationKey]: 1\n  }\n};\n\nexport const HiddenReportColumnIndexesForComparison: ReportColumnIndexMap = {\n  Date: {\n    [BusinessReportDateKey]: 0\n  },\n  SKU: {\n    SC_MA_ParentASIN_25990: 0,\n    SC_MA_ChildASIN_25991: 1,\n    [BusinessReportTitleKey]: 2,\n    SC_MA_SKU_25959: 3\n  },\n  ChildASIN: {\n    SC_MA_ParentASIN_25990: 0,\n    SC_MA_ChildASIN_25991: 1,\n    [GrowthOpportunitiesRecommendationKey]: 2,\n    [BusinessReportTitleKey]: 3\n  },\n  ParentASIN: {\n    SC_MA_ParentASIN_25990: 0,\n    [GrowthOpportunitiesRecommendationKey]: 1,\n    [BusinessReportTitleKey]: 2\n  }\n};\n","import type { SCPDataRow } from '@seller-utilities/types';\n\nimport ReportRequestUtils from '../../../reports/ReportRequestUtils';\nimport type SCPDownloadUtils from '../../../reports/scp/SCPDownloadUtils';\n\nexport type SCPPayloadParameter = Pick<\n  ReturnType<(typeof SCPDownloadUtils)['generateSingleFetchInput']>['payload'],\n  'filterSelections' | 'selectedCountries'\n>;\n\nexport default class SCPRequestUtils {\n  static readonly SCP_DATA_COLUMNS: Record<keyof SCPDataRow, string> = {\n    'asin-title': 'ASIN Title',\n    asin: 'ASIN',\n    category: 'Category',\n    'impressions-count': 'Impressions: Impressions',\n    'impression-price': 'Impressions: Price (Median)',\n    'same-day-shipping-impressions': 'Impressions: Same Day Shipping Speed',\n    'one-day-shipping-impressions': 'Impressions: 1D Shipping Speed',\n    'two-day-shipping-impressions': 'Impressions: 2D Shipping Speed',\n    clicks: 'Clicks: Clicks',\n    'ctr-clicks': 'Clicks: Click Rate (CTR)',\n    'click-price': 'Clicks: Price (Median)',\n    'same-day-shipping-clicks': 'Clicks: Same Day Shipping Speed',\n    'one-day-shipping-clicks': 'Clicks: 1D Shipping Speed',\n    'two-day-shipping-clicks': 'Clicks: 2D Shipping Speed',\n    'cart-adds-count': 'Cart Adds: Cart Adds',\n    'cart-adds-price': 'Cart Adds: Price (Median)',\n    'same-day-shipping-cart-adds': 'Cart Adds: Same Day Shipping Speed',\n    'one-day-shipping-cart-adds': 'Cart Adds: 1D Shipping Speed',\n    'two-day-shipping-cart-adds': 'Cart Adds: 2D Shipping Speed',\n    'purchases-count': 'Purchases: Purchases',\n    'total-sales-purchases': 'Purchases: Search Traffic Sales',\n    'conversion-rate': 'Purchases: Conversion Rate %',\n    'purchase-price': 'Purchases: Price (Median)',\n    'same-day-shipping-purchases': 'Purchases: Same Day Shipping Speed',\n    'one-day-shipping-purchases': 'Purchases: 1D Shipping Speed',\n    'two-day-shipping-purchases': 'Purchases: 2D Shipping Speed',\n    marketplace: 'Marketplace',\n    period: 'Reporting Date'\n  } as const;\n\n  static getSCPFetchAPIDataReferer = (baseUrl: string, payload: SCPPayloadParameter) =>\n    ReportRequestUtils.generateReportRefererUrl(\n      `${baseUrl}/brand-analytics/dashboard/brand-catalog-performance`,\n      payload,\n      'brand-catalog-performance-default-view'\n    );\n}\n","import type { SQPASINDataRow, SQPBrandsDataRow } from '@seller-utilities/types';\n\nimport ReportRequestUtils from '../../../reports/ReportRequestUtils';\nimport type SQPDownloadUtils from '../../../reports/sqp/SQPDownloadUtils';\n\nexport type SQPPayloadParameter = Pick<\n  ReturnType<(typeof SQPDownloadUtils)['generateSingleFetchInput']>['payload'],\n  'filterSelections' | 'selectedCountries'\n>;\n\nexport default class SQPRequestUtils {\n  static readonly SQP_ASIN_DATA_COLUMNS: Record<keyof SQPASINDataRow, string> = {\n    asin: 'ASIN',\n    'qp-asin-query': 'Search Query',\n    'qp-asin-query-rank': 'Search Query Score',\n    'qp-asin-query-volume': 'Search Query Volume',\n    'qp-asin-impressions': 'Impressions: Total Count',\n    'qp-asin-count-impressions': 'Impressions: ASIN Count',\n    'qp-asin-share-impressions': 'Impressions: ASIN Share %',\n    'qp-asin-clicks': 'Clicks: Total Count',\n    'qp-click-rate': 'Clicks: Click Rate %',\n    'qp-asin-count-clicks': 'Clicks: ASIN Count',\n    'qp-asin-share-clicks': 'Clicks: ASIN Share %',\n    'qp-asin-median-query-price-clicks': 'Clicks: Price (Median)',\n    'qp-asin-median-price-clicks': 'Clicks: ASIN Price (Median)',\n    'qp-asin-same-day-shipping-clicks': 'Clicks: Same Day Shipping Speed',\n    'qp-asin-one-day-shipping-clicks': 'Clicks: 1D Shipping Speed',\n    'qp-asin-two-day-shipping-clicks': 'Clicks: 2D Shipping Speed',\n    'qp-asin-cart-adds': 'Cart Adds: Total Count',\n    'qp-asin-cart-add-rate': 'Cart Adds: Cart Add Rate %',\n    'qp-asin-count-cart-adds': 'Cart Adds: ASIN Count',\n    'qp-asin-share-cart-adds': 'Cart Adds: ASIN Share %',\n    'qp-asin-median-query-price-cart-adds': 'Cart Adds: Price (Median)',\n    'qp-asin-median-price-cart-adds': 'Cart Adds: ASIN Price (Median)',\n    'qp-asin-same-day-shipping-cart-adds': 'Cart Adds: Same Day Shipping Speed',\n    'qp-asin-one-day-shipping-cart-adds': 'Cart Adds: 1D Shipping Speed',\n    'qp-asin-two-day-shipping-cart-adds': 'Cart Adds: 2D Shipping Speed',\n    'qp-asin-purchases': 'Purchases: Total Count',\n    'qp-asin-purchase-rate': 'Purchases: Purchase Rate %',\n    'qp-asin-count-purchases': 'Purchases: ASIN Count',\n    'qp-asin-share-purchases': 'Purchases: ASIN Share %',\n    'qp-asin-median-query-price-purchases': 'Purchases: Price (Median)',\n    'qp-asin-median-price-purchases': 'Purchases: ASIN Price (Median)',\n    'qp-asin-same-day-shipping-purchases': 'Purchases: Same Day Shipping Speed',\n    'qp-asin-one-day-shipping-purchases': 'Purchases: 1D Shipping Speed',\n    'qp-asin-two-day-shipping-purchases': 'Purchases: 2D Shipping Speed',\n    marketplace: 'Marketplace',\n    period: 'Reporting Date'\n  } as const;\n\n  static readonly SQP_BRAND_DATA_COLUMNS: Record<keyof SQPBrandsDataRow, string> = {\n    brand: 'Brand',\n    'qp-brand-query': 'Search Query',\n    'qp-query-rank': 'Search Query Score',\n    'qp-query-volume': 'Search Query Volume',\n    'qp-impressions': 'Impressions: Total Count',\n    'qp-brand-count-impressions': 'Impressions: Brand Count',\n    'qp-brand-share-impressions': 'Impressions: Brand Share %',\n    'qp-clicks': 'Clicks: Total Count',\n    'qp-click-rate': 'Clicks: Click Rate %',\n    'qp-brand-count-clicks': 'Clicks: Brand Count',\n    'qp-brand-share-clicks': 'Clicks: Brand Share %',\n    'qp-clicks-price': 'Clicks: Price (Median)',\n    'qp-clicks-brand-price': 'Clicks: Brand Price (Median)',\n    'qp-same-day-shipping-clicks': 'Clicks: Same Day Shipping Speed',\n    'qp-one-day-shipping-clicks': 'Clicks: 1D Shipping Speed',\n    'qp-two-day-shipping-clicks': 'Clicks: 2D Shipping Speed',\n    'qp-cart-adds': 'Cart Adds: Total Count',\n    'qp-cart-add-rate': 'Cart Adds: Cart Add Rate %',\n    'qp-cart-adds-brand-count': 'Cart Adds: Brand Count',\n    'qp-cart-adds-brand-share': 'Cart Adds: Brand Share %',\n    'qp-cart-adds-price': 'Cart Adds: Price (Median)',\n    'qp-same-day-shipping-cart-adds': 'Cart Adds: Same Day Shipping Speed',\n    'qp-one-day-shipping-cart-adds': 'Cart Adds: 1D Shipping Speed',\n    'qp-two-day-shipping-cart-adds': 'Cart Adds: 2D Shipping Speed',\n    'qp-purchases': 'Purchases: Total Count',\n    'qp-purchase-rate': 'Purchases: Purchase Rate %',\n    'qp-purchases-brand-count': 'Purchases: Brand Count',\n    'qp-purchases-brand-share': 'Purchases: Brand Share %',\n    'qp-purchase-price': 'Purchases: Price (Median)',\n    'qp-purchases-brand-price': 'Purchases: Brand Price (Median)',\n    'qp-same-day-shipping-purchases': 'Purchases: Same Day Shipping Speed',\n    'qp-one-day-shipping-purchases': 'Purchases: 1D Shipping Speed',\n    'qp-two-day-shipping-purchases': 'Purchases: 2D Shipping Speed',\n    marketplace: 'Marketplace',\n    period: 'Reporting Date'\n  } as const;\n\n  static getSQPFetchAPIDataReferer = (baseUrl: string, payload: SQPPayloadParameter, isBrands: boolean) =>\n    ReportRequestUtils.generateReportRefererUrl(\n      `${baseUrl}/brand-analytics/dashboard/query-performance`,\n      payload,\n      isBrands ? 'query-performance-brands-view' : 'query-performance-asin-view'\n    );\n}\n","import type { TSTDataRow } from '@seller-utilities/types';\n\nimport ReportRequestUtils from '../../../reports/ReportRequestUtils';\nimport type TSTDownloadUtils from '../../../reports/tst/TSTDownloadUtils';\n\nexport type TSTPayloadParameter = Pick<\n  ReturnType<(typeof TSTDownloadUtils)['generateSingleFetchInput']>['payload'],\n  'filterSelections' | 'selectedCountries'\n>;\n\nexport default class TSTRequestUtils {\n  static readonly TST_DATA_COLUMNS: Record<keyof TSTDataRow, string> = {\n    'st-search-frequency': 'Search Frequency Rank',\n    'st-search-term': 'Search Term',\n    'st-top-brand-1': 'Top Clicked Brand #1',\n    'st-top-brand-2': 'Top Clicked Brands #2',\n    'st-top-brand-3': 'Top Clicked Brands #3',\n    'st-top-category-1': 'Top Clicked Category #1',\n    'st-top-category-2': 'Top Clicked Category #2',\n    'st-top-category-3': 'Top Clicked Category #3',\n    'st-top-asin-1': 'Top Clicked Product #1: ASIN',\n    'st-top-asin-title-1': 'Top Clicked Product #1: Product Title',\n    'st-top-asin-click-share-1': 'Top Clicked Product #1: Click Share',\n    'st-top-asin-conversion-share-1': 'Top Clicked Product #1: Conversion Share',\n    'st-top-asin-2': 'Top Clicked Product #2: ASIN',\n    'st-top-asin-title-2': 'Top Clicked Product #2: Product Title',\n    'st-top-asin-click-share-2': 'Top Clicked Product #2: Product Title',\n    'st-top-asin-conversion-share-2': 'Top Clicked Product #2: Conversion Share',\n    'st-top-asin-3': 'Top Clicked Product #3: ASIN',\n    'st-top-asin-title-3': 'Top Clicked Product #3: Product Title',\n    'st-top-asin-click-share-3': 'Top Clicked Product #3: Click Share',\n    'st-top-asin-conversion-share-3': 'Top Clicked Product #3: Click Share',\n    period: 'Reporting Date',\n    brands: 'Brands',\n    keywords: 'Keywords'\n  } as const;\n\n  static getTSTFetchAPIDataReferer = (baseUrl: string, payload: TSTPayloadParameter) =>\n    ReportRequestUtils.generateReportRefererUrl(\n      `${baseUrl}/brand-analytics/dashboard/top-search-terms`,\n      payload,\n      'top-search-terms-default-view'\n    );\n}\n","import type { DownloadDestinationType } from '@seller-utilities/types';\n\nexport default class DataDestinationUtils {\n  static isUrl = (text: string) => /^(http|https):\\/\\//.test(text);\n\n  static isGoogleDriveItemUrl = (url: string) =>\n    DataDestinationUtils.isGoogleDriveFolderUrl(url) || DataDestinationUtils.isGoogleSheetUrl(url);\n\n  static isGoogleDriveFolderUrl = (url: string) =>\n    /^(https:\\/\\/)?drive.google.com\\/drive\\/(u\\/\\d+\\/)?folders\\/[^?\\n\\r\\t]*/i.test(url);\n\n  static isGoogleSheetUrl = (url: string) => /^(https:\\/\\/)?docs.google.com\\/spreadsheets\\/d\\/[^?\\n\\r\\t]*/i.test(url);\n\n  static getGoogleDriveFolderUrl = (folderId: string) => `https://drive.google.com/drive/u/0/folders/${folderId}`;\n\n  static getGoogleSheetUrl = (spreadsheetId: string, sheetId: string | null) =>\n    `https://docs.google.com/spreadsheets/d/${spreadsheetId}/edit${sheetId ? `?gid=${sheetId}#gid=${sheetId}` : ''}`;\n\n  static getGoogleDriveItemLink = (\n    fileId: string,\n    downloadDestinationType: DownloadDestinationType,\n    sheetId?: string | null\n  ): string => {\n    switch (downloadDestinationType) {\n      case 'Google Drive':\n        return DataDestinationUtils.getGoogleDriveFolderUrl(fileId);\n      case 'Google Sheet':\n        return DataDestinationUtils.getGoogleSheetUrl(fileId, sheetId ?? null);\n      default:\n        throw new Error(`File is not a Google Drive item`);\n    }\n  };\n}\n","import type { MenuItemProps } from '@mui/material';\nimport { MenuItem, Tooltip } from '@mui/material';\nimport type { FC, ReactNode } from 'react';\nimport React from 'react';\ninterface TooltipMenuItemProps extends MenuItemProps {\n  readonly disabled: boolean;\n  readonly tooltipText: ReactNode;\n}\nconst TooltipMenuItem: FC<TooltipMenuItemProps> = ({\n  disabled,\n  tooltipText,\n  children,\n  ...props\n}) => <Tooltip disableHoverListener={!disabled} placement=\"top\" title={tooltipText} data-sentry-element=\"Tooltip\" data-sentry-component=\"TooltipMenuItem\" data-sentry-source-file=\"TooltipMenuItem.tsx\">\n    <div>\n      <MenuItem {...props} disabled={disabled} data-sentry-element=\"MenuItem\" data-sentry-source-file=\"TooltipMenuItem.tsx\">\n        {children}\n      </MenuItem>\n    </div>\n  </Tooltip>;\nexport default TooltipMenuItem;","import type { SxProps } from '@mui/material';\nconst autocompleteStyles: SxProps = {\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 1,\n  height: 128,\n  justifyContent: 'center',\n  width: '100%'\n} as const;\nexport default autocompleteStyles;","import { Box, Typography } from '@mui/material';\nimport type { Url } from 'next/dist/shared/lib/router/router';\nimport type { FC } from 'react';\nimport Link from '../Link';\nimport autocompleteStyles from './styles';\ninterface AutocompleteNoOptionsProps {\n  readonly link?: {\n    location: Url;\n    text: string;\n  };\n  readonly message: string;\n}\nconst AutocompleteNoOptions: FC<AutocompleteNoOptionsProps> = ({\n  link,\n  message\n}) => <Box sx={autocompleteStyles} data-sentry-element=\"Box\" data-sentry-component=\"AutocompleteNoOptions\" data-sentry-source-file=\"AutocompleteNoOptions.tsx\">\n    <Typography fontWeight=\"medium\" data-sentry-element=\"Typography\" data-sentry-source-file=\"AutocompleteNoOptions.tsx\">{message}</Typography>\n    {link ? <Link color=\"primary.main\" href={link.location} sx={{\n    textDecoration: 'underline'\n  }}>\n        {link.text}\n      </Link> : null}\n  </Box>;\nexport default AutocompleteNoOptions;","import { Autocomplete, Box, CircularProgress, FormControl, FormControlLabel, IconButton, Radio, RadioGroup, Stack, TextField, Tooltip, Typography } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { enqueueSnackbar } from '@riptech/minimal-ui/src/components/snackbar';\nimport type { ModalAction } from '@riptech/shared-ui';\nimport { BackdropLoader, Modal, useConfirmationDialog } from '@riptech/shared-ui';\nimport AutocompleteNoOptions from '@riptech/shared-ui/src/components/Autocomplete/AutocompleteNoOptions';\nimport type { GoogleDriveDataConfigurationDestinationType, GoogleSheetColumnMappings, ReportDataType } from '@seller-utilities/database';\nimport type { BaseReportForm, GoogleSheetDataWritingActionType } from '@seller-utilities/types';\nimport { useMutation } from '@tanstack/react-query';\nimport type { FormikProps } from 'formik';\nimport { useFormik } from 'formik';\nimport Link from 'next/link';\nimport { useCallback, useMemo } from 'react';\nimport * as Yup from 'yup';\nimport type { DeleteGoogleDriveDataConfigurationRequest } from '../../pages/api/integrations/google-drive/data-configuration/delete';\nimport type { SaveDataconfigurationRequest, SaveDataconfigurationResponse } from '../../pages/api/integrations/google-drive/data-configuration/save';\nimport type { UpdateDataconfigurationRequest } from '../../pages/api/integrations/google-drive/data-configuration/update';\nimport ServerlessAPI from '../../utils/api/serverless/ServerlessAPI';\nimport DataDestinationUtils from '../../utils/DataDestinationUtils';\nimport BusinessRequestUtils from '../../utils/request/SellerCentralRequest/utils/BusinessReportRequestUtils';\nimport SCPRequestUtils from '../../utils/request/SellerCentralRequest/utils/SCPRequestUtils';\nimport SQPRequestUtils from '../../utils/request/SellerCentralRequest/utils/SQPRequestUtils';\nimport TSTRequestUtils from '../../utils/request/SellerCentralRequest/utils/TSTRequestUtils';\nimport type useGoogleSheetColumnHeaders from './hooks/useGoogleSheetColumnHeaders';\ninterface DataConfigurationModalProps<T> {\n  readonly onClose: () => void;\n  readonly onUpdate?: () => void;\n  readonly open: boolean;\n  readonly reportType: ReportDataType;\n  readonly reportFormik: FormikProps<T>;\n  readonly getSheetColumnHeadersMutation: ReturnType<typeof useGoogleSheetColumnHeaders>;\n  readonly editConfigurationDetails?: SaveDataconfigurationResponse | null;\n  readonly selectedColumns?: Record<string, string>;\n}\ninterface DataConfigurationFormValues {\n  configName: string;\n  columnMappings: GoogleSheetColumnMappings;\n  destinationType: GoogleDriveDataConfigurationDestinationType;\n  googleDriveItemId: string;\n  headerRowsToSkip: number;\n  action: GoogleSheetDataWritingActionType;\n  reportType: ReportDataType;\n}\nconst REPORT_COLUMNS = {\n  SQPASINs: SQPRequestUtils.SQP_ASIN_DATA_COLUMNS,\n  SQPBrands: SQPRequestUtils.SQP_BRAND_DATA_COLUMNS,\n  SCP: SCPRequestUtils.SCP_DATA_COLUMNS,\n  TST: TSTRequestUtils.TST_DATA_COLUMNS,\n  BusinessByDate: BusinessRequestUtils.getColumns('Date').labels,\n  BusinessByASINChild: BusinessRequestUtils.getColumns('ChildASIN').labels,\n  BusinessByASINSKU: BusinessRequestUtils.getColumns('SKU').labels,\n  BusinessByASINParent: BusinessRequestUtils.getColumns('ParentASIN').labels\n} as const satisfies Record<ReportDataType, Record<string, string>>;\nconst DataConfigurationModal = <T extends BaseReportForm,>({\n  onClose,\n  onUpdate,\n  reportType,\n  open,\n  reportFormik,\n  editConfigurationDetails,\n  getSheetColumnHeadersMutation,\n  selectedColumns\n}: DataConfigurationModalProps<T>) => {\n  const {\n    openDialog\n  } = useConfirmationDialog();\n  const options = useMemo(() => Object.entries<string>(selectedColumns ?? REPORT_COLUMNS[reportType]).map(([key, value]) => ({\n    key,\n    value\n  })), [reportType, selectedColumns]);\n  const sheetId = reportFormik.values.googleSheetSheet?.id ?? editConfigurationDetails?.sheet?.id ?? null;\n  const {\n    googleDriveItem\n  } = reportFormik.values;\n  const driveItemId = googleDriveItem?.id ?? editConfigurationDetails?.googleDriveItemId ?? '';\n  const spreadsheetLink = DataDestinationUtils.getGoogleSheetUrl(driveItemId, sheetId ? `${sheetId}` : null);\n  const saveDataConfigurationMutation = useMutation({\n    meta: {\n      errorMessage: `An error occurred while saving data configuration`\n    },\n    mutationFn: (values: SaveDataconfigurationRequest['body']) => ServerlessAPI.saveDataConfiguration(values)\n  });\n  const deleteDataConfigurationMutation = useMutation({\n    meta: {\n      errorMessage: `An error occurred while deleting data configuration`\n    },\n    mutationFn: (values: DeleteGoogleDriveDataConfigurationRequest['query']) => ServerlessAPI.deleteDataConfiguration(values)\n  });\n  const upateDataConfigurationMutation = useMutation({\n    meta: {\n      errorMessage: `An error occurred while updating data configuration`\n    },\n    mutationFn: (values: UpdateDataconfigurationRequest['body']) => ServerlessAPI.updateDataConfiguration(values)\n  });\n  const MIN_HEADER_ROWS_TO_SKIP = 1;\n  const MAX_HEADER_ROWS_TO_SKIP = 10;\n  const formik = useFormik<DataConfigurationFormValues>({\n    enableReinitialize: true,\n    initialValues: {\n      configName: editConfigurationDetails?.name ?? '',\n      action: editConfigurationDetails?.overwriteRows ? 'overwrite' : 'append',\n      columnMappings: editConfigurationDetails?.columnMappings ?? {},\n      headerRowsToSkip: editConfigurationDetails?.headerRowsToSkip ?? MIN_HEADER_ROWS_TO_SKIP,\n      destinationType: editConfigurationDetails?.destinationType ?? 'Folder',\n      googleDriveItemId: editConfigurationDetails?.googleDriveItemId ?? '',\n      reportType: editConfigurationDetails?.reportType ?? reportType\n    },\n    onSubmit: (values, formikHelpers) => {\n      const {\n        columnMappings,\n        configName,\n        headerRowsToSkip,\n        action,\n        destinationType,\n        googleDriveItemId\n      } = values;\n      if (editConfigurationDetails) {\n        upateDataConfigurationMutation.mutate({\n          configId: editConfigurationDetails.id,\n          name: configName,\n          columnMappings,\n          destinationType,\n          googleDriveItemId,\n          headerRowsToSkip,\n          reportType,\n          overwriteRows: action === 'overwrite'\n        }, {\n          onSuccess: result => {\n            onUpdate?.();\n            onClose();\n            formikHelpers.setSubmitting(false);\n            if (result.destinationType === 'Sheet') {\n              reportFormik.setValues(prev => ({\n                ...prev,\n                columnMappings: result.columnMappings!,\n                headerRowsToSkip: result.headerRowsToSkip ?? 1,\n                dataConfigurationId: result.id,\n                menuItemDestination: result.name\n              }));\n              getSheetColumnHeadersMutation.mutate();\n            } else {\n              reportFormik.setFieldValue('menuItemDestination', result.name);\n            }\n            enqueueSnackbar('Data configuration updated successfully', {\n              variant: 'success'\n            });\n            formik.resetForm();\n          }\n        });\n      } else {\n        if (!googleDriveItem) {\n          throw new Error('Google Drive item is not selected');\n        }\n        saveDataConfigurationMutation.mutate({\n          columnMappings,\n          destinationType: 'Sheet',\n          name: configName,\n          headerRowsToSkip,\n          sheet: reportFormik.values.googleSheetSheet,\n          overwriteRows: action === 'overwrite',\n          googleDriveItemId: googleDriveItem.id,\n          reportType\n        }, {\n          onSuccess: result => {\n            onClose();\n            formikHelpers.setSubmitting(false);\n            reportFormik.setValues(prev => ({\n              ...prev,\n              columnMappings: result.columnMappings ?? undefined,\n              headerRowsToSkip: result.headerRowsToSkip ?? undefined,\n              dataConfigurationId: result.id\n            }));\n            enqueueSnackbar('Data configuration saved successfully', {\n              variant: 'success'\n            });\n            formik.resetForm();\n          }\n        });\n      }\n    },\n    validateOnMount: true,\n    validationSchema: Yup.object().shape({\n      configName: Yup.string().min(3, 'Configuration name must be at least 3 characters').required('Configuration name is required'),\n      ...(editConfigurationDetails?.destinationType === 'Sheet' || !editConfigurationDetails ? {\n        action: Yup.string().oneOf(['overwrite', 'append']).required('Action is required'),\n        columnMappings: Yup.object().test('notEmpty', 'At least one mapping must be selected', value => value && Object.keys(value).length > 0).required('Mappings are required'),\n        headerRowsToSkip: Yup.number().min(MIN_HEADER_ROWS_TO_SKIP, 'Number of rows to skip must be at least 1').max(MAX_HEADER_ROWS_TO_SKIP, 'Number of rows to skip must be at most 10').required('Number of header rows to skip is required')\n      } : {})\n    })\n  });\n  const closeModal = useCallback(() => {\n    if (!editConfigurationDetails) {\n      reportFormik.setFieldValue('googleSheetSheet', null);\n    }\n    formik.resetForm();\n    onClose();\n  }, [editConfigurationDetails, formik, onClose, reportFormik]);\n  const actions: Array<ModalAction> = [{\n    disabled: saveDataConfigurationMutation.isPending,\n    onClick: closeModal,\n    text: 'Cancel',\n    variant: 'outlined'\n  }];\n  if (editConfigurationDetails) {\n    actions.push({\n      loading: deleteDataConfigurationMutation.isPending,\n      onClick: () => {\n        openDialog({\n          onApprove: () => deleteDataConfigurationMutation.mutate({\n            dataConfigurationId: editConfigurationDetails.id\n          }, {\n            onSuccess: () => {\n              reportFormik.setValues(prev => ({\n                ...prev,\n                dataConfigurationId: '',\n                menuItemDestination: 'Local',\n                downloadDestinationType: 'Local',\n                googleSheetSheet: undefined\n              }));\n              enqueueSnackbar('Data configuration deleted successfully', {\n                variant: 'success'\n              });\n              closeModal();\n            }\n          }),\n          text: 'Are you sure you want to delete this data configuration?'\n        });\n      },\n      text: 'Delete',\n      variant: 'contained',\n      color: 'error'\n    });\n  }\n  actions.push({\n    disabled: !formik.isValid || !formik.dirty,\n    isEnterAction: true,\n    loading: saveDataConfigurationMutation.isPending || upateDataConfigurationMutation.isPending,\n    onClick: formik.handleSubmit,\n    text: editConfigurationDetails ? 'Update' : 'Save',\n    variant: 'contained'\n  });\n  const selectedValues = useMemo(() => new Set(Object.values(formik.values.columnMappings)), [formik.values.columnMappings]);\n  return <>\n      <BackdropLoader open={getSheetColumnHeadersMutation.isPending} data-sentry-element=\"BackdropLoader\" data-sentry-source-file=\"DataConfigurationModal.tsx\" />\n      <Modal actions={actions} maxWidth=\"lg\" onClose={() => {\n      onClose();\n      formik.resetForm();\n    }} open={open} title=\"Data Destination Settings\" data-sentry-element=\"Modal\" data-sentry-source-file=\"DataConfigurationModal.tsx\">\n        <Stack spacing={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"DataConfigurationModal.tsx\">\n          <Stack data-sentry-element=\"Stack\" data-sentry-source-file=\"DataConfigurationModal.tsx\">\n            <TextField autoFocus error={!!(formik.errors.configName && formik.touched.configName)} fullWidth helperText={formik.touched.configName ? formik.errors.configName : null} id=\"configName\" label=\"Configuration Name\" name=\"configName\" onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.configName} data-sentry-element=\"TextField\" data-sentry-source-file=\"DataConfigurationModal.tsx\" />\n          </Stack>\n          {editConfigurationDetails?.destinationType === 'Folder' ? null : <>\n              <Stack>\n                <FormControl>\n                  <RadioGroup defaultValue={editConfigurationDetails?.overwriteRows ? 'overwrite' : 'append'} name=\"radio-buttons-group\" onChange={e => formik.setFieldValue('action', e.target.value)}>\n                    <FormControlLabel key=\"overwrite\" control={<Radio />} label=\"Clear data before writing (retains column headers)\" value=\"overwrite\" />\n                    <FormControlLabel key=\"append\" control={<Radio />} label=\"Add to existing data on first available empty row\" value=\"append\" />\n                  </RadioGroup>\n                </FormControl>\n              </Stack>\n\n              <Stack>\n                <TextField error={!!(formik.errors.headerRowsToSkip && formik.touched.headerRowsToSkip)} fullWidth helperText={formik.touched.headerRowsToSkip ? formik.errors.headerRowsToSkip : null} id=\"headerRowsToSkip\" label=\"Header rows to skip (between 1 and 10)\" name=\"headerRowsToSkip\" onBlur={formik.handleBlur} onChange={e => {\n              const value = parseInt(e.target.value, 10) ?? MIN_HEADER_ROWS_TO_SKIP;\n              if (value >= MIN_HEADER_ROWS_TO_SKIP && value <= MAX_HEADER_ROWS_TO_SKIP) {\n                reportFormik.setFieldValue('headerRowsToSkip', value);\n                getSheetColumnHeadersMutation.mutate();\n              }\n              formik.handleChange(e);\n            }} type=\"number\" value={formik.values.headerRowsToSkip} />\n                <Typography color=\"text.secondary\" variant=\"caption\">\n                  Enter the number of rows of column headers in your sheet\n                </Typography>\n              </Stack>\n\n              <Stack alignItems=\"center\" direction=\"row\" justifyContent=\"space-between\">\n                <Typography variant=\"h6\">Destination Column Mapping</Typography>\n                <Stack direction=\"row\">\n                  <Tooltip title=\"Go to Sheet\">\n                    <IconButton component={Link} href={spreadsheetLink} rel=\"noreferrer\" target=\"_blank\">\n                      <Iconify icon=\"eva:external-link-fill\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title=\"Refetch column headers\">\n                    <IconButton disabled={getSheetColumnHeadersMutation.isPending} onClick={() => {\n                  formik.setFieldValue('columnMappings', {});\n                  getSheetColumnHeadersMutation.mutate();\n                }}>\n                      <Iconify icon=\"eva:refresh-fill\" />\n                    </IconButton>\n                  </Tooltip>\n                </Stack>\n              </Stack>\n              {getSheetColumnHeadersMutation.isPending ? <Box margin=\"auto\">\n                  <CircularProgress />\n                </Box> : <>\n                  <Stack alignItems=\"center\" direction=\"row\" justifyContent=\"space-between\">\n                    <Typography variant=\"subtitle2\">Column Headers</Typography>\n                    <Typography variant=\"subtitle2\">Data fields</Typography>\n                  </Stack>\n\n                  {!getSheetColumnHeadersMutation?.data?.columnHeaders?.length ? <Typography align=\"center\" variant=\"body2\">\n                      No column headers found\n                    </Typography> : getSheetColumnHeadersMutation?.data?.columnHeaders?.map(header => <Stack key={header.column} alignItems=\"center\" direction=\"row\" justifyContent=\"space-between\">\n                        <Stack flex=\"2\">\n                          <Typography borderRadius={1} color=\"inherit\" variant=\"body2\" width=\"fit-content\">\n                            {header.name}\n                          </Typography>\n                          <Typography color=\"text.secondary\" variant=\"caption\">\n                            Column {header.column}\n                          </Typography>\n                        </Stack>\n                        <Stack alignItems=\"center\" direction=\"row\" flex=\"1\">\n                          <Iconify icon=\"eva:arrow-forward-fill\" />\n                        </Stack>\n                        <Stack flex=\"3\">\n                          <Autocomplete autoComplete filterSelectedOptions fullWidth getOptionLabel={x => x.value} isOptionEqualToValue={(option, value) => option.value === value.value} noOptionsText={<AutocompleteNoOptions message=\"No data fields found\" />} onChange={(e, reportColumn) => {\n                  if (reportColumn) {\n                    formik.setFieldValue('columnMappings', {\n                      ...formik.values.columnMappings,\n                      [header.column]: reportColumn.key\n                    });\n                  } else {\n                    const newMappings = {\n                      ...formik.values.columnMappings\n                    };\n                    delete newMappings[header.column];\n                    formik.setFieldValue('columnMappings', newMappings);\n                  }\n                }} options={options} renderInput={params => <TextField error={!!(formik.errors.columnMappings && formik.touched.columnMappings)} onBlur={formik.handleBlur} {...params} fullWidth label=\"Choose a field\" sx={{\n                  minWidth: 300\n                }} />} renderOption={(props, option) => <li {...props} key={option.key} style={{\n                  width: '100%'\n                }}>\n                                <Typography color={selectedValues.has(option.key) ? 'text.secondary' : undefined} variant=\"body2\">\n                                  {option.value}\n                                </Typography>\n                              </li>} value={options.find(x => x.key === formik.values.columnMappings[header.column]) ?? null} />\n                        </Stack>\n                      </Stack>)}\n                </>}\n            </>}\n        </Stack>\n      </Modal>\n    </>;\n};\nexport default DataConfigurationModal;","import { Box, CircularProgress } from '@mui/material';\nimport type { FC } from 'react';\nimport autocompleteStyles from './styles';\nconst AutocompleteLoader: FC = () => <Box sx={autocompleteStyles} data-sentry-element=\"Box\" data-sentry-component=\"AutocompleteLoader\" data-sentry-source-file=\"AutocompleteLoader.tsx\">\n    <CircularProgress data-sentry-element=\"CircularProgress\" data-sentry-source-file=\"AutocompleteLoader.tsx\" />\n  </Box>;\nexport default AutocompleteLoader;","import { Autocomplete, Box, CircularProgress, IconButton, TextField } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { enqueueSnackbar } from '@riptech/minimal-ui/src/components/snackbar';\nimport AutocompleteLoader from '@riptech/shared-ui/src/components/Autocomplete/AutocompleteLoader';\nimport AutocompleteNoOptions from '@riptech/shared-ui/src/components/Autocomplete/AutocompleteNoOptions';\nimport type { ReportDataType } from '@seller-utilities/database';\nimport type { BaseReportForm, GoogleDriveItem } from '@seller-utilities/types';\nimport type { FormikProps } from 'formik';\nimport { debounce } from 'lodash';\nimport Link from 'next/link';\nimport DataDestinationUtils from '../../utils/DataDestinationUtils';\ninterface GoogleDriveItemSelectorProps<T> {\n  readonly inViewRef: React.Ref<HTMLLIElement>;\n  readonly disabled: boolean;\n  readonly loading: boolean;\n  readonly formik: FormikProps<T>;\n  readonly setSearchTerm: (searchTerm: string) => void;\n  readonly options: Array<GoogleDriveItem>;\n  readonly reportType: ReportDataType;\n  readonly isLoadingNextPage: boolean;\n}\nconst GoogleDriveItemSelector = <T extends BaseReportForm,>({\n  inViewRef,\n  disabled,\n  loading,\n  formik,\n  setSearchTerm,\n  options,\n  reportType,\n  isLoadingNextPage\n}: GoogleDriveItemSelectorProps<T>) => {\n  const getSelectorLabel = (): string => {\n    if (formik.values.downloadDestinationType === 'Google Sheet') {\n      return 'Choose a Google Sheet to write to';\n    }\n    return 'Select a destination folder to upload data';\n  };\n  return <Autocomplete<GoogleDriveItem> autoComplete autoHighlight clearOnEscape disabled={disabled} filterOptions={x => x} fullWidth getOptionLabel={option => option.name} isOptionEqualToValue={(option, value) => option.id === value.id} loading={loading} loadingText={<AutocompleteLoader />} noOptionsText={<AutocompleteNoOptions message=\"No items found\" />} onChange={(e, newFile) => {\n    formik.setValues(prev => ({\n      ...prev,\n      googleDriveItem: newFile ?? undefined,\n      reportType,\n      googleSheetSheet: formik.values.downloadDestinationType === 'Google Sheet' ? undefined : prev.googleSheetSheet\n    }));\n  }} onInputChange={debounce((event, newInputValue) => {\n    // if event is a clicking on an item to select, do not search\n    if (newInputValue && event?.type === 'click') {\n      return;\n    }\n    if (DataDestinationUtils.isUrl(newInputValue)) {\n      const isGoogleDriveFolderUrl = DataDestinationUtils.isGoogleDriveFolderUrl(newInputValue);\n      const isGoogleSheetUrl = DataDestinationUtils.isGoogleSheetUrl(newInputValue);\n      const isGoogleDriveType = formik.values.downloadDestinationType === 'Google Drive';\n      const isGoogleSheetType = formik.values.downloadDestinationType === 'Google Sheet';\n      if (isGoogleDriveType && !isGoogleDriveFolderUrl) {\n        enqueueSnackbar('Please enter a valid Google Drive folder URL', {\n          variant: 'error'\n        });\n        setSearchTerm('');\n      } else if (isGoogleSheetType && !isGoogleSheetUrl) {\n        enqueueSnackbar('Please enter a valid Google Sheet URL', {\n          variant: 'error'\n        });\n        setSearchTerm('');\n      } else {\n        setSearchTerm(newInputValue);\n      }\n    } else {\n      setSearchTerm(newInputValue);\n    }\n  }, 300)} openOnFocus options={options} renderInput={params => <TextField {...params} fullWidth InputProps={{\n    ...params.InputProps,\n    endAdornment: <>\n                {isLoadingNextPage ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </>\n  }} label={getSelectorLabel()} />} renderOption={(props, option, {\n    index\n  }) => {\n    // Check if this option is the last three in the array\n    const isThreeOptionsLeft = index === options.length - 3;\n    return <li {...props} key={option.id} ref={isThreeOptionsLeft ? inViewRef : null} // Apply inViewRef only if we are at the last three options\n    style={{\n      width: '100%'\n    }}>\n            <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" sx={{\n        pr: 2,\n        width: '100%'\n      }}>\n              <Box alignItems=\"center\" display=\"flex\" gap={1}>\n                <Iconify icon={formik.values.downloadDestinationType === 'Google Drive' ? 'eva:folder-fill' : 'eva:file-text-outline'} width={20} />\n                {option.name}\n              </Box>\n              <IconButton component={Link} href={DataDestinationUtils.getGoogleDriveItemLink(option.id, formik.values.downloadDestinationType)} rel=\"noreferrer\" target=\"_blank\">\n                <Iconify icon=\"eva:external-link-fill\" sx={{\n            color: 'text.secondary'\n          }} />\n              </IconButton>\n            </Box>\n          </li>;\n  }} data-sentry-element=\"Autocomplete\" data-sentry-component=\"GoogleDriveItemSelector\" data-sentry-source-file=\"GoogleDriveItemSelector.tsx\" />;\n};\nexport default GoogleDriveItemSelector;","import { useMutation } from '@tanstack/react-query';\n\nimport ServerlessAPI from '../../../utils/api/serverless/ServerlessAPI';\n\ninterface GoogleSheetColumnHeadersHooksType {\n  googleDriveItemId: string | undefined;\n  googleSheetSheetTitle: string | undefined;\n  headerRowsToSkip: number;\n  dataConfigurationId?: string;\n}\n// we are using a mutation here because we want to control when we fetch the sheet column headers data,\n// drive folders and Google Sheets are both drive items and we don't want sheet data to be refeched\n// when changes are made to a data configuration that represents a folder item\n// this is the case when we use useQuery as the query key would change when the data configuration changes for folders too\nexport default function useGoogleSheetColumnHeaders(params: GoogleSheetColumnHeadersHooksType) {\n  const { googleDriveItemId, googleSheetSheetTitle, headerRowsToSkip, dataConfigurationId } = params;\n  const getSheetColumnHeadersMutation = useMutation({\n    meta: {\n      errorMessage: 'Failed to get Google Sheet column headers'\n    },\n    mutationFn: () =>\n      ServerlessAPI.getSheetColumnHeaders({\n        spreadsheetId: googleDriveItemId!,\n        sheetTitle: googleSheetSheetTitle!,\n        dataConfigurationId,\n        headerRowsToSkip\n      })\n  });\n\n  return getSheetColumnHeadersMutation;\n}\n","import { Autocomplete, Box, CircularProgress, TextField } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { useBoolean } from '@riptech/minimal-ui/src/hooks/use-boolean';\nimport AutocompleteLoader from '@riptech/shared-ui/src/components/Autocomplete/AutocompleteLoader';\nimport AutocompleteNoOptions from '@riptech/shared-ui/src/components/Autocomplete/AutocompleteNoOptions';\nimport type { GoogleSheet, ReportDataType } from '@seller-utilities/database';\nimport type { BaseReportForm } from '@seller-utilities/types';\nimport type { FormikProps } from 'formik';\nimport React from 'react';\nimport DataConfigurationModal from './DataConfigurationModal';\nimport useGoogleSheetColumnHeaders from './hooks/useGoogleSheetColumnHeaders';\ninterface GoogleSheetSelectorProps<T> {\n  readonly disabled: boolean;\n  readonly loading: boolean;\n  readonly formik: FormikProps<T>;\n  readonly options: Array<GoogleSheet>;\n  readonly reportType: ReportDataType;\n  readonly isLoadingNextPage: boolean;\n  readonly selectedColumns?: Record<string, string>;\n}\nconst GoogleSheetSelector = <T extends BaseReportForm,>({\n  disabled,\n  loading,\n  isLoadingNextPage,\n  formik,\n  options,\n  reportType,\n  selectedColumns\n}: GoogleSheetSelectorProps<T>) => {\n  const dataConfigurationModalOpen = useBoolean();\n  const getSheetColumnHeadersMutation = useGoogleSheetColumnHeaders({\n    googleDriveItemId: formik.values.googleDriveItem?.id,\n    googleSheetSheetTitle: formik.values.googleSheetSheet?.title,\n    dataConfigurationId: formik.values.dataConfigurationId,\n    headerRowsToSkip: formik.values.headerRowsToSkip ?? 1\n  });\n  return <>\n      <DataConfigurationModal getSheetColumnHeadersMutation={getSheetColumnHeadersMutation} onClose={dataConfigurationModalOpen.onFalse} open={dataConfigurationModalOpen.value} reportFormik={formik} reportType={reportType} selectedColumns={selectedColumns} data-sentry-element=\"DataConfigurationModal\" data-sentry-source-file=\"GoogleSheetSelector.tsx\" />\n      <Autocomplete<GoogleSheet> autoComplete autoHighlight disabled={disabled} fullWidth getOptionLabel={option => option.title} isOptionEqualToValue={(option, value) => option.id === value.id} loading={loading} loadingText={<AutocompleteLoader />} noOptionsText={<AutocompleteNoOptions message=\"No sheets found\" />} onChange={(e, newGoogleSheetSheet) => {\n      if (newGoogleSheetSheet) {\n        formik.setFieldValue('googleSheetSheet', newGoogleSheetSheet);\n        getSheetColumnHeadersMutation.mutate();\n        dataConfigurationModalOpen.onTrue();\n      } else {\n        formik.setFieldValue('googleSheetSheet', null);\n      }\n    }} openOnFocus options={options} renderInput={params => <TextField {...params} fullWidth InputProps={{\n      ...params.InputProps,\n      endAdornment: <>\n                  {isLoadingNextPage ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                  {params.InputProps.endAdornment}\n                </>\n    }} label=\"Sheet name\" />} renderOption={(props, option) => {\n      if (!options.find(opt => opt.id === option.id)) {\n        return null;\n      }\n      return <li {...props} key={option.id} style={{\n        width: '100%'\n      }}>\n              <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" sx={{\n          pr: 2,\n          width: '100%'\n        }}>\n                <Box alignItems=\"center\" display=\"flex\" gap={1}>\n                  <Iconify icon=\"eva:file-outline\" width={20} />\n                  {option.title}\n                </Box>\n              </Box>\n            </li>;\n    }} value={options.find(opt => opt.id === formik.values.googleSheetSheet?.id) ?? null} data-sentry-element=\"Autocomplete\" data-sentry-source-file=\"GoogleSheetSelector.tsx\" />\n    </>;\n};\nexport default GoogleSheetSelector;","import type { GoogleDriveItemType } from '@riptech/google';\nimport type { BaseReportForm } from '@seller-utilities/types';\nimport type { InfiniteData, QueryKey } from '@tanstack/react-query';\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport type { FormikProps } from 'formik';\n\nimport type { GetGoogleDriveItemsResponse } from '../../../pages/api/integrations/google-drive/get-items';\nimport ServerlessAPI from '../../../utils/api/serverless/ServerlessAPI';\n\ninterface GoogleDriveFolderHooksType<T> {\n  disabled: boolean;\n  formik: FormikProps<T>;\n  googleDriveItemType: GoogleDriveItemType;\n  searchTerm: string;\n}\n\nexport default function useGoogleDriveFolder<T extends BaseReportForm>({\n  disabled,\n  formik,\n  searchTerm,\n  googleDriveItemType\n}: GoogleDriveFolderHooksType<T>) {\n  const {\n    data: driveData,\n    isFetchingNextPage: isFetchingNextDrivePage,\n    fetchNextPage: fetchNextDrivePage,\n    isRefetching: isRefetchingDrive,\n    isPending: isDrivePending\n  } = useInfiniteQuery<GetGoogleDriveItemsResponse, Error, InfiniteData<GetGoogleDriveItemsResponse>, QueryKey, string>(\n    {\n      enabled:\n        !disabled && !formik.values.isSavingToPreviousDestination && formik.values.downloadDestinationType !== 'Local',\n      queryFn: async ({ pageParam }) =>\n        ServerlessAPI.fetchGoogleDriveItems({\n          pageSize: 20,\n          pageToken: pageParam,\n          searchTerm,\n          itemType: googleDriveItemType\n        }),\n      initialPageParam: '',\n      getNextPageParam: (lastPage) => {\n        if (!lastPage.nextPageToken) {\n          return undefined;\n        }\n        return lastPage.nextPageToken;\n      },\n\n      queryKey: ['fetchGoogleDriveItems', googleDriveItemType, searchTerm]\n    }\n  );\n\n  return {\n    driveOptions: driveData?.pages.flatMap((page) => page.items) ?? [],\n    isFetchingNextDrivePage,\n    fetchNextDrivePage,\n    isRefetchingDrive,\n    isDrivePending\n  };\n}\n","import type { BaseReportForm } from '@seller-utilities/types';\nimport { useQuery } from '@tanstack/react-query';\nimport type { FormikProps } from 'formik';\n\nimport ServerlessAPI from '../../../utils/api/serverless/ServerlessAPI';\n\ninterface GoogleSheetHooksType<T> {\n  disabled: boolean;\n  formik: FormikProps<T>;\n}\n\nexport default function useGoogleSheet<T extends BaseReportForm>({ disabled, formik }: GoogleSheetHooksType<T>) {\n  const { googleDriveItem, downloadDestinationType } = formik.values;\n\n  return useQuery({\n    enabled: !disabled && downloadDestinationType === 'Google Sheet' && !!googleDriveItem,\n    queryFn: () => ServerlessAPI.fetchSheetsInGoogleSheet({ spreadsheetId: googleDriveItem!.id }),\n    queryKey: ['fetchGoogleSheetSheets', downloadDestinationType, googleDriveItem]\n  });\n}\n","import { InfiniteQueryUtils } from '@riptech/shared-ui';\nimport type { ReportDataType } from '@seller-utilities/database';\nimport type { BaseReportForm, UserReduxData } from '@seller-utilities/types';\nimport type { InfiniteData, QueryKey } from '@tanstack/react-query';\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport type { FormikProps } from 'formik';\n\nimport type { GetGoogleDriveDataConfigurationsResponse } from '../../../pages/api/integrations/google-drive/data-configuration/get';\nimport ServerlessAPI from '../../../utils/api/serverless/ServerlessAPI';\n\ninterface PreviousDestinationsHooksType<T> {\n  disabled: boolean;\n  formik: FormikProps<T>;\n  reportType: ReportDataType;\n  googleDriveConnection: UserReduxData['googleDriveConnection'] | null;\n}\n\nexport default function usePreviousDestinations<T extends BaseReportForm>({\n  disabled,\n  formik,\n  reportType,\n  googleDriveConnection\n}: PreviousDestinationsHooksType<T>) {\n  const {\n    data: previousDestinationData,\n    isPending: isPreviousDestinationPending,\n    fetchNextPage: fetchNextDestinations,\n    refetch: refetchPreviousDestinations\n  } = useInfiniteQuery<\n    GetGoogleDriveDataConfigurationsResponse,\n    Error,\n    InfiniteData<GetGoogleDriveDataConfigurationsResponse>,\n    QueryKey,\n    number\n  >({\n    enabled: !disabled && !!googleDriveConnection,\n    queryFn: async ({ pageParam }) =>\n      ServerlessAPI.getGoogleDriveDataConfigurations({\n        offset: pageParam,\n        reportType\n      }),\n    initialPageParam: 0,\n    meta: {\n      errorMessage: 'An error occurred while fetching previous destinations'\n    },\n    getNextPageParam: InfiniteQueryUtils.getArrayInfiniteQueryParams,\n\n    queryKey: ['fetchPreviousDestinations', formik.values.dataConfigurationId, reportType, googleDriveConnection]\n  });\n\n  return {\n    previousDestinations: previousDestinationData?.pages.flat() ?? [],\n    isPreviousDestinationPending,\n    fetchNextDestinations,\n    refetchPreviousDestinations\n  };\n}\n","import { Box, CircularProgress, Divider, IconButton, Link, ListSubheader, MenuItem, Stack, TextField, Tooltip, Typography } from '@mui/material';\nimport type { GoogleDriveItemType } from '@riptech/google';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { useBoolean } from '@riptech/minimal-ui/src/hooks/use-boolean';\nimport type { ReportDataType } from '@seller-utilities/database';\nimport type { BaseReportForm, DownloadDestinationType } from '@seller-utilities/types';\nimport type { FormikProps } from 'formik';\nimport React, { useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { useSelector } from 'react-redux';\nimport type { SaveDataconfigurationResponse } from '../../pages/api/integrations/google-drive/data-configuration/save';\nimport UserSelectors from '../../redux/selectors/userSelectors';\nimport DataDestinationUtils from '../../utils/DataDestinationUtils';\nimport TooltipMenuItem from '../common/TooltipMenuItem';\nimport DataConfigurationModal from './DataConfigurationModal';\nimport GoogleDriveItemSelector from './GoogleDriveItemSelector';\nimport GoogleSheetSelector from './GoogleSheetSelector';\nimport useGoogleDriveFolder from './hooks/useGoogleDriveFolders';\nimport useGoogleSheet from './hooks/useGoogleSheet';\nimport useGoogleSheetColumnHeaders from './hooks/useGoogleSheetColumnHeaders';\nimport usePreviousDestinations from './hooks/usePreviousDestinations';\nconst getDownloadDestinationLabel = (type: DownloadDestinationType): string => ({\n  'Google Drive': 'Upload data to Google Drive folder',\n  'Google Sheet': 'Write data to Google Sheet',\n  Local: 'Save CSV file to computer'\n} satisfies Record<DownloadDestinationType, string>)[type];\nconst tooltipText = 'In order to push data to Google Drive, you must first connect a Google Drive account on the Integrations Page';\ninterface DataDestinationPickerProps<T> {\n  readonly disabled: boolean;\n  readonly formik: FormikProps<T>;\n  readonly reportType: ReportDataType;\n  readonly selectedColumns?: Record<string, string>;\n}\nconst DataDestinationPicker = <T extends BaseReportForm,>({\n  disabled,\n  formik,\n  reportType,\n  selectedColumns\n}: DataDestinationPickerProps<T>) => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedDataDestination, setSelectedDataDestination] = useState<SaveDataconfigurationResponse | null>(null);\n  const googleDriveConnection = useSelector(UserSelectors.googleDriveConnectionSelector);\n  const googleDriveItemType: GoogleDriveItemType = formik.values.downloadDestinationType === 'Google Sheet' ? 'Spreadsheet' : 'Folder';\n  const dataConfigurationModalOpen = useBoolean();\n  const {\n    driveOptions,\n    isFetchingNextDrivePage,\n    fetchNextDrivePage,\n    isRefetchingDrive,\n    isDrivePending\n  } = useGoogleDriveFolder({\n    disabled,\n    formik,\n    googleDriveItemType,\n    searchTerm\n  });\n  const showDriveLoading = isDrivePending || isRefetchingDrive;\n  const {\n    ref: inViewRef\n  } = useInView({\n    onChange(inView) {\n      if (googleDriveConnection && !isDrivePending && inView) {\n        fetchNextDrivePage();\n      }\n    }\n  });\n  const {\n    data: googleSheetData,\n    isPending: isGoogleSheetPending\n  } = useGoogleSheet({\n    disabled,\n    formik\n  });\n  const googleSheetOptions = googleSheetData?.sheets ?? [];\n  const {\n    previousDestinations,\n    isPreviousDestinationPending,\n    fetchNextDestinations,\n    refetchPreviousDestinations\n  } = usePreviousDestinations({\n    disabled,\n    formik,\n    reportType,\n    googleDriveConnection\n  });\n  const {\n    ref: previousDestinationInViewRef\n  } = useInView({\n    onChange(inView) {\n      if (inView) {\n        fetchNextDestinations();\n      }\n    }\n  });\n  const getSheetColumnHeadersMutation = useGoogleSheetColumnHeaders({\n    googleDriveItemId: selectedDataDestination?.googleDriveItemId,\n    googleSheetSheetTitle: selectedDataDestination?.sheet?.title,\n    dataConfigurationId: formik.values.dataConfigurationId,\n    headerRowsToSkip: formik.values.headerRowsToSkip ?? 1\n  });\n  const getHandleEditOption = (option?: SaveDataconfigurationResponse) => () => {\n    if (option) {\n      setSelectedDataDestination(option);\n      formik.setValues(prev => ({\n        ...prev,\n        headerRowsToSkip: option.headerRowsToSkip ?? undefined,\n        isSavingToPreviousDestination: true,\n        downloadDestinationType: option.destinationType === 'Folder' ? 'Google Drive' : 'Google Sheet',\n        googleDriveItem: {\n          id: option.googleDriveItemId,\n          name: option.name\n        },\n        dataConfigurationId: option.id,\n        columnMappings: option.columnMappings ?? undefined,\n        googleSheetSheet: option.sheet ?? undefined,\n        menuItemDestination: option.name\n      }));\n      dataConfigurationModalOpen.onTrue();\n    }\n  };\n  interface RenderMenuItemValueType {\n    readonly value: string;\n    readonly downloadDestinationType: DownloadDestinationType;\n    readonly link: string;\n    readonly clickHandler: (option?: SaveDataconfigurationResponse) => void;\n  }\n  const renderMenuItemValue = ({\n    value,\n    downloadDestinationType,\n    link,\n    clickHandler\n  }: RenderMenuItemValueType) => <Stack alignItems=\"center\" direction=\"row\" justifyContent=\"space-between\" width=\"100%\" data-sentry-element=\"Stack\" data-sentry-component=\"renderMenuItemValue\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n      <Box alignItems=\"center\" display=\"flex\" gap={1} data-sentry-element=\"Box\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n        <Iconify icon={downloadDestinationType === 'Google Drive' ? 'eva:folder-fill' : 'eva:file-text-outline'} width={20} data-sentry-element=\"Iconify\" data-sentry-source-file=\"DataDestinationPicker.tsx\" />\n        <Typography variant=\"body2\" data-sentry-element=\"Typography\" data-sentry-source-file=\"DataDestinationPicker.tsx\">{String(value)}</Typography>\n      </Box>\n      <Box data-sentry-element=\"Box\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n        <Tooltip title=\"Edit\" data-sentry-element=\"Tooltip\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n          <IconButton onClick={e => e.stopPropagation()} onKeyUp={e => e.stopPropagation()} onMouseDown={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          clickHandler();\n          getSheetColumnHeadersMutation.mutate();\n        }} data-sentry-element=\"IconButton\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n            <Iconify icon=\"eva:edit-2-outline\" sx={{\n            color: 'text.secondary'\n          }} data-sentry-element=\"Iconify\" data-sentry-source-file=\"DataDestinationPicker.tsx\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={`Open ${downloadDestinationType}`} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n          <IconButton component={Link} href={link} onClick={e => e.stopPropagation()} onKeyUp={e => e.stopPropagation()} onMouseDown={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }} rel=\"noreferrer\" target=\"_blank\" data-sentry-element=\"IconButton\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n            <Iconify icon=\"eva:external-link-fill\" sx={{\n            color: 'text.secondary'\n          }} data-sentry-element=\"Iconify\" data-sentry-source-file=\"DataDestinationPicker.tsx\" />\n          </IconButton>\n        </Tooltip>\n      </Box>\n    </Stack>;\n  const downloadDestinationTypes = ['Local', 'Google Drive', 'Google Sheet'] satisfies Array<BaseReportForm['downloadDestinationType']>;\n  return <Stack ref={inViewRef} spacing={2} data-sentry-element=\"Stack\" data-sentry-component=\"DataDestinationPicker\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n      <TextField ref={previousDestinationInViewRef} disabled={disabled} fullWidth label=\"Choose data destination\" name=\"menuItemDestination\" onChange={e => {\n      if (downloadDestinationTypes.includes(e.target.value as DownloadDestinationType)) {\n        formik.setFieldValue('googleDriveItem', null);\n      }\n      return formik.handleChange(e);\n    }} select SelectProps={{\n      renderValue: value => {\n        const label = getDownloadDestinationLabel(value as DownloadDestinationType);\n        if (label) {\n          return label;\n        }\n        return renderMenuItemValue({\n          value: value as string,\n          downloadDestinationType: formik.values.downloadDestinationType,\n          link: DataDestinationUtils.getGoogleDriveItemLink(formik.values.googleDriveItem?.id ?? '', formik.values.downloadDestinationType, formik.values.googleSheetSheet?.id ? `${formik.values?.googleSheetSheet?.id}` : null),\n          clickHandler: dataConfigurationModalOpen.onTrue\n        });\n      },\n      MenuProps: {\n        PaperProps: {\n          style: {\n            maxHeight: 200\n          }\n        }\n      }\n    }} value={formik.values.menuItemDestination} data-sentry-element=\"TextField\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n        {downloadDestinationTypes.map(option => {\n        const menuItemDisabled = !disabled && option !== 'Local' && !googleDriveConnection;\n        return <TooltipMenuItem key={option} disabled={menuItemDisabled} onClick={() => {\n          formik.setValues(prev => ({\n            ...prev,\n            downloadDestinationType: option,\n            isSavingToPreviousDestination: false\n          }));\n        }} tooltipText={tooltipText} value={option}>\n              {getDownloadDestinationLabel(option)}\n            </TooltipMenuItem>;\n      })}\n\n        <Divider sx={{\n        my: 1\n      }} data-sentry-element=\"Divider\" data-sentry-source-file=\"DataDestinationPicker.tsx\" />\n        <ListSubheader data-sentry-element=\"ListSubheader\" data-sentry-source-file=\"DataDestinationPicker.tsx\">Previous Destinations</ListSubheader>\n        <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" data-sentry-element=\"Box\" data-sentry-source-file=\"DataDestinationPicker.tsx\">\n          {isPreviousDestinationPending ? <CircularProgress size={20} /> : null}\n        </Box>\n        {!isPreviousDestinationPending && previousDestinations.length !== 0 ? previousDestinations.map((option, i) => <MenuItem key={option.id} ref={i === previousDestinations.length - 1 ? previousDestinationInViewRef : null} onClick={() => {\n        setSelectedDataDestination(option);\n        formik.setValues(prev => ({\n          ...prev,\n          headerRowsToSkip: option.headerRowsToSkip ?? undefined,\n          isSavingToPreviousDestination: true,\n          downloadDestinationType: option.destinationType === 'Folder' ? 'Google Drive' : 'Google Sheet',\n          googleDriveItem: {\n            id: option.googleDriveItemId,\n            name: option.name\n          },\n          dataConfigurationId: option.id,\n          columnMappings: option.columnMappings ?? undefined,\n          googleSheetSheet: option.sheet ?? undefined\n        }));\n      }} sx={{\n        pr: 2,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }} value={option.name}>\n              {renderMenuItemValue({\n          value: option.name,\n          downloadDestinationType: option.destinationType === 'Folder' ? 'Google Drive' : 'Google Sheet',\n          link: DataDestinationUtils.getGoogleDriveItemLink(option.googleDriveItemId, option.destinationType === 'Folder' ? 'Google Drive' : 'Google Sheet', option?.sheet?.id ? `${option?.sheet?.id}` : null),\n          clickHandler: getHandleEditOption(option)\n        })}\n            </MenuItem>) : <MenuItem disabled>No previous destinations</MenuItem>}\n      </TextField>\n\n      {!formik.values.isSavingToPreviousDestination && formik.values.menuItemDestination !== 'Local' ? <GoogleDriveItemSelector key={formik.values.menuItemDestination} disabled={disabled} formik={formik} inViewRef={inViewRef} isLoadingNextPage={isFetchingNextDrivePage} loading={showDriveLoading} options={driveOptions} reportType={reportType} setSearchTerm={setSearchTerm} /> : null}\n\n      {formik.values.googleDriveItem && formik.values.menuItemDestination === 'Google Sheet' ? <GoogleSheetSelector key={formik.values.googleDriveItem.id} disabled={disabled} formik={formik} isLoadingNextPage={isFetchingNextDrivePage} loading={isGoogleSheetPending} options={googleSheetOptions} reportType={reportType} selectedColumns={selectedColumns} /> : null}\n\n      <DataConfigurationModal editConfigurationDetails={selectedDataDestination} getSheetColumnHeadersMutation={getSheetColumnHeadersMutation} onClose={dataConfigurationModalOpen.onFalse} onUpdate={refetchPreviousDestinations} open={!!selectedDataDestination && dataConfigurationModalOpen.value} reportFormik={formik} reportType={reportType} selectedColumns={selectedColumns} data-sentry-element=\"DataConfigurationModal\" data-sentry-source-file=\"DataDestinationPicker.tsx\" />\n    </Stack>;\n};\nexport default DataDestinationPicker;","import { Alert, IconButton, Tooltip } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport type { FC } from 'react';\nimport type { FetchMetadataStatus } from '../useReportFetcher';\ninterface NoActiveSessionAlertProps {\n  readonly metadataStatus: FetchMetadataStatus;\n  readonly fetchMetadata: () => Promise<void>;\n}\nconst NoActiveSessionAlert: FC<NoActiveSessionAlertProps> = ({\n  metadataStatus,\n  fetchMetadata\n}) => metadataStatus === 'error' ? <Alert action={<Tooltip title=\"Reconnect\">\n          <IconButton color=\"inherit\" onClick={fetchMetadata}>\n            <Iconify icon=\"mdi:reload\" />\n          </IconButton>\n        </Tooltip>} severity=\"warning\" sx={{\n  mb: 1\n}}>\n      No active session found. Please login to Seller Central.\n    </Alert> : null;\nexport default NoActiveSessionAlert;","import { Box, Button, Card, CardContent, CardHeader, IconButton, Stack, Tooltip } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { useRouter } from 'next/router';\nimport type { FC, PropsWithChildren } from 'react';\nimport React from 'react';\ninterface ReportFormContainerProps extends PropsWithChildren {\n  readonly title: string;\n  readonly tutorialUrl?: string;\n}\nconst ReportFormContainer: FC<ReportFormContainerProps> = ({\n  title,\n  tutorialUrl,\n  children\n}) => {\n  const router = useRouter();\n  return <Box display=\"flex\" justifyContent=\"center\" margin=\"auto\" data-sentry-element=\"Box\" data-sentry-component=\"ReportFormContainer\" data-sentry-source-file=\"ReportFormContainer.tsx\">\n      <Card sx={{\n      maxWidth: 600,\n      width: '100%'\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"ReportFormContainer.tsx\">\n        <CardHeader sx={{\n        p: 2\n      }} title={<Stack alignItems=\"center\" direction=\"row\" justifyContent=\"space-between\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={1}>\n                <Tooltip title=\"Go back\">\n                  <IconButton onClick={router.back}>\n                    <Iconify icon=\"eva:arrow-back-fill\" />\n                  </IconButton>\n                </Tooltip>\n                {title}\n              </Stack>\n              {tutorialUrl ? <Button color=\"inherit\" onClick={() => window.open(tutorialUrl, '_blank', 'noopener,noreferrer')} startIcon={<Iconify icon=\"eva:video-fill\" />}>\n                  Tutorial\n                </Button> : null}\n            </Stack>} data-sentry-element=\"CardHeader\" data-sentry-source-file=\"ReportFormContainer.tsx\" />\n        <CardContent data-sentry-element=\"CardContent\" data-sentry-source-file=\"ReportFormContainer.tsx\">{children}</CardContent>\n      </Card>\n    </Box>;\n};\nexport default ReportFormContainer;","import { Box, LinearProgress, Stack, Typography } from '@mui/material';\nimport type { FC } from 'react';\ninterface ReportProgressBarProps {\n  readonly progress: number;\n  readonly label: string;\n}\nconst ReportProgressBar: FC<ReportProgressBarProps> = ({\n  progress = 0,\n  label\n}) => <Box data-sentry-element=\"Box\" data-sentry-component=\"ReportProgressBar\" data-sentry-source-file=\"ReportProgressBar.tsx\">\n    <Typography variant=\"body2\" data-sentry-element=\"Typography\" data-sentry-source-file=\"ReportProgressBar.tsx\">{label}</Typography>\n    <Stack alignItems=\"center\" direction=\"row\" spacing={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ReportProgressBar.tsx\">\n      <Box sx={{\n      mr: 1,\n      width: '100%'\n    }} data-sentry-element=\"Box\" data-sentry-source-file=\"ReportProgressBar.tsx\">\n        <LinearProgress value={progress} variant=\"determinate\" data-sentry-element=\"LinearProgress\" data-sentry-source-file=\"ReportProgressBar.tsx\" />\n      </Box>\n      <Box sx={{\n      minWidth: 35\n    }} data-sentry-element=\"Box\" data-sentry-source-file=\"ReportProgressBar.tsx\">\n        <Typography color=\"text.secondary\" variant=\"body2\" data-sentry-element=\"Typography\" data-sentry-source-file=\"ReportProgressBar.tsx\">\n          {Math.floor(progress)}%\n        </Typography>\n      </Box>\n    </Stack>\n  </Box>;\nexport default ReportProgressBar;","import { IconButton, Stack, Tooltip } from '@mui/material';\nimport { Iconify } from '@riptech/minimal-ui/src/components/iconify';\nimport { closeSnackbar } from '@riptech/minimal-ui/src/components/snackbar';\nimport type { FC } from 'react';\ninterface ReportSnackbarActionsProps {\n  readonly snackbarKey: string;\n  readonly openLinkUrl: string;\n}\nconst ReportSnackbarActions: FC<ReportSnackbarActionsProps> = ({\n  snackbarKey,\n  openLinkUrl\n}) => <Stack alignItems=\"center\" direction=\"row\" spacing={0.5} data-sentry-element=\"Stack\" data-sentry-component=\"ReportSnackbarActions\" data-sentry-source-file=\"ReportSnackbarActions.tsx\">\n    <Tooltip title=\"Open Google Sheet\" data-sentry-element=\"Tooltip\" data-sentry-source-file=\"ReportSnackbarActions.tsx\">\n      <IconButton color=\"inherit\" onClick={() => {\n      chrome.tabs.create({\n        url: openLinkUrl\n      });\n      closeSnackbar(snackbarKey);\n    }} data-sentry-element=\"IconButton\" data-sentry-source-file=\"ReportSnackbarActions.tsx\">\n        <Iconify icon=\"eva:external-link-fill\" sx={{\n        color: 'text.secondary'\n      }} data-sentry-element=\"Iconify\" data-sentry-source-file=\"ReportSnackbarActions.tsx\" />\n      </IconButton>\n    </Tooltip>\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"small\" data-sentry-element=\"IconButton\" data-sentry-source-file=\"ReportSnackbarActions.tsx\">\n      <Iconify icon=\"mingcute:close-line\" width={16} data-sentry-element=\"Iconify\" data-sentry-source-file=\"ReportSnackbarActions.tsx\" />\n    </IconButton>\n  </Stack>;\nexport default ReportSnackbarActions;","import { enqueueSnackbar } from '@riptech/minimal-ui/src/components/snackbar';\nimport { ApiError, ErrorResponse } from '@riptech/utils';\nimport type { AxiosProgressEvent } from '@riptech/utils/src/errors/axiosUtil';\nimport type { GoogleSheetColumnMappings, SellerCentralMarketplace } from '@seller-utilities/database';\nimport type { BaseReportForm, DownloadDestinationType } from '@seller-utilities/types';\nimport { useMutation } from '@tanstack/react-query';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport type { WriteDataToSheetRequest } from '../../pages/api/integrations/google-drive/sheets/write-to-sheet';\nimport type { UploadSheetToGoogleDriveRequest } from '../../pages/api/integrations/google-drive/upload-sheet';\nimport UserSelectors from '../../redux/selectors/userSelectors';\nimport ServerlessAPI from '../../utils/api/serverless/ServerlessAPI';\nimport ReportSnackbarActions from './common/ReportSnackbarActions';\nexport interface DownloadReportInputType {\n  fileName: string;\n  destination: DownloadDestinationType;\n  csvText?: string;\n  sheetDataToWriteToDrive?: Array<Array<string | number>>;\n  csvData?: Array<Record<string, any>>;\n  reportFormData: BaseReportForm;\n}\nexport type FetchMetadataStatus = 'idle' | 'loading' | 'success' | 'error';\nexport default function useReportFetcher<T>(getMetadata: (mp: SellerCentralMarketplace) => Promise<T>, initialMetadata: T) {\n  const [downloadProgress, setDownloadProgress] = useState<number | null>(null);\n  const [uploadProgress, setUploadProgress] = useState<number | null>(null);\n  const [metadata, setMetadata] = useState<T>(initialMetadata);\n  const googleDriveConnection = useSelector(UserSelectors.googleDriveConnectionSelector);\n  const [metadataStatus, setMetadataStatus] = useState<FetchMetadataStatus>('idle');\n  const activeMarketplace = useSelector(UserSelectors.activeMarketplaceSelector);\n  const progressCallback = (progressEvent: AxiosProgressEvent) => {\n    const {\n      loaded,\n      total\n    } = progressEvent;\n    if (total) {\n      const percentComplete = Math.round(loaded * 100 / total);\n      setUploadProgress(percentComplete);\n    }\n  };\n  const viewDriveLinkKey = 'view-drive-link';\n  const uploadCSVToGoogleDriveMutation = useMutation({\n    meta: {\n      errorMessage: 'An error occurred while uploading report data to Google Drive'\n    },\n    mutationFn: (body: UploadSheetToGoogleDriveRequest['body']) => ServerlessAPI.uploadDataToGoogleDrive(body, progressCallback),\n    onSuccess: ({\n      googleDriveFolderUrl\n    }) => {\n      enqueueSnackbar('Successfully uploaded data to Google Drive', {\n        action: <ReportSnackbarActions openLinkUrl={googleDriveFolderUrl} snackbarKey={viewDriveLinkKey} />,\n        persist: true,\n        key: viewDriveLinkKey,\n        variant: 'success'\n      });\n    }\n  });\n  const viewSheetLinkKey = 'view-sheet-link';\n  const uploadCSVToGoogleSheetMutation = useMutation({\n    meta: {\n      errorMessage: 'An error occurred while uploading report data to Google Sheet'\n    },\n    mutationFn: (form: WriteDataToSheetRequest['body']) => ServerlessAPI.writeReportDataToSheet(form, progressCallback),\n    onSuccess: ({\n      googleSheetUrl\n    }) => {\n      enqueueSnackbar('Successfully uploaded data to Google Sheet', {\n        action: <ReportSnackbarActions openLinkUrl={googleSheetUrl} snackbarKey={viewSheetLinkKey} />,\n        persist: true,\n        key: viewSheetLinkKey,\n        variant: 'success'\n      });\n    }\n  });\n\n  /**\n   * Aggregates the given CSV data based on the provided column mapping.\n   * @param csvData The CSV data to be aggregated.\n   * @param columnMappings The mapping of column names to result keys where keys are the column indexes and values are the result keys.\n   * @returns The aggregated data.\n   */\n  const aggregateData = (csvData: Array<Record<string, any>>, columnMappings: GoogleSheetColumnMappings): Record<string, Array<string>> => {\n    const result: Record<string, Array<string>> = {};\n    Object.entries(columnMappings).forEach(([key, value]) => {\n      csvData.forEach(item => {\n        const itemValue = item[value];\n        if (!result[key]) {\n          result[key] = [itemValue];\n        } else {\n          result[key].push(itemValue);\n        }\n      });\n    });\n    return result;\n  };\n  const downloadReport = ({\n    csvText,\n    csvData,\n    sheetDataToWriteToDrive,\n    fileName,\n    destination,\n    reportFormData\n  }: DownloadReportInputType) => {\n    if (!csvText && !csvData?.length && !sheetDataToWriteToDrive?.length) {\n      throw new Error('No data to download');\n    }\n    const {\n      googleDriveItem,\n      reportType,\n      dataConfigurationId\n    } = reportFormData;\n    if (csvText) {\n      if (destination !== 'Local') {\n        throw new Error(`Unexpected destination type: ${destination}`);\n      }\n      const blob = new Blob([csvText], {\n        type: 'text/csv'\n      });\n      const link = document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      link.download = `${fileName}.csv`;\n      link.click();\n      enqueueSnackbar('Successfully downloaded all report data', {\n        variant: 'success'\n      });\n    } else if (sheetDataToWriteToDrive) {\n      if (!googleDriveConnection) {\n        throw new Error('No Google Drive integration found');\n      }\n      if (!googleDriveItem) {\n        throw new Error('No Google Drive folder selected');\n      }\n      uploadCSVToGoogleDriveMutation.mutate({\n        fileName,\n        dataToWrite: sheetDataToWriteToDrive,\n        driveFolderId: googleDriveItem.id,\n        driveFolderName: googleDriveItem.name,\n        reportType,\n        dataConfigurationId\n      });\n    } else if (csvData && destination === 'Google Sheet') {\n      const {\n        googleSheetSheet,\n        columnMappings\n      } = reportFormData;\n      if (!columnMappings || !dataConfigurationId) {\n        throw new Error('No column mappings found');\n      }\n      if (!googleSheetSheet || !googleDriveItem) {\n        throw new Error('No Google Sheet sheet selected');\n      }\n      uploadCSVToGoogleSheetMutation.mutate({\n        mappingsToWrite: aggregateData(csvData, columnMappings),\n        dataConfigurationId,\n        sheet: googleSheetSheet,\n        spreadsheetId: googleDriveItem.id\n      });\n    }\n  };\n  const fetchMetadata = useCallback(async () => {\n    if (activeMarketplace) {\n      setMetadataStatus('loading');\n      try {\n        setMetadata(await getMetadata(activeMarketplace));\n        setMetadataStatus('success');\n      } catch (err: unknown) {\n        setMetadataStatus('error');\n        if (err instanceof ErrorResponse && err.rawCode !== 'ERR_NETWORK' && err.statusCode !== ApiError.Forbidden) {\n          enqueueSnackbar(err.message, {\n            variant: 'error'\n          });\n        }\n      }\n    }\n  }, [activeMarketplace, getMetadata]);\n  useEffect(() => {\n    fetchMetadata();\n  }, [fetchMetadata]);\n  const loadingDetails = useMemo(() => {\n    const isWritingToSheet = uploadCSVToGoogleSheetMutation.isPending;\n    const isUploadingToDrive = uploadCSVToGoogleDriveMutation.isPending;\n    const isDownloading = Number.isFinite(downloadProgress);\n    if (isDownloading) {\n      return {\n        label: 'Downloading report data...',\n        progress: downloadProgress ?? 0\n      };\n    }\n    if (isUploadingToDrive) {\n      return {\n        label: 'Uploading report data to Google Drive...',\n        progress: uploadProgress ?? 0\n      };\n    }\n    if (isWritingToSheet) {\n      return {\n        label: 'Writing report data to Google Sheet...',\n        progress: uploadProgress ?? 0\n      };\n    }\n    return null;\n  }, [downloadProgress, uploadCSVToGoogleDriveMutation.isPending, uploadCSVToGoogleSheetMutation.isPending, uploadProgress]);\n  return {\n    downloadReport,\n    setUploadProgress,\n    setDownloadProgress,\n    loadingDetails,\n    fetchMetadata,\n    metadata,\n    metadataStatus\n  };\n}","import { LoadingButton } from '@mui/lab';\nimport { Button, Grid, Link, Stack, Typography } from '@mui/material';\nimport { enqueueSnackbar } from '@riptech/minimal-ui/src/components/snackbar';\nimport type { FC } from 'react';\nimport React, { useCallback, useState } from 'react';\nimport { useAppContext } from '../hooks/useAppContext';\ninterface EmailVerificationPageProps {\n  readonly logout: () => Promise<void>;\n  readonly resendVerificationEmail: () => Promise<void>;\n}\nconst EmailVerificationPage: FC<EmailVerificationPageProps> = ({\n  resendVerificationEmail,\n  logout\n}) => {\n  const {\n    appEmail,\n    appName\n  } = useAppContext();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const sendVerificationEmail = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Resend verification email\n      await resendVerificationEmail();\n      enqueueSnackbar('A verification email was sent to your email address. Please check your inbox.', {\n        variant: 'success'\n      });\n    } catch (err) {\n      enqueueSnackbar('An error occurred while resending verification email', {\n        variant: 'error'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [resendVerificationEmail]);\n  return <Grid container justifyContent=\"center\" spacing={4} data-sentry-element=\"Grid\" data-sentry-component=\"EmailVerificationPage\" data-sentry-source-file=\"email-verification.tsx\">\n      <Grid item xs={12} data-sentry-element=\"Grid\" data-sentry-source-file=\"email-verification.tsx\">\n        <Typography variant=\"h4\" data-sentry-element=\"Typography\" data-sentry-source-file=\"email-verification.tsx\">Email Verification Required</Typography>\n      </Grid>\n\n      <Grid item xs={12} data-sentry-element=\"Grid\" data-sentry-source-file=\"email-verification.tsx\">\n        <Typography color=\"text.secondary\" variant=\"body1\" data-sentry-element=\"Typography\" data-sentry-source-file=\"email-verification.tsx\">\n          Before you can use {appName}, you must verify your email. If you do not see the email, please check your spam\n          folder or request a new email verification request by clicking the button below.\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12} data-sentry-element=\"Grid\" data-sentry-source-file=\"email-verification.tsx\">\n        <Typography color=\"text.secondary\" variant=\"body1\" data-sentry-element=\"Typography\" data-sentry-source-file=\"email-verification.tsx\">\n          For further assistance, please contact <Link href={`mailto:${appEmail}`} data-sentry-element=\"Link\" data-sentry-source-file=\"email-verification.tsx\">support</Link>.\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12} data-sentry-element=\"Grid\" data-sentry-source-file=\"email-verification.tsx\">\n        <Stack alignItems=\"center\" direction={{\n        sm: 'row',\n        xs: 'column'\n      }} spacing={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"email-verification.tsx\">\n          <Button color=\"inherit\" fullWidth onClick={logout} variant=\"outlined\" data-sentry-element=\"Button\" data-sentry-source-file=\"email-verification.tsx\">\n            Logout\n          </Button>\n          <LoadingButton color=\"inherit\" fullWidth loading={isLoading} onClick={sendVerificationEmail} variant=\"contained\" data-sentry-element=\"LoadingButton\" data-sentry-source-file=\"email-verification.tsx\">\n            Resend Verification\n          </LoadingButton>\n        </Stack>\n      </Grid>\n    </Grid>;\n};\nexport default EmailVerificationPage;","// eslint-disable-next-line import/prefer-default-export\nexport { default as EmailVerificationPage } from './email-verification';\n","import {\n  getGridDateOperators,\n  getGridNumericOperators,\n  getGridStringOperators,\n  type GridFilterItem,\n  type GridFilterModel,\n  GridLogicOperator,\n  type GridSortModel\n} from '@mui/x-data-grid-pro';\nimport type { SQL, SQLWrapper } from 'drizzle-orm';\nimport { and, asc, desc, eq, gt, gte, ilike, inArray, lt, lte, not, notIlike, or, sql } from 'drizzle-orm';\nimport type { PgTableWithColumns, TableConfig } from 'drizzle-orm/pg-core';\nimport moment from 'moment-timezone';\n\nexport default class DataGridUtils {\n  static createDrizzleFilter<T extends TableConfig>(\n    table: PgTableWithColumns<T>,\n    { items, logicOperator = GridLogicOperator.And }: GridFilterModel\n  ): SQL | undefined {\n    const drizzleFilters: Array<SQLWrapper> = [];\n\n    items\n      .filter(({ value }) => value !== undefined)\n      .forEach((filter) => {\n        const { field, operator, value } = filter;\n        if (!table[field]) {\n          return;\n        }\n\n        switch (operator) {\n          // String filters\n          case 'contains':\n            drizzleFilters.push(ilike(table[field], `%${value}%`));\n            break;\n          case 'doesNotContain':\n            drizzleFilters.push(notIlike(table[field], `%${value}%`));\n            break;\n          case 'startsWith':\n            drizzleFilters.push(ilike(table[field], `${value}%`));\n            break;\n          case 'endsWith':\n            drizzleFilters.push(ilike(table[field], `%${value}`));\n            break;\n          case 'equals':\n            drizzleFilters.push(ilike(table[field], value));\n            break;\n          // Select filters\n          case 'is':\n            drizzleFilters.push(eq(table[field], value));\n            break;\n          case 'not':\n            drizzleFilters.push(not(eq(table[field], value)));\n            break;\n          case 'isAnyOf':\n            if (value.length) {\n              drizzleFilters.push(inArray(table[field], value));\n            }\n            break;\n          // Date filters\n          case 'after':\n            drizzleFilters.push(gt(table[field], moment(value).endOf('day').toISOString()));\n            break;\n          case 'onOrAfter':\n            drizzleFilters.push(gte(table[field], moment(value).endOf('day').toISOString()));\n            break;\n          case 'before':\n            drizzleFilters.push(lt(table[field], moment(value).startOf('day').toISOString()));\n            break;\n          case 'onOrBefore':\n            drizzleFilters.push(lte(table[field], moment(value).startOf('day').toISOString()));\n            break;\n          // Number filters\n          case '=':\n            drizzleFilters.push(eq(table[field], Number.isFinite(+value) ? +value : undefined));\n            break;\n          case '!=':\n            drizzleFilters.push(not(eq(table[field], Number.isFinite(+value) ? +value : undefined)));\n            break;\n          case '>':\n            drizzleFilters.push(gt(table[field], Number.isFinite(+value) ? +value : undefined));\n            break;\n          case '>=':\n            drizzleFilters.push(gte(table[field], Number.isFinite(+value) ? +value : undefined));\n            break;\n          case '<':\n            drizzleFilters.push(lt(table[field], Number.isFinite(+value) ? +value : undefined));\n            break;\n          case '<=':\n            drizzleFilters.push(lte(table[field], Number.isFinite(+value) ? +value : undefined));\n            break;\n          // Add more cases for other operators if needed\n          default:\n            // Unknown operator\n            break;\n        }\n      });\n\n    if (!drizzleFilters.length) {\n      return undefined;\n    }\n\n    return logicOperator === GridLogicOperator.And ? and(...drizzleFilters) : or(...drizzleFilters);\n  }\n\n  static createDrizzleSort<T extends TableConfig>(table: PgTableWithColumns<T>, sortModel: GridSortModel) {\n    return sortModel\n      .filter(({ sort }) => sort)\n      .map(({ field, sort }) => {\n        const sortValue = table[field].columnType === 'string' ? sql`lower(${table[field]})` : table[field];\n        if (sort === 'asc') {\n          return asc(sortValue);\n        }\n\n        return desc(sortValue);\n      });\n  }\n\n  static createCustomSingleSelectFilter<T extends string = string>(\n    filters: Array<GridFilterItem>,\n    logicOperator: GridLogicOperator,\n    options: Array<T>,\n    getSingleFilterValue: (item: T) => SQLWrapper\n  ) {\n    if (!filters.length) {\n      return undefined;\n    }\n\n    const operationResults: Array<SQLWrapper | undefined> = [];\n    filters.forEach((filter) => {\n      if (filter.value) {\n        switch (filter.operator) {\n          case 'is':\n            operationResults.push(getSingleFilterValue(filter.value));\n            break;\n          case 'not':\n            operationResults.push(\n              or(...options.filter((status) => status !== filter.value).map((value) => getSingleFilterValue(value)))\n            );\n            break;\n          case 'isAnyOf':\n            operationResults.push(or(...(filter.value || []).map((status: T) => getSingleFilterValue(status))));\n            break;\n          default:\n        }\n      }\n    });\n\n    return logicOperator === GridLogicOperator.And ? and(...operationResults) : or(...operationResults);\n  }\n\n  static STRING_FILTERS = getGridStringOperators().filter((operator) =>\n    ['contains', 'doesNotContain', 'startsWith', 'endsWith', 'equals'].includes(operator.value)\n  );\n\n  static NUMBER_FILTERS = getGridNumericOperators().filter((operator) =>\n    ['=', '!=', '>', '>=', '<', '<='].includes(operator.value)\n  );\n\n  static DATE_FILTERS = getGridDateOperators().filter((operator) =>\n    ['after', 'onOrAfter', 'before', 'onOrBefore'].includes(operator.value)\n  );\n}\n","import _ from 'lodash';\n\nexport default class InfiniteQueryUtils {\n  static getArrayInfiniteQueryParams<T extends { length: number }>(lastPage: T, allPages: Array<T>) {\n    if (!lastPage.length) {\n      return null;\n    }\n    return _.sumBy(allPages, (page) => page.length);\n  }\n}\n","import type { Action, Dispatch } from '@reduxjs/toolkit';\nimport { enqueueSnackbar } from '@riptech/minimal-ui/src/components/snackbar';\n\nexport default class NotificationUtils {\n  static dismissNotification = async <T extends { id: string }>(\n    reduxNotifications: Array<T>,\n    notificationId: string,\n    dispatch: Dispatch,\n    setNotifications: (newNotifications: Array<T>) => Action,\n    dismissNotification: (notification: T) => Promise<Record<string, never>>,\n    closeNotificationDrawer: () => void\n  ) => {\n    try {\n      await dismissNotification({ id: notificationId } as T);\n\n      const newNotifications = reduxNotifications.filter((n) => n.id !== notificationId);\n      dispatch(setNotifications(newNotifications));\n\n      if (!newNotifications.length) {\n        closeNotificationDrawer();\n      }\n    } catch (err) {\n      // Show an error snackbar\n      enqueueSnackbar('An error occurred while dismissing notification', { variant: 'error' });\n    }\n  };\n}\n","import sanitize from 'sanitize-html';\n\nexport default class StringUtils {\n  static replaceHtmlCharacterCodes = (charCodeIncludedString: string): string =>\n    document.createTextNode(sanitize(charCodeIncludedString)).data;\n}\n","export { default as DataGridUtils } from './DataGridUtils';\nexport { default as InfiniteQueryUtils } from './InfiniteQueryUtils';\nexport { default as NotificationUtils } from './NotificationUtils';\nexport { default as StringUtils } from './StringUtils';\n","// @ts-fix-composite-build-import\nimport type {} from '@riptech/minimal-ui/src/theme/core';\n\nexport * from './components';\nexport * from './hooks';\nexport * from './pages';\nexport * from './utils';\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["ReportDownloadUtils","sanitizeValue","value","concat","replaceAll","sanitizeValuesWithComma","keys","row","forEach","key","includes","handleNetworkError","err","rawCode","HTTPErrors","Unauthorized","message","getFormattedPeriod","reportingRange","periodEndDate","moment","format","getRangeFiltersByReportingRange","yearString","id","utc","valueType","toLowerCase","BadRequest","convertMultilineTextToArray","_","Array","from","Set","text","trim","split","map","val","toUpperCase","filter","generateSheetData","csvData","columns","Object","values","rowToAdd","name","generateCSVText","join","getSellerCentralSleepTime","ReportFormUtils","isInvalidDestination","formValues","isSheet","downloadDestinationType","isDrive","missingDataConfiguration","isSavingToPreviousDestination","dataConfigurationId","missingDriveItem","googleDriveItem","missingSheetSheet","googleSheetSheet","incompleteDataConfiguration","ReportRequestUtils","generateReportRefererUrl","url","payload","viewId","queryKeyValue","fromEntries","filterSelections","option","URLSearchParams","selectedCountries","BaseRequest","scrapeCsrfToken","tab","chrome","tabs","create","active","csrfTokenUrl","ServerError","injectionResults","scripting","executeScript","func","csrfEl","document","querySelector","attributes","getNamedItem","target","tabId","remove","csrfToken","result","addHeadersOverride","param","urlFilter","referer","origin","declarativeNetRequest","updateDynamicRules","addRules","action","requestHeaders","header","operation","HeaderOperation","SET","type","RuleActionType","MODIFY_HEADERS","condition","initiatorDomains","runtime","resourceTypes","ResourceType","RULE_ID","priority","removeRuleIds","handleCommonErrors","error","statusCode","ApiError","Forbidden","baseUrl","removeHeadersOverride","getCsrfToken","handleGraphQLLoginRedirect","response","status","makeAPIRequest","requestType","axios","post","e","makeRESTRequest","makeGraphQLRequest","constructor","parseInt","createAxiosInstance","axiosConfig","adapter","baseURL","fetchOptions","redirect","headers","Accept","GraphQLHelper","createRequestBody","query","variables","operationName","isArray","JSON","stringify","gqlmin","reduce","acc","currentQuery","index","push","undefined","SalesAndTrafficRequestUtils","getLegacyReportId","SELLER_METADATA_REQUEST_BODY","gql","input","getSalesAndTrafficReportDataQuery","endDate","amazonDateRange","endISO","granularity","legacyReportId","startDate","startISO","getSalesAndTrafficByASINReportDataQuery","asins","page","getReportColumnsQuery","SellerCentralRequest","fetchSQPAPIData","isBrands","data","reportsV2","fetchSCPAPIData","SCPRequestUtils","getSCPFetchAPIDataReferer","fetchTSTAPIData","TSTRequestUtils","getTSTFetchAPIDataReferer","fetchMetadata","marketplace","baseRefererUrl","requestUrl","fetchSQPMetadata","fetchSCPMetadata","fetchTSTMetadata","fetchSalesAndTrafficReportByASIN","fetchSalesAndTrafficReportColumns","fetchSalesAndTrafficReport","fetchSellerMetadata","SUPPORTED_MARKETPLACES","urlSuffix","SellerCentralRequestManager","getInstance","marketplaceCache","request","_len","arguments","length","params","_key","getBaseUrl","BusinessRequestUtils","getColumns","labels","SALES_AND_TRAFFIC_COLUMN_LABELS","order","SALES_AND_TRAFFIC_COLUMNS_ORDER","SALES_AND_TRAFFIC_BY_SKU_LABELS","SALES_AND_TRAFFIC_BY_SKU_ORDER","SALES_AND_TRAFFIC_BY_CHILD_ASIN_LABELS","SALES_AND_TRAFFIC_BY_CHILD_ASIN_ORDER","SALES_AND_TRAFFIC_BY_PARENT_ASIN_LABELS","SC_MA_Date_25913","SC_MA_OrderedProductSales_40591","SCA_BR_OrderedProductSales_BB","SC_MA_UnitsOrdered_40590","SCA_BR_UnitsOrdered_BB","SC_MA_TotalOrderItems_1","SCA_BR_TotalOrderItems_BB","SC_MA_SalesPerOrderItem_1","SCA_BR_AverageSalesPerOrderItem_BB","SC_MA_UnitsPerOrderItem_1","SCA_BR_AverageUnitsPerOrderItem_BB","SC_MA_AverageSellingPrice_25919","SCA_BR_AverageSellingPrice_BB","SC_MA_MobileAppPageViews","SC_MA_MobileAppPageViews_BB","SC_MA_BrowserPageViews","SC_MA_BrowserPageViews_BB","SC_MA_PageViews_Total","SC_MA_PageViews_Total_BB","SC_MA_MobileAppSessions","SC_MA_MobileAppSessions_BB","SC_MA_BrowserSessions","SC_MA_BrowserSessions_BB","SC_MA_Sessions_Total","SC_MA_Sessions_Total_BB","SC_MA_BuyBoxPercentage_25956","SC_MA_BuyBoxPercentage_25956_BB","SC_MA_OrderItemSessionPercentage_1","SCA_BR_OrderItemSessionPercentage_BB_NEW","SC_MA_UnitSessionPercentage_25957","SCA_BR_UnitSessionPercentage_BB_NEW","SC_MA_AverageOfferCount_25954","SC_MA_AverageParentItems_25958","SC_MA_UnitsRefunded_25980","SC_MA_RefundRate_25981","SC_MA_FeedbackReceived_25982","SC_MA_NegativeFeedbackReceived_25983","SC_MA_ReceivedNegativeFeedbackRate_25984","SC_MA_AToZClaimsGranted_25985","SC_MA_ClaimsAmount_25986","SC_MA_ShippedProductSales_0002","SC_MA_UnitsShipped_0001","SC_MA_OrdersShipped_0001","SALES_AND_TRAFFIC_BY_PRODUCT_BASE_ORDER","SALES_AND_TRAFFIC_BY_PRODUCT_BASE_LABELS","SC_MA_MobileAppSessionPercentage","SC_MA_MobileAppSessionPercentage_BB","SC_MA_BrowserSessionPercentage","SC_MA_BrowserSessionPercentage_BB","SC_MA_SessionPercentage_Total","SC_MA_SessionPercentage_Total_BB","SC_MA_MobileAppPageViewsPercentage","SC_MA_MobileAppPageViewsPercentage_BB","SC_MA_BrowserPageViewsPercentage","SC_MA_BrowserPageViewsPercentage_BB","SC_MA_PageViewsPercentage_Total","SC_MA_PageViewsPercentage_Total_BB","SALES_AND_TRAFFIC_BY_PARENT_ASIN_ORDER","SC_MA_ParentASIN_25990","MYG_Growth_Opportunities","SC_MA_ChildASIN_25991","SC_MA_SKU_25959","BusinessReportDateKey","BusinessReportTitleKey","GrowthOpportunitiesRecommendationKey","HiddenReportColumnIndexesForSelection","Date","SKU","ChildASIN","ParentASIN","HiddenReportColumnIndexesForComparison","SCP_DATA_COLUMNS","asin","category","clicks","period","SQPRequestUtils","SQP_ASIN_DATA_COLUMNS","SQP_BRAND_DATA_COLUMNS","brand","getSQPFetchAPIDataReferer","TST_DATA_COLUMNS","brands","keywords","DataDestinationUtils","isUrl","test","isGoogleDriveItemUrl","isGoogleDriveFolderUrl","isGoogleSheetUrl","getGoogleDriveFolderUrl","folderId","getGoogleSheetUrl","spreadsheetId","sheetId","getGoogleDriveItemLink","fileId","common_TooltipMenuItem","disabled","tooltipText","children","props","jsx_runtime","jsx","Tooltip","disableHoverListener","placement","title","data-sentry-element","data-sentry-component","data-sentry-source-file","div","MenuItem","styles","alignItems","display","flexDirection","gap","height","justifyContent","width","Autocomplete_AutocompleteNoOptions","link","jsxs","Box","sx","autocompleteStyles","Typography","fontWeight","Link","color","href","location","textDecoration","REPORT_COLUMNS","SQPASINs","SQPBrands","SCP","TST","BusinessByDate","BusinessByASINChild","BusinessByASINSKU","BusinessByASINParent","dataDestination_DataConfigurationModal","reportFormik","editConfigurationDetails","getSheetColumnHeadersMutation","onClose","onUpdate","reportType","open","selectedColumns","openDialog","useConfirmationDialog","options","useMemo","entries","sheet","driveItemId","googleDriveItemId","spreadsheetLink","saveDataConfigurationMutation","useMutation","meta","errorMessage","mutationFn","ServerlessAPI","saveDataConfiguration","deleteDataConfigurationMutation","deleteDataConfiguration","upateDataConfigurationMutation","updateDataConfiguration","formik","useFormik","enableReinitialize","initialValues","configName","overwriteRows","columnMappings","headerRowsToSkip","destinationType","onSubmit","formikHelpers","mutate","configId","onSuccess","setSubmitting","setValues","prev","menuItemDestination","setFieldValue","enqueueSnackbar","variant","resetForm","validateOnMount","validationSchema","Yup","shape","min","required","oneOf","max","closeModal","useCallback","actions","isPending","onClick","loading","onApprove","isValid","dirty","isEnterAction","handleSubmit","selectedValues","Fragment","BackdropLoader","Modal","maxWidth","Stack","spacing","TextField","autoFocus","errors","touched","fullWidth","helperText","label","onBlur","handleBlur","onChange","handleChange","FormControl","RadioGroup","defaultValue","FormControlLabel","control","Radio","direction","IconButton","component","rel","Iconify","icon","margin","CircularProgress","columnHeaders","flex","borderRadius","column","Autocomplete","autoComplete","filterSelectedOptions","getOptionLabel","x","isOptionEqualToValue","noOptionsText","AutocompleteNoOptions","reportColumn","newMappings","renderInput","minWidth","renderOption","react","createElement","li","style","has","find","align","Autocomplete_AutocompleteLoader","dataDestination_GoogleDriveItemSelector","inViewRef","setSearchTerm","isLoadingNextPage","getSelectorLabel","autoHighlight","clearOnEscape","filterOptions","loadingText","AutocompleteLoader","newFile","onInputChange","debounce","event","newInputValue","isGoogleDriveType","isGoogleSheetType","openOnFocus","InputProps","endAdornment","size","isThreeOptionsLeft","ref","pr","useGoogleSheetColumnHeaders","googleSheetSheetTitle","getSheetColumnHeaders","sheetTitle","dataDestination_GoogleSheetSelector","dataConfigurationModalOpen","useBoolean","DataConfigurationModal","onFalse","newGoogleSheetSheet","onTrue","opt","getDownloadDestinationLabel","Local","dataDestination_DataDestinationPicker","selectedDataDestination","googleSheetData","searchTerm","useState","setSelectedDataDestination","googleDriveConnection","useSelector","UserSelectors","googleDriveConnectionSelector","googleDriveItemType","driveOptions","isFetchingNextDrivePage","fetchNextDrivePage","isRefetchingDrive","isDrivePending","useGoogleDriveFolder","driveData","isFetchingNextPage","fetchNextPage","isRefetching","useInfiniteQuery","enabled","queryFn","pageParam","fetchGoogleDriveItems","pageSize","pageToken","itemType","initialPageParam","getNextPageParam","lastPage","nextPageToken","queryKey","pages","flatMap","items","useInView","inView","isGoogleSheetPending","useGoogleSheet","useQuery","fetchSheetsInGoogleSheet","googleSheetOptions","sheets","previousDestinations","isPreviousDestinationPending","fetchNextDestinations","refetchPreviousDestinations","usePreviousDestinations","previousDestinationData","refetch","getGoogleDriveDataConfigurations","offset","InfiniteQueryUtils","getArrayInfiniteQueryParams","flat","previousDestinationInViewRef","getHandleEditOption","renderMenuItemValue","clickHandler","String","stopPropagation","onKeyUp","onMouseDown","preventDefault","downloadDestinationTypes","select","SelectProps","renderValue","MenuProps","PaperProps","maxHeight","menuItemDisabled","TooltipMenuItem","Divider","my","ListSubheader","i","GoogleDriveItemSelector","GoogleSheetSelector","__webpack_exports__","Z","metadataStatus","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Alert","severity","mb","tutorialUrl","router","useRouter","Card","CardHeader","p","back","Button","window","startIcon","CardContent","progress","mr","LinearProgress","Math","floor","common_ReportSnackbarActions","snackbarKey","openLinkUrl","closeSnackbar","useReportFetcher","getMetadata","initialMetadata","downloadProgress","setDownloadProgress","uploadProgress","setUploadProgress","metadata","setMetadata","setMetadataStatus","activeMarketplace","activeMarketplaceSelector","progressCallback","loaded","total","progressEvent","round","viewDriveLinkKey","uploadCSVToGoogleDriveMutation","uploadDataToGoogleDrive","body","googleDriveFolderUrl","ReportSnackbarActions","persist","viewSheetLinkKey","uploadCSVToGoogleSheetMutation","writeReportDataToSheet","form","googleSheetUrl","aggregateData","item","itemValue","ErrorResponse","useEffect","downloadReport","csvText","sheetDataToWriteToDrive","fileName","destination","reportFormData","blob","Blob","URL","createObjectURL","download","click","dataToWrite","driveFolderId","driveFolderName","mappingsToWrite","loadingDetails","isWritingToSheet","isUploadingToDrive","isFinite","DataGridUtils","createDrizzleFilter","table","logicOperator","GridLogicOperator","And","drizzleFilters","field","operator","ilike","notIlike","eq","not","inArray","gt","endOf","toISOString","gte","lt","startOf","lte","Number","and","or","createDrizzleSort","sortModel","sort","sortValue","columnType","sql","asc","desc","createCustomSingleSelectFilter","filters","getSingleFilterValue","operationResults","STRING_FILTERS","getGridStringOperators","NUMBER_FILTERS","getGridNumericOperators","DATE_FILTERS","getGridDateOperators","allPages","NotificationUtils","dismissNotification","reduxNotifications","notificationId","dispatch","setNotifications","closeNotificationDrawer","newNotifications","n","StringUtils","replaceHtmlCharacterCodes","createTextNode","sanitize","charCodeIncludedString"],"sourceRoot":""}